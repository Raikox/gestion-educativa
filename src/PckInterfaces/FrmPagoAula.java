/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package PckInterfaces;

import PckConexion.ClsConexion;
import PckEntidad.ClsEntidadAlumnoPago;
import PckEntidad.ClsEntidadAsignar;
import PckEntidad.ClsEntidadNivel;
import PckEntidad.ClsEntidadPagoAula;
import PckEntidad.ClsEntidadPagoAulaDeuda;
import PckEntidad.ClsEntidadPeriodo;
import PckEntidad.ClsEntidadSeccion;
import PckNegocio.ClsAlumno;
import PckNegocio.ClsNivel;
import PckNegocio.ClsPagoAula;
import PckNegocio.ClsPagoAulaDeuda;
import PckNegocio.ClsPeriodo;
import PckNegocio.ClsSeccion;
import static java.awt.image.ImageObserver.WIDTH;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellRenderer;
import javax.swing.table.TableColumn;
import prymatricula.ClsMisc;

import static prymatricula.ClsMisc.obtenerAnioActual;

/**
 *
 * @author John Kevin Montes De Oca Vizcarra
 * @email jkevin.mv@gmail.com
 */
public class FrmPagoAula extends javax.swing.JInternalFrame {

    DefaultListModel dlmItem = new DefaultListModel();
    ArrayList<String> arrayItemId = new ArrayList();
    ArrayList<String> arrayNivelId = new ArrayList();
    ArrayList<String> arrayPeriodoId = new ArrayList();
    ArrayList<String> arraySeccionId = new ArrayList();
    ArrayList<String> codigoPeriodo2 = new ArrayList();
    ArrayList<String> codigoSeccion2 = new ArrayList();
    Connection con;
    String StrCodAlu="";
    String nombre ="";
    
    /**
     * Creates new form FrmPagoAula
     */
    public FrmPagoAula() {
        initComponents();
        
        grupo.add(radioPeriodo);
        grupo.add(radioSeccion);
        grupo.add(radioAlumno);
        radioPeriodo.setSelected(true); 
        
        grupo2.add(rbnHabilitado);
        grupo2.add(rbnDeshabilitado);
        
        String seleccionado = CargaComboAnio();
        cmbAnio.setSelectedItem(seleccionado); 
        cmbAnioo.setSelectedItem(seleccionado);
        
        cargaComboNivel();
        if(cmbNivel.getSelectedIndex() != -1)
        {
            cargaComboPeriodo();
            
            if(cmbPeriodo.getSelectedIndex() != -1)
            {
               cargaComboSeccion(); 
            }
        }        
        
        cargaPeriodoA();
        cargaSeccionA();
        if(cmbSeccion2.getSelectedIndex() != -1)
        {
           actualizarTablaAlumno(); 
        }
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        grupo = new javax.swing.ButtonGroup();
        grupo2 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        jPanel3 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        cmbAnio = new javax.swing.JComboBox();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtNombre = new javax.swing.JTextArea();
        btnAgregar = new javax.swing.JButton();
        btnEditar = new javax.swing.JButton();
        btnSalir3 = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        lstItem = new javax.swing.JList<>();
        cmbAnioo = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        rbnHabilitado = new javax.swing.JRadioButton();
        rbnDeshabilitado = new javax.swing.JRadioButton();
        btnSave = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        cmbNivel = new javax.swing.JComboBox();
        cmbPeriodo = new javax.swing.JComboBox();
        cmbAula = new javax.swing.JComboBox();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        radioSeccion = new javax.swing.JRadioButton();
        radioPeriodo = new javax.swing.JRadioButton();
        jPanel11 = new javax.swing.JPanel();
        btnGenerar = new javax.swing.JButton();
        btnSalir2 = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        cmbSeccion2 = new javax.swing.JComboBox();
        cmbPeriodo2 = new javax.swing.JComboBox();
        jLabel8 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblAlumno = new javax.swing.JTable();
        radioAlumno = new javax.swing.JRadioButton();
        jPanel9 = new javax.swing.JPanel();
        txtBusqueda = new javax.swing.JTextField();

        setTitle("Cumplimientos del Aula");

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTabbedPane2.setFont(new java.awt.Font("Droid Sans", 0, 11)); // NOI18N

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Datos"));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Droid Sans", 0, 11)); // NOI18N
        jLabel1.setText("Nombre:");
        jPanel2.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 30, -1, 20));

        jLabel12.setFont(new java.awt.Font("Droid Sans", 0, 11)); // NOI18N
        jLabel12.setText("AÃ±o:");
        jPanel2.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 150, -1, 20));

        cmbAnio.setFont(new java.awt.Font("Droid Sans", 0, 11)); // NOI18N
        cmbAnio.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbAnioItemStateChanged(evt);
            }
        });
        jPanel2.add(cmbAnio, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 150, 130, -1));
        jPanel2.add(jTabbedPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(-20, -20, 60, 20));

        txtNombre.setColumns(20);
        txtNombre.setFont(new java.awt.Font("Droid Sans", 0, 11)); // NOI18N
        txtNombre.setLineWrap(true);
        txtNombre.setRows(5);
        jScrollPane2.setViewportView(txtNombre);

        jPanel2.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 30, 220, -1));

        btnAgregar.setFont(new java.awt.Font("Droid Sans", 0, 11)); // NOI18N
        btnAgregar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PckIconos/ic_add_black_24dp.png"))); // NOI18N
        btnAgregar.setText("Agregar Item");
        btnAgregar.setPreferredSize(new java.awt.Dimension(113, 33));
        btnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarActionPerformed(evt);
            }
        });
        jPanel2.add(btnAgregar, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 240, 130, 30));

        btnEditar.setFont(new java.awt.Font("Droid Sans", 0, 11)); // NOI18N
        btnEditar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PckIconos/ic_mode_edit_black_24dp.png"))); // NOI18N
        btnEditar.setText("Editar Item");
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });
        jPanel2.add(btnEditar, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 290, 130, -1));

        btnSalir3.setFont(new java.awt.Font("Droid Sans", 0, 11)); // NOI18N
        btnSalir3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PckIconos/ic_exit_to_app_black_24dp.png"))); // NOI18N
        btnSalir3.setText("Salir");
        btnSalir3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalir3ActionPerformed(evt);
            }
        });
        jPanel2.add(btnSalir3, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 340, 130, -1));

        jSeparator1.setForeground(new java.awt.Color(204, 204, 204));
        jPanel2.add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 200, 310, 10));

        jPanel3.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 40, 350, 410));

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Cumplimientos"));
        jPanel4.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lstItem.setFont(new java.awt.Font("Droid Sans", 0, 11)); // NOI18N
        lstItem.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        lstItem.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                lstItemValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(lstItem);

        jPanel4.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(29, 98, 310, 160));

        cmbAnioo.setFont(new java.awt.Font("Droid Sans", 0, 11)); // NOI18N
        cmbAnioo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmbAnioo.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbAniooItemStateChanged(evt);
            }
        });
        jPanel4.add(cmbAnioo, new org.netbeans.lib.awtextra.AbsoluteConstraints(29, 39, 236, -1));

        jLabel2.setFont(new java.awt.Font("Droid Sans", 0, 11)); // NOI18N
        jLabel2.setText("Items aÃ±adidos.");
        jPanel4.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(29, 77, -1, -1));

        jLabel3.setForeground(new java.awt.Color(0, 102, 255));
        jLabel3.setText("*Seleccione un cumplimiento para asignarlo o deshabilitarlo");
        jPanel4.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 270, -1, -1));

        jPanel3.add(jPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 40, 360, 300));

        jPanel7.setBackground(new java.awt.Color(255, 255, 255));
        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder("Estado Cumplimiento"));
        jPanel7.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        rbnHabilitado.setBackground(new java.awt.Color(255, 255, 255));
        rbnHabilitado.setFont(new java.awt.Font("Droid Sans", 0, 11)); // NOI18N
        rbnHabilitado.setText("Habilitado");
        rbnHabilitado.setEnabled(false);
        jPanel7.add(rbnHabilitado, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 40, -1, -1));

        rbnDeshabilitado.setBackground(new java.awt.Color(255, 255, 255));
        rbnDeshabilitado.setFont(new java.awt.Font("Droid Sans", 0, 11)); // NOI18N
        rbnDeshabilitado.setText("Deshabilitado");
        rbnDeshabilitado.setEnabled(false);
        jPanel7.add(rbnDeshabilitado, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 40, 110, -1));

        btnSave.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PckIcoMenu/SaveClose_24px.png"))); // NOI18N
        btnSave.setEnabled(false);
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });
        jPanel7.add(btnSave, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 30, 40, 40));

        jPanel3.add(jPanel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 360, 350, 90));

        jTabbedPane2.addTab("Crear Cumplimientos", jPanel3);

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));
        jPanel5.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel8.setBackground(new java.awt.Color(255, 255, 255));
        jPanel8.setBorder(javax.swing.BorderFactory.createTitledBorder("Asignar por"));
        jPanel8.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        cmbNivel.setFont(new java.awt.Font("Droid Sans", 0, 11)); // NOI18N
        cmbNivel.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "GUARDERIA", "INICIAL" }));
        cmbNivel.setEnabled(false);
        cmbNivel.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbNivelItemStateChanged(evt);
            }
        });
        jPanel8.add(cmbNivel, new org.netbeans.lib.awtextra.AbsoluteConstraints(18, 50, 220, -1));

        cmbPeriodo.setFont(new java.awt.Font("Droid Sans", 0, 11)); // NOI18N
        cmbPeriodo.setEnabled(false);
        cmbPeriodo.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbPeriodoItemStateChanged(evt);
            }
        });
        jPanel8.add(cmbPeriodo, new org.netbeans.lib.awtextra.AbsoluteConstraints(18, 110, 220, -1));

        cmbAula.setFont(new java.awt.Font("Droid Sans", 0, 11)); // NOI18N
        cmbAula.setEnabled(false);
        jPanel8.add(cmbAula, new org.netbeans.lib.awtextra.AbsoluteConstraints(18, 170, 220, -1));

        jLabel5.setFont(new java.awt.Font("Droid Sans", 0, 11)); // NOI18N
        jLabel5.setText("Por Periodo:");
        jPanel8.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 90, 70, 20));

        jLabel6.setFont(new java.awt.Font("Droid Sans", 0, 11)); // NOI18N
        jLabel6.setText("Por Aula:");
        jPanel8.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 150, -1, 20));

        jLabel7.setFont(new java.awt.Font("Droid Sans", 0, 11)); // NOI18N
        jLabel7.setText("Nivel:");
        jPanel8.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 30, 60, 20));

        radioSeccion.setBackground(new java.awt.Color(255, 255, 255));
        radioSeccion.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                radioSeccionItemStateChanged(evt);
            }
        });
        jPanel8.add(radioSeccion, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 170, 20, -1));

        radioPeriodo.setBackground(new java.awt.Color(255, 255, 255));
        radioPeriodo.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                radioPeriodoItemStateChanged(evt);
            }
        });
        jPanel8.add(radioPeriodo, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 110, 20, -1));

        jPanel5.add(jPanel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 20, 271, 236));

        jPanel11.setBackground(new java.awt.Color(255, 255, 255));
        jPanel11.setBorder(javax.swing.BorderFactory.createTitledBorder("Opciones"));
        jPanel11.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnGenerar.setFont(new java.awt.Font("Droid Sans", 0, 11)); // NOI18N
        btnGenerar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PckIcoMenu/brightness-7.png"))); // NOI18N
        btnGenerar.setText("Generar");
        btnGenerar.setEnabled(false);
        btnGenerar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGenerarActionPerformed(evt);
            }
        });
        jPanel11.add(btnGenerar, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 40, 110, 40));

        btnSalir2.setFont(new java.awt.Font("Droid Sans", 0, 11)); // NOI18N
        btnSalir2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PckIconos/ic_exit_to_app_black_24dp.png"))); // NOI18N
        btnSalir2.setText("Salir");
        btnSalir2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalir2ActionPerformed(evt);
            }
        });
        jPanel11.add(btnSalir2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 100, 110, 40));

        jPanel5.add(jPanel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(534, 290, 150, 170));

        jPanel6.setBackground(new java.awt.Color(255, 255, 255));
        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder("Asignar por Alumno"));
        jPanel6.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel9.setFont(new java.awt.Font("Droid Sans", 0, 11)); // NOI18N
        jLabel9.setText("Seleccione SecciÃ³n:");
        jPanel6.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 120, -1, 20));

        cmbSeccion2.setFont(new java.awt.Font("Droid Sans", 0, 11)); // NOI18N
        cmbSeccion2.setEnabled(false);
        cmbSeccion2.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbSeccion2ItemStateChanged(evt);
            }
        });
        jPanel6.add(cmbSeccion2, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 140, 220, -1));

        cmbPeriodo2.setFont(new java.awt.Font("Droid Sans", 0, 11)); // NOI18N
        cmbPeriodo2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmbPeriodo2.setEnabled(false);
        cmbPeriodo2.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbPeriodo2ItemStateChanged(evt);
            }
        });
        jPanel6.add(cmbPeriodo2, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 90, 220, -1));

        jLabel8.setFont(new java.awt.Font("Droid Sans", 0, 11)); // NOI18N
        jLabel8.setText("Seleccione Periodo:");
        jPanel6.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 70, 120, 20));

        tblAlumno.setFont(new java.awt.Font("Droid Sans", 0, 11)); // NOI18N
        tblAlumno.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblAlumno.setEnabled(false);
        tblAlumno.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblAlumnoMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(tblAlumno);

        jPanel6.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 180, 330, 320));

        radioAlumno.setBackground(new java.awt.Color(255, 255, 255));
        radioAlumno.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                radioAlumnoItemStateChanged(evt);
            }
        });
        jPanel6.add(radioAlumno, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 0, -1, -1));

        jPanel9.setBackground(new java.awt.Color(255, 255, 255));
        jPanel9.setBorder(javax.swing.BorderFactory.createTitledBorder("BÃºsqueda"));
        jPanel9.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txtBusqueda.setFont(new java.awt.Font("Droid Sans", 0, 11)); // NOI18N
        txtBusqueda.setEnabled(false);
        txtBusqueda.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtBusquedaMouseClicked(evt);
            }
        });
        txtBusqueda.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtBusquedaKeyTyped(evt);
            }
        });
        jPanel9.add(txtBusqueda, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, 310, -1));

        jPanel6.add(jPanel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, 330, 50));

        jPanel5.add(jPanel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 10, 370, 510));

        jTabbedPane2.addTab("AsignaciÃ³n", jPanel5);

        jPanel1.add(jTabbedPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 840, 550));

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cmbAnioItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbAnioItemStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbAnioItemStateChanged

    private void cmbNivelItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbNivelItemStateChanged
        
        if(cmbNivel.getSelectedIndex() != -1)
        {
            cargaComboPeriodo();
            if(cmbPeriodo.getSelectedIndex() != -1)
            {
               cargaComboSeccion(); 
            }
        }
        
    }//GEN-LAST:event_cmbNivelItemStateChanged

    private void cmbPeriodoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbPeriodoItemStateChanged
        
        if(cmbPeriodo.getSelectedIndex() != -1) //solo cargara si el index no es -1
        {
            cargaComboSeccion();
        }
        
    }//GEN-LAST:event_cmbPeriodoItemStateChanged

    private void radioSeccionItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_radioSeccionItemStateChanged
       
    }//GEN-LAST:event_radioSeccionItemStateChanged

    private void radioPeriodoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_radioPeriodoItemStateChanged
        
    }//GEN-LAST:event_radioPeriodoItemStateChanged

    private void btnGenerarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGenerarActionPerformed
        
        String idPeriodo;
        String idAula;
        String idAlumno;
        String nombrePeriodo;
        String nombreAula;
        String idItem;
        String options[] = {"Aceptar","Cancelar"};
        int option;
        if(radioPeriodo.isSelected())
        {
            nombrePeriodo = cmbPeriodo.getSelectedItem().toString();
            option = JOptionPane.showOptionDialog(this, "Â¿Seguro que desea asignar item para "+nombrePeriodo+"?",
                "ConfirmaciÃ³n", JOptionPane.NO_OPTION, JOptionPane.PLAIN_MESSAGE, null, options, options[0]);
            
            if(option == 0) // pressing OK button
            {
                 idPeriodo = arrayPeriodoId.get(cmbPeriodo.getSelectedIndex());
                
                idItem = arrayItemId.get(lstItem.getSelectedIndex());
            
                AsignarPagoAulaDeudaPeriodo(idPeriodo, idItem);
                JOptionPane.showMessageDialog(this, "Item aÃ±adido al periodo correctamente");
            }
        }
        else if(radioSeccion.isSelected())
        { 
            nombreAula = cmbAula.getSelectedItem().toString(); 
            option = JOptionPane.showOptionDialog(this, "Â¿Seguro que desea asignar item para "+nombreAula+"?",
                "ConfirmaciÃ³n", JOptionPane.NO_OPTION, JOptionPane.PLAIN_MESSAGE, null, options, options[0]);
            
            if(option == 0) // pressing OK button
            {
                idAula = arraySeccionId.get(cmbAula.getSelectedIndex());
                
                idItem = arrayItemId.get(lstItem.getSelectedIndex());
                AsignarPagoAulaDeudaAula(idAula, idItem);
                JOptionPane.showMessageDialog(this, "Item aÃ±adido al aula correctamente");
            }
        }
        else if(radioAlumno.isSelected())
        {
            
            option = JOptionPane.showOptionDialog(this, "Â¿Seguro que desea asignar item para "+nombre+"?",
                "ConfirmaciÃ³n", JOptionPane.NO_OPTION, JOptionPane.PLAIN_MESSAGE, null, options, options[0]);
            
            if(option == 0) // pressing OK button
            {
                idAula = codigoSeccion2.get(cmbSeccion2.getSelectedIndex());
                idItem = arrayItemId.get(lstItem.getSelectedIndex());
                AsignarPagoAulaDeudaAlumno(idAula, idItem);
                JOptionPane.showMessageDialog(this, "Item aÃ±adido al aula correctamente");
            }
            
        }
        
    }//GEN-LAST:event_btnGenerarActionPerformed

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
        
        if(lstItem.getSelectedIndex() != -1)
        {
            String id;
            ClsPagoAula pagoAula;
            Connection conexion;
            id = arrayItemId.get(lstItem.getSelectedIndex());
            pagoAula = new ClsPagoAula();
            conexion = ClsConexion.getConection();
            
            pagoAula.EditarPagoAula (
                    id, txtNombre.getText(),
                    cmbAnio.getSelectedItem().toString(),
                    conexion
            );
            
            CargarListaItem();
        }
        
    }//GEN-LAST:event_btnEditarActionPerformed

    private void cmbAniooItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbAniooItemStateChanged
        
        if(cmbAnioo.getSelectedIndex() != -1)
        {
            CargarListaItem();
        }
        
    }//GEN-LAST:event_cmbAniooItemStateChanged

    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarActionPerformed
        
        ClsEntidadPagoAula ePagoAula;
        ClsPagoAula pagoAula;
        Connection conexion;
        
        conexion = ClsConexion.getConection();
        
        ePagoAula = new ClsEntidadPagoAula (
                    
                    "",
                    txtNombre.getText(),
                    cmbAnio.getSelectedItem().toString()
                
                );
        
        pagoAula = new ClsPagoAula();
        
        pagoAula.CrearPagoAula(ePagoAula, conexion);
        ClsConexion.closeConnection(conexion);
        CargarListaItem();
        
    }//GEN-LAST:event_btnAgregarActionPerformed

    private void btnSalir2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalir2ActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnSalir2ActionPerformed

    private void lstItemValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_lstItemValueChanged
        
        if(lstItem.getSelectedIndex() != -1)
        {
            txtNombre.setText(lstItem.getSelectedValue());
            cmbAnio.setSelectedItem(cmbAnioo.getSelectedItem());
            btnGenerar.setEnabled(true);
            activaAlumno();
            activaItem(true, true, true);
            rbnDeshabilitado.setEnabled(true);
            rbnHabilitado.setEnabled(true);
            btnSave.setEnabled(true);
            
            //Comprobar estado
            ClsPagoAula pagoAula = new ClsPagoAula();        
            Connection conexion;
            ResultSet rsResultado;
            String idItem = arrayItemId.get(lstItem.getSelectedIndex());
            conexion = ClsConexion.getConection();            
            try 
            {
                rsResultado = pagoAula.SeleccionarPagoAulaItem(conexion,idItem);
                while(rsResultado.next())
                {
                    if(rsResultado.getString("pgo_aula_estado").equals("A"))
                    {
                        rbnHabilitado.setSelected(true);                        
                    }
                    else if(rsResultado.getString("pgo_aula_estado").equals("D"))
                    {
                        rbnDeshabilitado.setSelected(true);   
                    }
                }
                
                ClsConexion.closeConnection(conexion);
            }
            catch (Exception ex) 
            {
                Logger.getLogger(FrmPagoAula.class.getName()).log(Level.SEVERE, null, ex);
            }
            
        }
        
    }//GEN-LAST:event_lstItemValueChanged

    private void cmbSeccion2ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbSeccion2ItemStateChanged
        if(cmbSeccion2.getSelectedIndex() != -1)
        {
            actualizarTablaAlumno();
        }
    }//GEN-LAST:event_cmbSeccion2ItemStateChanged

    private void cmbPeriodo2ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbPeriodo2ItemStateChanged
        if(cmbPeriodo2.getSelectedIndex() != -1)
        {
            cargaSeccionA();
            actualizarTablaAlumno();
        }
    }//GEN-LAST:event_cmbPeriodo2ItemStateChanged

    private void tblAlumnoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblAlumnoMouseClicked
        int reg;
        DefaultTableModel defaultTableModel = new DefaultTableModel();
        reg = tblAlumno.getSelectedRow();
        if(reg == -1)
        {
            JOptionPane.showMessageDialog(null, "Primero debe seleccionar una opciÃ³n de asignaciÃ³n");
        }
        else
        {
            defaultTableModel = (DefaultTableModel)tblAlumno.getModel();
            StrCodAlu = ((String)defaultTableModel.getValueAt(reg, 0));
            nombre = ((String) defaultTableModel.getValueAt(reg, 2));
        }
    }//GEN-LAST:event_tblAlumnoMouseClicked

    private void radioAlumnoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_radioAlumnoItemStateChanged
        if(radioAlumno.isSelected())
        {
            activaItem(false,false,false);
            
            activaAlumno();
        }
    }//GEN-LAST:event_radioAlumnoItemStateChanged
    private void activaItem(boolean nivel,boolean periodo,boolean seccion)
    {
        cmbNivel.setEnabled(nivel);
        cmbPeriodo.setEnabled(periodo);
        cmbAula.setEnabled(seccion);    
    }
    
    private void activaAlumno()
    {
        cmbPeriodo2.setEnabled(true);
        cmbSeccion2.setEnabled(true);
        tblAlumno.setEnabled(true);
    }
    private void txtBusquedaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtBusquedaMouseClicked
        int fin = txtBusqueda.getHeight();
        txtBusqueda.setSelectionStart(0);
        txtBusqueda.setSelectionEnd(fin);
    }//GEN-LAST:event_txtBusquedaMouseClicked

    private void txtBusquedaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBusquedaKeyTyped

        String a = txtBusqueda.getText();
        if(a.equals(""))
        {
            actualizarTablaAlumno();
        }
        else
        {
            actualizarTablaAlumnoBusqueda(a);
        }
    }//GEN-LAST:event_txtBusquedaKeyTyped

    private void btnSalir3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalir3ActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnSalir3ActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        if(rbnHabilitado.isSelected())
        {
            String id;
            ClsPagoAula pagoAula;
            String estado = "A";
            Connection conexion;
            id = arrayItemId.get(lstItem.getSelectedIndex());
            pagoAula = new ClsPagoAula();
            conexion = ClsConexion.getConection();
            
            pagoAula.EditarPagoAulaEstado (
                    estado, 
                    id,
                    conexion
            );
            ClsConexion.closeConnection(conexion);
        }
        else if(rbnDeshabilitado.isSelected())
        {
            String id;
            ClsPagoAula pagoAula;
            String estado = "D";
            Connection conexion;
            id = arrayItemId.get(lstItem.getSelectedIndex());
            pagoAula = new ClsPagoAula();
            conexion = ClsConexion.getConection();
            
            pagoAula.EditarPagoAulaEstado (
                    estado, 
                    id,
                    conexion
            );
            ClsConexion.closeConnection(conexion);
        }
    }//GEN-LAST:event_btnSaveActionPerformed

    private void actualizarTablaAlumnoBusqueda(String texto)
    {
        int p=1;
        String titulos[] = {"ID","NÂ°","Apellidos y nombres","SecciÃ³n","Periodo"};
        con = ClsConexion.getConection();
        ClsAlumno alumnos = new ClsAlumno();
        ArrayList<ClsEntidadAlumnoPago> alumnoo = alumnos.ListarAlumnoBusqueda(texto,con);
        Iterator iterator = alumnoo.iterator();
        DefaultTableModel defaultTableModel =new DefaultTableModel(null,titulos);               
        String fila[] = new String[12];                
        while(iterator.hasNext())
        {
            ClsEntidadAlumnoPago Alumno;
            Alumno = (ClsEntidadAlumnoPago) iterator.next();
            fila[0] = Alumno.getId_Matricula();
            fila[1] = String.valueOf(p);
            fila[2] = Alumno.getApellidos_Nombres();
            fila[3] = Alumno.getNombre_Seccion();
            fila[4] = Alumno.getNombre_Periodo();

                p++;
                defaultTableModel.addRow(fila);                

        }         
        ClsConexion.closeConnection(con);
        tblAlumno.setModel(defaultTableModel);
        tblAlumno.removeColumn(tblAlumno.getColumnModel().getColumn(0));
        TableColumn  columnaN =tblAlumno.getColumnModel().getColumn(0);
        columnaN.setPreferredWidth(12);
        TableColumn  columnaPer =tblAlumno.getColumnModel().getColumn(1);
        columnaPer.setPreferredWidth(150);
    }
    
    private void cargaPeriodoA()
    {
        ClsPeriodo periodos = new ClsPeriodo();
        ArrayList<ClsEntidadPeriodo> periodo =  periodos.ListarPeriodo();
        Iterator iterator = periodo.iterator();
        DefaultComboBoxModel DefaultComboBoxModel = new DefaultComboBoxModel();
        DefaultComboBoxModel.removeAllElements();
        cmbPeriodo2.removeAllItems();
        String fila[] = new String[4];     
        while(iterator.hasNext())
        {
        ClsEntidadPeriodo Periodo = new ClsEntidadPeriodo();
        Periodo = (ClsEntidadPeriodo) iterator.next();               
        fila[0] = Periodo.getNombre_Periodo();
        fila[1] = Periodo.getEstado_Periodo();        
            if(Periodo.getEstado_Periodo().equals("Activo"))
            {   
            codigoPeriodo2.add(Periodo.getId_Periodo());     
            DefaultComboBoxModel.addElement(Periodo.getNombre_Periodo());        
            }        
        }
        cmbPeriodo2.setModel(DefaultComboBoxModel);
        //cambia estado del combo a lleno
        //conComboPeriodo2=1;
    }
    private void cargaSeccionA()
    {
        codigoSeccion2.clear();
        ClsSeccion secciones = new ClsSeccion();
        ArrayList<ClsEntidadSeccion> seccion =  secciones.ListarSeccion();
        Iterator it = seccion.iterator();
        DefaultComboBoxModel DefaultComboBoxModel = new DefaultComboBoxModel();
        DefaultComboBoxModel.removeAllElements();
        cmbSeccion2.removeAllItems();
        String fila2[] = new String[5];        
        while(it.hasNext())
        {
        ClsEntidadSeccion Seccion = (ClsEntidadSeccion) it.next();             
        fila2[0] = Seccion.getNombre_Seccion();
        fila2[1] = Seccion.getEstado_Periodo();       
        fila2[3] = Seccion.getNombre_Periodo();
        
            if (codigoPeriodo2.get(cmbPeriodo2.getSelectedIndex()).equals(Seccion.getId_Periodo())) 
            {
                codigoSeccion2.add(Seccion.getId_Seccion());
                DefaultComboBoxModel.addElement(fila2[0]);
            }
        }
        cmbSeccion2.setModel(DefaultComboBoxModel); 
    }
   
    private void actualizarTablaAlumno()
    {
        String titulos[] = {"ID","NÂ°","Apellidos y nombres"};
        con = ClsConexion.getConection();
        ClsAlumno alumnos = new ClsAlumno();
        ArrayList<ClsEntidadAlumnoPago> alumno = alumnos.ListarAlumnoPago(con);
        Iterator iterator = alumno.iterator();
        DefaultTableModel defaultTableModel =new DefaultTableModel(null,titulos){
        public boolean isCellEditable(int rowIndex,int columnIndex){return false;} 
        };                 
        String fila[] = new String[12];                
        int aux=1;
        while(iterator.hasNext())
        {
            ClsEntidadAlumnoPago Alumno = new ClsEntidadAlumnoPago();
            Alumno = (ClsEntidadAlumnoPago) iterator.next();
            fila[0] = Alumno.getId_Matricula();
            fila[1] = String.valueOf(aux);
            fila[2] = Alumno.getApellidos_Nombres();
            fila[3] = Alumno.getId_Seccion();                       
            if(fila[3].equals(codigoSeccion2.get(cmbSeccion2.getSelectedIndex())))
            {
                aux++;
                defaultTableModel.addRow(fila);                
            }
        }         
        ClsConexion.closeConnection(con);
        tblAlumno.setModel(defaultTableModel);
        tblAlumno.removeColumn(tblAlumno.getColumnModel().getColumn(0));
        TableColumn  columnaPer =tblAlumno.getColumnModel().getColumn(0);
        columnaPer.setPreferredWidth(10);
        TableColumn  columnaP =tblAlumno.getColumnModel().getColumn(1);
        columnaP.setPreferredWidth(200);
        TableCellRenderer tcr =  tblAlumno.getTableHeader().getDefaultRenderer();                       
        ClsMisc.miRender mr = new ClsMisc.miRender(tcr);
        mr.getTableCellRendererComponent(tblAlumno, fila, isSelected, isIcon, WIDTH, 0);
    }
    
    private void AsignarPagoAulaDeudaPeriodo(String xPeriodoId, String xItemId)
    {
        Connection conexion;
        ClsAlumno alumno;
        ArrayList<ClsEntidadAsignar> arrayAlumno;        
        ClsEntidadPagoAulaDeuda ePagoAulaDeuda;
        ClsPagoAulaDeuda pagoAulaDeuda;
        ResultSet rsAulas;
                
        conexion = ClsConexion.getConection();
        alumno = new ClsAlumno();
        arrayAlumno = alumno.SeleccionarAlumnoPagoPeriodo(xPeriodoId, conexion);
        pagoAulaDeuda = new ClsPagoAulaDeuda();
        
        rsAulas = alumno.SeleccionarAulaPagoPeriodo(xPeriodoId, conexion);
        
        try 
        {
            while(rsAulas.next())
            {
                pagoAulaDeuda.CrearPagoAulaDeudaRelacion (
                            xItemId, 
                            rsAulas.getString("id_seccion"), 
                            conexion
                );
            }
        }
        catch (SQLException ex) 
        {
            Logger.getLogger(FrmPagoAula.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        for(ClsEntidadAsignar ea : arrayAlumno)
        {
            ePagoAulaDeuda = new ClsEntidadPagoAulaDeuda (
                    "", 
                    "",
                    ea.getId_Matricula(),
                    xItemId
            );
            
            pagoAulaDeuda.CrearPagoAulaDeuda(ePagoAulaDeuda, conexion);
        }        
        ClsConexion.closeConnection(conexion);
    }
    
    String convertirMayu(String texto)
   {
   String text;
   text =texto.toUpperCase();
   return text;
   }
    
    private void AsignarPagoAulaDeudaAula(String xAulaId, String xItemId)
    {
        Connection conexion;
        ClsAlumno alumno; 
        ArrayList<ClsEntidadAsignar> arrayAlumno;        
        ClsEntidadPagoAulaDeuda ePagoAulaDeuda;
        ClsPagoAulaDeuda pagoAulaDeuda;
                
        conexion = ClsConexion.getConection();
        alumno = new ClsAlumno();
        arrayAlumno = alumno.SeleccionarAlumnoPagoSeccion(xAulaId, conexion);        
        pagoAulaDeuda = new ClsPagoAulaDeuda();
        pagoAulaDeuda.CrearPagoAulaDeudaRelacion(xItemId, xAulaId, conexion);
        for(ClsEntidadAsignar ea : arrayAlumno)
        {
            ePagoAulaDeuda = new ClsEntidadPagoAulaDeuda (
                    "", 
                    "",
                    ea.getId_Matricula(),
                    xItemId
            );
            
            pagoAulaDeuda.CrearPagoAulaDeuda(ePagoAulaDeuda, conexion);
        }        
        ClsConexion.closeConnection(conexion);
    }
    
    private void AsignarPagoAulaDeudaAlumno(String xAulaId, String xItemId)
    {
        Connection conexion;
        ClsAlumno alumno;         
        ClsEntidadPagoAulaDeuda ePagoAulaDeuda;
        ClsPagoAulaDeuda pagoAulaDeuda;
        String idAula;
        
        conexion = ClsConexion.getConection();
        alumno = new ClsAlumno();              
        pagoAulaDeuda = new ClsPagoAulaDeuda();      
        
        pagoAulaDeuda.CrearPagoAulaDeudaRelacion(xItemId, xAulaId, conexion);
        
            ePagoAulaDeuda = new ClsEntidadPagoAulaDeuda (
                    "", 
                    "",
                    StrCodAlu,
                    xItemId
            );
            
            pagoAulaDeuda.CrearPagoAulaDeuda(ePagoAulaDeuda, conexion);
                
        ClsConexion.closeConnection(conexion);
    }
    
    private String CargaComboAnio() {
        
        cmbAnio.removeAllItems();
        cmbAnioo.removeAllItems();
        //obtengo aÃ±o actual
        int Anioactual = Integer.parseInt(obtenerAnioActual());   
        int burbuja[] = new int[4];
        //lleno la matriz inicial (2015-2014-2013-2012-2011)
        //es necesario ordenarla
        for (int i=0;i<4;i++)
        {
           burbuja[i] = Anioactual - i;
        }        
        int temp;
        for(int m=0;m<burbuja.length;m++)//recorre cada elemento
        {            
            for(int n=0;n<burbuja.length-1;n++)//el elemento es comparado con todos
            {                
                if(burbuja[n]>burbuja[n+1]) //+1 porque ya tomamos el valor 0
                {
                    temp = burbuja[n];
                    burbuja[n] = burbuja[n+1];
                    burbuja[n+1] = temp;
                }
            }
        }
        //agrego los aÃ±os ordenados
        for(int o=0;o<burbuja.length;o++)
        {
            cmbAnio.addItem(String.valueOf(burbuja[o]));
            cmbAnioo.addItem(String.valueOf(burbuja[o]));
        }        
        //agrego los 4 aÃ±os siguientes
        for (int j=1;j<5;j++)
        {
           cmbAnio.addItem(String.valueOf(Anioactual + j));
           cmbAnioo.addItem(String.valueOf(Anioactual + j));
        }
        
        return String.valueOf(Anioactual);
    }
    
    private void CargarListaItem() {
        
        ClsPagoAula pagoAula = new ClsPagoAula();        
        Connection conexion;
        ResultSet rsResultado;
        String anio;
        
        dlmItem.removeAllElements();
        arrayItemId.clear();
                
        conexion = ClsConexion.getConection();
        anio = cmbAnioo.getSelectedItem().toString();
        try 
        {
            rsResultado = pagoAula.SeleccionarPagoAula(conexion);
            while(rsResultado.next())
            {
                if(rsResultado.getString("pgo_aula_anio").equals(anio))
                {
                    dlmItem.addElement(rsResultado.getString("pgo_aula_nombre"));
                    arrayItemId.add(rsResultado.getString("pgo_aula_id"));
                }                
            }
            lstItem.setModel(dlmItem);
            ClsConexion.closeConnection(conexion);
        }
        catch (Exception ex) 
        {
            Logger.getLogger(FrmPagoAula.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
    }
    
    private void cargaComboNivel()
    {
        ClsNivel niveles = new ClsNivel();
        ArrayList<ClsEntidadNivel> nivel =  niveles.SeleccionarNivel();
        Iterator it = nivel.iterator();
        DefaultComboBoxModel dtm = new DefaultComboBoxModel();
        dtm.removeAllElements();
        cmbNivel.removeAllItems();
                
        while(it.hasNext())
        {
        ClsEntidadNivel Nivel = new ClsEntidadNivel();
        Nivel = (ClsEntidadNivel) it.next();       
        arrayNivelId.add(Nivel.getNivel_id());
        dtm.addElement(Nivel.getNivel_nombre());                
        }
        cmbNivel.setModel(dtm); 
    }
    
    private void cargaComboPeriodo()
    {
        arrayPeriodoId.clear();
        ClsPeriodo periodos = new ClsPeriodo();
        ArrayList<ClsEntidadPeriodo> pperiodo =  periodos.ListarPeriodo();
        Iterator iterator = pperiodo.iterator();
        DefaultComboBoxModel DefaultComboBoxModel = new DefaultComboBoxModel();
        DefaultComboBoxModel.removeAllElements();
        cmbPeriodo.removeAllItems();
        String fila[] = new String[4];     
        while(iterator.hasNext())
        {
        ClsEntidadPeriodo Periodo = new ClsEntidadPeriodo();
        Periodo = (ClsEntidadPeriodo) iterator.next();               
        fila[0] = Periodo.getNombre_Periodo();
        fila[1] = Periodo.getEstado_Periodo();        
            if(Periodo.getEstado_Periodo().equals("Activo") &&                     
            arrayNivelId.get(cmbNivel.getSelectedIndex()).equals(Periodo.getNivel_Id()))
            {   
            arrayPeriodoId.add(Periodo.getId_Periodo());     
            DefaultComboBoxModel.addElement(Periodo.getNombre_Periodo());        
            }
        }
        cmbPeriodo.setModel(DefaultComboBoxModel);      
    }
    
    private void cargaComboSeccion()
    {
        arraySeccionId.clear();
        ClsSeccion secciones = new ClsSeccion();
        ArrayList<ClsEntidadSeccion> seccion =  secciones.ListarSeccion();
        Iterator it = seccion.iterator();
        DefaultComboBoxModel DefaultComboBoxModel = new DefaultComboBoxModel();
        DefaultComboBoxModel.removeAllElements();
        cmbAula.removeAllItems();
        String fila2[] = new String[5];        
        while(it.hasNext())
        {
        ClsEntidadSeccion Seccion = (ClsEntidadSeccion) it.next();             
        fila2[0] = Seccion.getNombre_Seccion();
        fila2[1] = Seccion.getEstado_Periodo();       
        fila2[3] = Seccion.getNombre_Periodo();        
            if (arrayPeriodoId.get(cmbPeriodo.getSelectedIndex()).equals(Seccion.getId_Periodo())) 
            {
                arraySeccionId.add(Seccion.getId_Seccion());
                DefaultComboBoxModel.addElement(fila2[0]);
            }       
        }
        cmbAula.setModel(DefaultComboBoxModel);          
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAgregar;
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnGenerar;
    private javax.swing.JButton btnSalir2;
    private javax.swing.JButton btnSalir3;
    private javax.swing.JButton btnSave;
    private javax.swing.JComboBox cmbAnio;
    private javax.swing.JComboBox<String> cmbAnioo;
    private javax.swing.JComboBox cmbAula;
    private javax.swing.JComboBox cmbNivel;
    private javax.swing.JComboBox cmbPeriodo;
    private javax.swing.JComboBox cmbPeriodo2;
    private javax.swing.JComboBox cmbSeccion2;
    private javax.swing.ButtonGroup grupo;
    private javax.swing.ButtonGroup grupo2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JList<String> lstItem;
    private javax.swing.JRadioButton radioAlumno;
    private javax.swing.JRadioButton radioPeriodo;
    private javax.swing.JRadioButton radioSeccion;
    private javax.swing.JRadioButton rbnDeshabilitado;
    private javax.swing.JRadioButton rbnHabilitado;
    private javax.swing.JTable tblAlumno;
    private javax.swing.JTextField txtBusqueda;
    private javax.swing.JTextArea txtNombre;
    // End of variables declaration//GEN-END:variables
}
