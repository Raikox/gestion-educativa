/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package PckInterfaces;

import PckConexion.ClsConexion;
import PckEntidad.ClsEntidadAlumnoDirectorio;
import PckEntidad.ClsEntidadAlumnoPago;
import PckEntidad.ClsEntidadNivel;
import PckEntidad.ClsEntidadPadreMadreDirectorio;
import PckEntidad.ClsEntidadPeriodo;
import PckEntidad.ClsEntidadSeccion;
import PckNegocio.ClsAlumno;
import PckNegocio.ClsNivel;
import PckNegocio.ClsPeriodo;
import PckNegocio.ClsSeccion;
import java.sql.Connection;
import java.sql.ResultSet;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Iterator;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.data.JRBeanCollectionDataSource;
import net.sf.jasperreports.engine.design.JasperDesign;
import net.sf.jasperreports.engine.xml.JRXmlLoader;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author John Kevin Montes De Oca Vizcarra
 * @email jkevin.mv@gmail.com
 */
public class FrmDirectorio extends javax.swing.JInternalFrame {

    ArrayList<String> codigoNivel = new ArrayList();
    ArrayList<String> codigoPeriodo = new ArrayList();
    ArrayList<String> codigoSeccion = new ArrayList();
    Connection con = null;
    private static final String logotipo= System.getProperty("user.dir")+"/Img/solr.jpg";
    
    public FrmDirectorio() {
        initComponents();
        
        grupoFiltro.add(radioPeriodo);
        grupoFiltro.add(radioSeccion);
        grupoFiltro.add(radioNivel);
        radioSeccion.setSelected(true);
       
        cargarComboNivel();
        cargarComboPeriodo();
        if(cmbPeriodo.getSelectedIndex() != -1)
        {            
            cargarComboSeccion();
        }
    }
    
    
    private void cargarComboNivel()
    {
        ClsNivel nivel = new ClsNivel();
        ArrayList<ClsEntidadNivel> arrayNivel =  nivel.SeleccionarNivel();        
        DefaultComboBoxModel dtm = new DefaultComboBoxModel();
        dtm.removeAllElements();
        cmbNivel.removeAllItems();
        for(ClsEntidadNivel n : arrayNivel)
        {            
            codigoNivel.add(n.getNivel_id());            
            dtm.addElement(n.getNivel_nombre()); 
        }
        cmbNivel.setModel(dtm); 
    }
    
    private void cargarComboPeriodo()
    {
        codigoPeriodo.clear();
        ClsPeriodo clsPeriodo = new ClsPeriodo();
        ArrayList<ClsEntidadPeriodo> arrayPeriodo =  clsPeriodo.ListarPeriodo();        
        DefaultComboBoxModel dcm = new DefaultComboBoxModel();
        dcm.removeAllElements();
        cmbPeriodo.removeAllItems();
        int nivelIndex=0;
        nivelIndex = cmbNivel.getSelectedIndex();
        for(ClsEntidadPeriodo p : arrayPeriodo)
        {            
            if(p.getEstado_Periodo().equals("Activo") && codigoNivel.get(nivelIndex).equals(p.getNivel_Id()))
            {
                codigoPeriodo.add(p.getId_Periodo());
                dcm.addElement(p.getNombre_Periodo());
            }
        }
        cmbPeriodo.setModel(dcm);       
    }
    private void cargarComboSeccion()
    {    
        codigoSeccion.clear();
        ClsSeccion secciones = new ClsSeccion();
        ArrayList<ClsEntidadSeccion> seccion =  secciones.ListarSeccion();
        Iterator it = seccion.iterator();
        DefaultComboBoxModel DefaultComboBoxModel = new DefaultComboBoxModel();
        DefaultComboBoxModel.removeAllElements();
        cmbSeccion.removeAllItems();
        String fila2[] = new String[5];        
        while(it.hasNext())
        {
        ClsEntidadSeccion Seccion = (ClsEntidadSeccion) it.next();             
        fila2[0] = Seccion.getNombre_Seccion();
        fila2[1] = Seccion.getEstado_Periodo();       
        fila2[3] = Seccion.getNombre_Periodo();
        
            if (codigoPeriodo.get(cmbPeriodo.getSelectedIndex()).equals(Seccion.getId_Periodo())) 
            {
                codigoSeccion.add(Seccion.getId_Seccion());
                DefaultComboBoxModel.addElement(fila2[0]);
            }       
        }
        cmbSeccion.setModel(DefaultComboBoxModel);         
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        grupoFiltro = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        cmbNivel = new javax.swing.JComboBox();
        cmbPeriodo = new javax.swing.JComboBox();
        cmbSeccion = new javax.swing.JComboBox();
        radioPeriodo = new javax.swing.JRadioButton();
        radioSeccion = new javax.swing.JRadioButton();
        radioNivel = new javax.swing.JRadioButton();
        jPanel2 = new javax.swing.JPanel();
        btnVer = new javax.swing.JButton();
        btnSalir = new javax.swing.JButton();

        setTitle("Directorio");

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel7.setBackground(new java.awt.Color(255, 255, 255));
        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder("Filtro"));
        jPanel7.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        cmbNivel.setFont(new java.awt.Font("Droid Sans", 0, 11)); // NOI18N
        cmbNivel.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "GUARDERIA", "INICIAL" }));
        cmbNivel.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbNivelItemStateChanged(evt);
            }
        });
        jPanel7.add(cmbNivel, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 30, 118, -1));

        cmbPeriodo.setFont(new java.awt.Font("Droid Sans", 0, 11)); // NOI18N
        cmbPeriodo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmbPeriodo.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbPeriodoItemStateChanged(evt);
            }
        });
        jPanel7.add(cmbPeriodo, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 70, 118, -1));

        cmbSeccion.setFont(new java.awt.Font("Droid Sans", 0, 11)); // NOI18N
        cmbSeccion.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbSeccionItemStateChanged(evt);
            }
        });
        jPanel7.add(cmbSeccion, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 110, 118, -1));

        radioPeriodo.setBackground(new java.awt.Color(255, 255, 255));
        radioPeriodo.setFont(new java.awt.Font("Droid Sans", 0, 11)); // NOI18N
        radioPeriodo.setText("Por Periodo:");
        radioPeriodo.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                radioPeriodoItemStateChanged(evt);
            }
        });
        jPanel7.add(radioPeriodo, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 70, 90, -1));

        radioSeccion.setBackground(new java.awt.Color(255, 255, 255));
        radioSeccion.setFont(new java.awt.Font("Droid Sans", 0, 11)); // NOI18N
        radioSeccion.setText("Por Secci√≥n:");
        radioSeccion.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                radioSeccionItemStateChanged(evt);
            }
        });
        jPanel7.add(radioSeccion, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 110, 90, -1));

        radioNivel.setBackground(new java.awt.Color(255, 255, 255));
        radioNivel.setFont(new java.awt.Font("Droid Sans", 0, 11)); // NOI18N
        radioNivel.setText("Por Nivel:");
        jPanel7.add(radioNivel, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 30, -1, -1));

        jPanel1.add(jPanel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 40, 260, 160));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Opciones"));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnVer.setFont(new java.awt.Font("Droid Sans", 0, 11)); // NOI18N
        btnVer.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PckIcoMenu/ic_search_black_24dp.png"))); // NOI18N
        btnVer.setText("Ver Reporte");
        btnVer.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnVer.setMargin(new java.awt.Insets(2, 10, 2, 10));
        btnVer.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnVer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVerActionPerformed(evt);
            }
        });
        jPanel2.add(btnVer, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 40, 90, 60));

        btnSalir.setBackground(new java.awt.Color(153, 153, 153));
        btnSalir.setFont(new java.awt.Font("Droid Sans", 0, 11)); // NOI18N
        btnSalir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PckIconos/ic_exit_to_app_black_24dp.png"))); // NOI18N
        btnSalir.setText("Salir");
        btnSalir.setToolTipText("");
        btnSalir.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnSalir.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirActionPerformed(evt);
            }
        });
        jPanel2.add(btnSalir, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 40, 80, 60));

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 240, 230, 120));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 409, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 409, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cmbNivelItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbNivelItemStateChanged
        if(cmbNivel.getSelectedIndex() != -1)
        {
            cargarComboPeriodo();
            if(cmbPeriodo.getSelectedIndex() != -1)
            {            
                cargarComboSeccion();
            }
        }
    }//GEN-LAST:event_cmbNivelItemStateChanged

    private void cmbPeriodoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbPeriodoItemStateChanged
        if(cmbPeriodo.getSelectedIndex() != -1)
        {

            cargarComboSeccion();
        }
    }//GEN-LAST:event_cmbPeriodoItemStateChanged

    private void cmbSeccionItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbSeccionItemStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbSeccionItemStateChanged

    private void radioPeriodoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_radioPeriodoItemStateChanged

    }//GEN-LAST:event_radioPeriodoItemStateChanged

    private void radioSeccionItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_radioSeccionItemStateChanged

    }//GEN-LAST:event_radioSeccionItemStateChanged

    private void btnVerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVerActionPerformed

        //arrayList (dataSource) para el reporte principal
        ArrayList<ClsEntidadAlumnoDirectorio> dsAlumno = new ArrayList<>();

        ClsAlumno alumnos = new ClsAlumno();
        con = ClsConexion.getConection();
        ArrayList<ClsEntidadAlumnoPago> alumnoo = new ArrayList<>();
        if(radioSeccion.isSelected())
        {
            String _idAula = codigoSeccion.get(cmbSeccion.getSelectedIndex());
            alumnoo = alumnos.ListarAlumnoPagoSeccion(_idAula, con);
        }
        else if(radioPeriodo.isSelected())
        {
            String _idPeriodo = codigoPeriodo.get(cmbSeccion.getSelectedIndex());
            alumnoo = alumnos.ListarAlumnoPagoPeriodo(_idPeriodo, con);
        }

        for(ClsEntidadAlumnoPago ap : alumnoo)
        {
            //Se instancia la clase alumno asignando el nombre
            String _alumnoNombre = ap.getApellidos_Nombres();
            ClsEntidadAlumnoDirectorio a = new ClsEntidadAlumnoDirectorio(_alumnoNombre);
            //asignamos al dataSource los alumnos obtenidos
            dsAlumno.add(a);
            String nombrePadre="";
            String num1Padre = "";
            String num2Padre = "";

            String nombreMadre="";
            String num1Madre = "";
            String num2Madre = "";
            //obtenemos datos Padre y Madre
            try
            {
                String _idMatricula = ap.getId_Matricula();
                ResultSet rs = alumnos.SeleccionarMatriculaFichaReporte(_idMatricula, con);
                while(rs.next())
                {
                    nombrePadre = rs.getString("padre_apellido_paterno")+" "+rs.getString("padre_apellido_materno")+", "
                    + rs.getString("padre_nombre");
                    num1Padre = rs.getString("padre_telefono1");
                    num2Padre = rs.getString("padre_telefono2");

                    nombreMadre = rs.getString("madre_apellido_paterno")+" "+rs.getString("madre_apellido_materno")+", "
                    + rs.getString("madre_nombre");
                    num1Madre = rs.getString("madre_telefono1");
                    num2Madre = rs.getString("madre_telefono2");
                }

            }
            catch (Exception ex)
            {
                Logger.getLogger(FrmDirectorio.class.getName()).log(Level.SEVERE, null, ex);
            }
            //Asignamos a la Lista a traves del constructor
            for(int i=0;i<2;i++)
            {
                if(i==0)
                {
                    a.addPadreMadre(new ClsEntidadPadreMadreDirectorio(nombrePadre,num1Padre,num2Padre));
                }
                else
                {
                    a.addPadreMadre(new ClsEntidadPadreMadreDirectorio(nombreMadre,num1Madre,num2Madre));
                }

            }

        }
        ClsConexion.closeConnection(con);

        try {
            //principal
            System.out.print(System.getProperty("user.dir"));
            String  url7 ="/Reportes/rptDirectorioPrincipal.jrxml";
            JasperDesign jasperDesign = JRXmlLoader.load(System.getProperty("user.dir") + url7);
            JasperReport ReportMain = JasperCompileManager.compileReport(jasperDesign);

            Map<String, Object> params = new HashMap();
            params.put("Seccion", (String)cmbSeccion.getSelectedItem());
            params.put("logo", logotipo);
            params.put("SUBREPORT_DIR", System.getProperty("user.dir") + "\\Reportes\\");
                JasperPrint print = JasperFillManager.fillReport(ReportMain, params, new JRBeanCollectionDataSource(dsAlumno));
                JasperViewer view = new JasperViewer(print, false);
                view.setTitle("Directorio por aula");
                view.setVisible(true);

            } catch (JRException ex)
            {
                Logger.getLogger(FrmDirectorio.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(this, ex);
            }
    }//GEN-LAST:event_btnVerActionPerformed

    private void btnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnSalirActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSalir;
    private javax.swing.JButton btnVer;
    private javax.swing.JComboBox cmbNivel;
    private javax.swing.JComboBox cmbPeriodo;
    private javax.swing.JComboBox cmbSeccion;
    private javax.swing.ButtonGroup grupoFiltro;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JRadioButton radioNivel;
    private javax.swing.JRadioButton radioPeriodo;
    private javax.swing.JRadioButton radioSeccion;
    // End of variables declaration//GEN-END:variables
}
