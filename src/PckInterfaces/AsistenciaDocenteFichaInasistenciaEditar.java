/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package PckInterfaces;

import PckConexion.ClsConexion;
import PckEntidad.ClsEntidadInasistenciaFicha;
import PckNegocio.ClsAsistenciaFiltro;
import java.awt.Window;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.text.AbstractDocument;
import javax.swing.text.DocumentFilter;
import mpsEntity.ContactoEntity;
import mpsModel.MatriculaModelo;
import prymatricula.ClsMisc;

/**
 *
 * @author Kevin
 */
public class AsistenciaDocenteFichaInasistenciaEditar extends javax.swing.JDialog {

    SimpleDateFormat formato = new SimpleDateFormat("dd/MM/yyyy");
    SimpleDateFormat formatoOriginal = new SimpleDateFormat("yyyy-MM-dd");
    
    MatriculaModelo matriculaModelo = new MatriculaModelo();
    
    Connection con;
    String idAlumno;
    String nombreAlumno;
    String idFicha;
    String idAula;
    Date fechaFicha;
    JTable tblTelefono = new JTable();
    AsistenciaDocenteFichaInasistencia asistenciaDocenteFichaInasistencia;
     String numTelefono;
      DocumentFilter filtroMayuscula = new ClsMisc.UppercaseDocumentFilter(); 
     
    /**
     * Creates new form AsistenciaDocenteFichaInasistenciaEditar
     * @param parentWindow
     * @param idAlumno
     * @param idFicha
     * @param nombreAlumno
     * @param fechaFicha
     * @param idAula
     */
    public AsistenciaDocenteFichaInasistenciaEditar(Window parentWindow, String idFicha, 
            String idAlumno,String nombreAlumno,Date fechaFicha,String idAula) {
        super(parentWindow);
        this.idAlumno = idAlumno;
        this.idFicha = idFicha;
        this.nombreAlumno = nombreAlumno;
        this.fechaFicha = fechaFicha;
        this.idAula = idAula;
        initComponents();
        
        this.setLocationRelativeTo(null);
        
        ValidarCampos();
        
        txtAlumno.setText(nombreAlumno);
        CargarComboTelefono();
        if(!idFicha.equals(""))
        {
            LlenarFicha();
        }
        else
        {
            jdcFechaRetorno.setDate(fechaFicha);            
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        pnltop = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        pnlbot = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jSeparator3 = new javax.swing.JSeparator();
        jLabel8 = new javax.swing.JLabel();
        txtAlumno = new javax.swing.JLabel();
        txtMotivo = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jdcFechaRetorno = new com.toedter.calendar.JDateChooser();
        txtContacto = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        cbxFalta = new javax.swing.JCheckBox();
        cmbTelefono = new javax.swing.JComboBox<>();
        pnlLast = new javax.swing.JPanel();
        btnGuardar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        pnltop.setBackground(new java.awt.Color(255, 255, 255));
        pnltop.setLayout(new java.awt.GridBagLayout());

        jLabel3.setFont(new java.awt.Font("Droid Sans", 0, 11)); // NOI18N
        jLabel3.setText("EDITAR FICHA INASISTENCIA");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(20, 20, 20, 0);
        pnltop.add(jLabel3, gridBagConstraints);

        jSeparator2.setForeground(new java.awt.Color(224, 224, 224));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 269;
        gridBagConstraints.ipady = 1;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        pnltop.add(jSeparator2, gridBagConstraints);

        getContentPane().add(pnltop, java.awt.BorderLayout.PAGE_START);

        pnlbot.setBackground(new java.awt.Color(255, 255, 255));
        pnlbot.setLayout(new java.awt.GridBagLayout());

        jLabel7.setFont(new java.awt.Font("Droid Sans", 0, 11)); // NOI18N
        jLabel7.setText("Telefono contacto.");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(20, 20, 0, 0);
        pnlbot.add(jLabel7, gridBagConstraints);

        jSeparator3.setForeground(new java.awt.Color(224, 224, 224));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(20, 0, 0, 0);
        pnlbot.add(jSeparator3, gridBagConstraints);

        jLabel8.setFont(new java.awt.Font("Droid Sans", 0, 11)); // NOI18N
        jLabel8.setText("Persona contacto.");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(20, 20, 0, 0);
        pnlbot.add(jLabel8, gridBagConstraints);

        txtAlumno.setFont(new java.awt.Font("Droid Sans", 1, 12)); // NOI18N
        txtAlumno.setText("Alumno.");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(20, 20, 0, 20);
        pnlbot.add(txtAlumno, gridBagConstraints);

        txtMotivo.setFont(new java.awt.Font("Droid Sans", 0, 11)); // NOI18N
        txtMotivo.setMinimumSize(new java.awt.Dimension(450, 20));
        txtMotivo.setPreferredSize(new java.awt.Dimension(450, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(10, 20, 0, 20);
        pnlbot.add(txtMotivo, gridBagConstraints);

        jLabel10.setFont(new java.awt.Font("Droid Sans", 0, 11)); // NOI18N
        jLabel10.setText("Fecha retorno.");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(20, 20, 0, 0);
        pnlbot.add(jLabel10, gridBagConstraints);

        jdcFechaRetorno.setFont(new java.awt.Font("Droid Sans", 0, 11)); // NOI18N
        jdcFechaRetorno.setPreferredSize(new java.awt.Dimension(150, 22));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(10, 20, 0, 20);
        pnlbot.add(jdcFechaRetorno, gridBagConstraints);

        txtContacto.setFont(new java.awt.Font("Droid Sans", 0, 11)); // NOI18N
        txtContacto.setMinimumSize(new java.awt.Dimension(200, 20));
        txtContacto.setPreferredSize(new java.awt.Dimension(250, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(10, 20, 0, 20);
        pnlbot.add(txtContacto, gridBagConstraints);

        jLabel11.setFont(new java.awt.Font("Droid Sans", 0, 11)); // NOI18N
        jLabel11.setText("Motivo inasistencia.");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(20, 20, 0, 0);
        pnlbot.add(jLabel11, gridBagConstraints);

        cbxFalta.setBackground(new java.awt.Color(255, 255, 255));
        cbxFalta.setFont(new java.awt.Font("Droid Sans", 0, 11)); // NOI18N
        cbxFalta.setText("Falta justificada.");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(20, 20, 0, 20);
        pnlbot.add(cbxFalta, gridBagConstraints);

        cmbTelefono.setFont(new java.awt.Font("Droid Sans", 0, 11)); // NOI18N
        cmbTelefono.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(10, 20, 0, 20);
        pnlbot.add(cmbTelefono, gridBagConstraints);

        getContentPane().add(pnlbot, java.awt.BorderLayout.CENTER);

        pnlLast.setBackground(new java.awt.Color(255, 255, 255));
        pnlLast.setLayout(new java.awt.GridBagLayout());

        btnGuardar.setFont(new java.awt.Font("Droid Sans", 1, 12)); // NOI18N
        btnGuardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PckIconos/ic_save_black_24dp.png"))); // NOI18N
        btnGuardar.setText("GUARDAR FICHA");
        btnGuardar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(20, 0, 20, 20);
        pnlLast.add(btnGuardar, gridBagConstraints);

        getContentPane().add(pnlLast, java.awt.BorderLayout.PAGE_END);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ValidarCampos()
    {
        ((AbstractDocument) txtMotivo.getDocument()).setDocumentFilter(filtroMayuscula);
        ((AbstractDocument) txtContacto.getDocument()).setDocumentFilter(filtroMayuscula);
        //((AbstractDocument) txtTelefono.getDocument()).setDocumentFilter(filtroMayuscula);
    }
    
    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed

        if(!txtMotivo.getText().equals("") 
                && !txtContacto.getText().equals("") && jdcFechaRetorno.getDate() != null)
        {
            int faltaJustificada = 0;
            
            if(cbxFalta.isSelected()) {
                faltaJustificada = 1;
            }
            
            ContactoEntity contactoEntity = (ContactoEntity) cmbTelefono.getSelectedItem();
                        
            if(!idFicha.equals("")) //Update Ficha
            {
                ClsAsistenciaFiltro asistencia = new ClsAsistenciaFiltro();
                
                 
                ClsEntidadInasistenciaFicha inasistenciaFicha = new ClsEntidadInasistenciaFicha
                    (
                        "",
                        String.valueOf(faltaJustificada),    
                        formato.format(fechaFicha),
                        contactoEntity.getContacto_telefono(),
                        txtContacto.getText(),
                        txtMotivo.getText(),
                        formato.format(jdcFechaRetorno.getDate()),
                        idAula,
                        idAlumno
                    );
                asistencia.ModificarInasistenciaFicha(inasistenciaFicha, idFicha);
                asistenciaDocenteFichaInasistencia.ActualizarTablaFicha();
                this.dispose();
            }
            else //Insert Ficha
            {
                //insertar
                ClsAsistenciaFiltro asistencia = new ClsAsistenciaFiltro();
                ClsEntidadInasistenciaFicha inasistenciaFicha = new ClsEntidadInasistenciaFicha
                    (
                        "",
                        String.valueOf(faltaJustificada),
                        formato.format(fechaFicha),
                        contactoEntity.getContacto_telefono(),
                        txtContacto.getText(),
                        txtMotivo.getText(),
                        formato.format(jdcFechaRetorno.getDate()),
                        idAula,
                        idAlumno
                    );
                asistencia.InsertarInasistenciaFicha(inasistenciaFicha);

                asistenciaDocenteFichaInasistencia.ActualizarTablaFicha();
                this.dispose();
            }   
        }
        else
        {
            JOptionPane.showMessageDialog(null, "Debe llenar todos los campos requeridos", "Error al guardar", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_btnGuardarActionPerformed

    
    private void LlenarFicha()
    {
        con = ClsConexion.getConection();
        PreparedStatement pstmt;
        ResultSet rs;
        String sqlQuery="SELECT ina.inasistencia_ficha_motivo, ina.inasistencia_ficha_contacto,\n" +
        "ina.inasistencia_ficha_telefono,ina.inasistencia_ficha_retorno, ina.inasistencia_ficha_justificada\n" +
        "FROM mat_inasistencia_ficha as ina WHERE ina.inasistencia_ficha_id = ?";
        
        try 
        {
            pstmt = con.prepareStatement(sqlQuery);
            pstmt.setString(1, idFicha);
            rs = pstmt.executeQuery();
            
            while(rs.next())
            {                
                cbxFalta.setSelected(rs.getInt("inasistencia_ficha_justificada") == 1);                
                txtMotivo.setText(rs.getString("inasistencia_ficha_motivo"));
                txtContacto.setText(rs.getString("inasistencia_ficha_contacto"));
                setSelectedValue(cmbTelefono,rs.getString("inasistencia_ficha_telefono"));                
                jdcFechaRetorno.setDate(formatoOriginal.parse(rs.getString("inasistencia_ficha_retorno")));
            }
            
        } catch (SQLException | ParseException ex) {
            Logger.getLogger(AsistenciaDocenteFichaInasistenciaEditar.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        ClsConexion.closeConnection(con);
    }
    
    public void FormularioPadre(AsistenciaDocenteFichaInasistencia asistenciaDocenteFichaInasistencia)
    {
        this.asistenciaDocenteFichaInasistencia = asistenciaDocenteFichaInasistencia;
    }
    
    private void CargarComboTelefono() {
        
        matriculaModelo.CargarComboContacto(cmbTelefono, idAlumno);
    }
    
    
    private void setSelectedValue(JComboBox combo, String value) {
        
        ContactoEntity contactoEntity;
        
        for (int i = 0; i < combo.getItemCount(); i++)
        {
            contactoEntity = (ContactoEntity) combo.getItemAt(i);
            if (contactoEntity.getContacto_telefono().equalsIgnoreCase(value))
            {
                combo.setSelectedIndex(i);
                break;
            }
        }
        
    }
    
//    private void btnVer() {
//        JPanel panel = new JPanel();
//
//        JLabel lbl = new JLabel("         NUMEROS DE TELEFONOS ENCONTRADOS.");
//        String titulos[] = {"PERSONA","TELEFONO"};
//        String fila[] = new String[3];
//        ClsAlumno clsAlumno = new ClsAlumno();
//        con = ClsConexion.getConection();
//        DefaultTableModel dtm =new DefaultTableModel(null,titulos);
//        ResultSet rsResultado = clsAlumno.ListarAlumnoTelefonos(idAlumno, con);
//        try
//        {
//            while(rsResultado.next())
//            {
//                fila[0] = rsResultado.getString("alumno");
//                fila[1] = rsResultado.getString("telefono_alumno");
//                dtm.addRow(fila);
//                fila[0] = rsResultado.getString("madre");
//                fila[1] = rsResultado.getString("madre_telefono1");
//                dtm.addRow(fila);
//                fila[0] = rsResultado.getString("padre");
//                fila[1] = rsResultado.getString("padre_telefono1");
//                dtm.addRow(fila);
//            }
//            tblTelefono.setModel(dtm);
//            TableCellRenderer tcr =  tblTelefono.getTableHeader().getDefaultRenderer();
//            ClsMisc.miRender mr = new ClsMisc.miRender(tcr);
//            //mr.getTableCellRendererComponent(tblTelefono, fila, true, true, WIDTH, 0);
//            mr.getTableCellRendererComponent(tblTelefono, fila, true, true, WIDTH, 1);
//            con.close();
//        }
//        catch (SQLException ex)
//        {
//            Logger.getLogger(AsistenciaDocenteFichaInasistenciaEditar.class.getName()).log(Level.SEVERE, null, ex);
//        }
//
//        JScrollPane sPane = new JScrollPane();
//       
//        sPane.setViewportView(tblTelefono);
//        panel.setLayout(new BoxLayout(panel,BoxLayout.PAGE_AXIS));
//        panel.add(lbl);
//        panel.add(sPane);
//        
//        tblTelefono.addMouseListener(new java.awt.event.MouseAdapter() {
//            @Override
//            public void mouseClicked(java.awt.event.MouseEvent evt) {
//                
//                int reg;
//                DefaultTableModel dtmm = (DefaultTableModel)tblTelefono.getModel();
//                reg = tblTelefono.getSelectedRow();
//                numTelefono = ((String)dtmm.getValueAt(reg, 1)); 
//                
//            }
//        });        
//        
//        String[] options = new String[]{"COPIAR NUMERO", "CANCELAR"};
//        int option = JOptionPane.showOptionDialog(null, panel, "Telefonos contacto",
//            JOptionPane.NO_OPTION, JOptionPane.PLAIN_MESSAGE,
//            null, options, options[0]);
//        
//        if(option == 0) // pressing OK button
//        {
//                if(!txtTelefono.getText().equals(""))
//                {
//                    txtTelefono.setText(txtTelefono.getText()+" - "+numTelefono);
//                }
//                else
//                {
//                    txtTelefono.setText(numTelefono);
//                }
//        }
//    }
   

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnGuardar;
    private javax.swing.JCheckBox cbxFalta;
    private javax.swing.JComboBox<String> cmbTelefono;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private com.toedter.calendar.JDateChooser jdcFechaRetorno;
    private javax.swing.JPanel pnlLast;
    private javax.swing.JPanel pnlbot;
    private javax.swing.JPanel pnltop;
    private javax.swing.JLabel txtAlumno;
    private javax.swing.JTextField txtContacto;
    private javax.swing.JTextField txtMotivo;
    // End of variables declaration//GEN-END:variables
}
