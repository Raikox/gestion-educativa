/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package PckInterfaces;

import PckConexion.ClsConexion;
import PckEntidad.ClsEntidadAlumnoPago;
import PckEntidad.ClsEntidadSeccion;
import PckNegocio.ClsAlumno;
import PckNegocio.ClsAnecdotario;
import PckRenderTabla.GeneralRender;
import PckRenderTabla.GeneralRender.MiRender;
import PckRenderTabla.Render;
import java.awt.Window;
import static java.awt.image.ImageObserver.WIDTH;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JButton;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.SwingUtilities;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellRenderer;
import javax.swing.table.TableColumn;
import mpsDAL.PsicologiaDAL;
import mpsEntity.PsicologiaAccionEntity;
import mpsEntity.PsicologiaEntity;
import prymatricula.ClsMisc;

/**
 *
 * @author Kevin
 */
public class PsicologiaDocente extends javax.swing.JPanel {

    ArrayList<String> codigoAula = new ArrayList();
    ArrayList<String> codigoPeriodo = new ArrayList(); 
    ArrayList<String> codigoAulaTodos = new ArrayList();
    ArrayList<String> nombreSeccion = new ArrayList(); 
    
    int alturaCelda = 22;
    
    Connection con=null;
    
    private String idMatricula;
    private String nombreAlumno;    
    String idCaso="";
    
    Date date = new Date();
    
    /**
     * Creates new form AnecdotarioAdministracionView
     */
    public PsicologiaDocente() {
        initComponents();
        
        grupo.add(cbxActivo);
        grupo.add(cbxInactivo);
        grupo.add(cbxTodo);
        
        CargarComboPeriodo();
        CargarComboAula();
        
        if(!codigoAula.isEmpty())
        {
            CargarTablaAlumno();
        }
        
        if(!codigoPeriodo.isEmpty()) {
            String idPeriodo = codigoPeriodo.get(cmbPeriodo.getSelectedIndex());
            CargarTablaCasosTodos(idPeriodo);
        }
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        grupo = new javax.swing.ButtonGroup();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        btnNuevoCaso = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        jPanel6 = new javax.swing.JPanel();
        jSeparator3 = new javax.swing.JSeparator();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblAlumno = new javax.swing.JTable();
        txtBusqueda = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        cmbAula = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        cmbPeriodo = new javax.swing.JComboBox<>();
        jTabbedPane3 = new javax.swing.JTabbedPane();
        jPanel8 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        tblCasosTodos = new javax.swing.JTable();
        cbxInactivo = new javax.swing.JRadioButton();
        cbxTodo = new javax.swing.JRadioButton();
        cbxActivo = new javax.swing.JRadioButton();
        jPanel7 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblCasos = new javax.swing.JTable();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel9 = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        jScrollPane6 = new javax.swing.JScrollPane();
        txtAccion = new javax.swing.JTextArea();
        jScrollPane5 = new javax.swing.JScrollPane();
        tblComentario = new javax.swing.JTable();

        setBackground(new java.awt.Color(237, 237, 237));
        setLayout(new java.awt.BorderLayout());

        jPanel2.setBackground(new java.awt.Color(237, 237, 237));
        jPanel2.setLayout(new java.awt.GridBagLayout());

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setLayout(new java.awt.GridBagLayout());

        btnNuevoCaso.setFont(new java.awt.Font("Droid Sans", 1, 12)); // NOI18N
        btnNuevoCaso.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PckIconos/ic_add_black_24dp.png"))); // NOI18N
        btnNuevoCaso.setText("NUEVO CASO PSICOLOGIA");
        btnNuevoCaso.setEnabled(false);
        btnNuevoCaso.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevoCasoActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(20, 0, 20, 20);
        jPanel3.add(btnNuevoCaso, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 10, 10);
        jPanel2.add(jPanel3, gridBagConstraints);

        add(jPanel2, java.awt.BorderLayout.PAGE_END);

        jPanel4.setBackground(new java.awt.Color(237, 237, 237));
        jPanel4.setPreferredSize(new java.awt.Dimension(911, 50));
        jPanel4.setLayout(new java.awt.GridBagLayout());

        jPanel5.setBackground(new java.awt.Color(237, 240, 242));
        jPanel5.setLayout(new java.awt.GridBagLayout());

        jLabel1.setFont(new java.awt.Font("Droid Sans", 1, 12)); // NOI18N
        jLabel1.setText("ATENCION PSICOLOGIA");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        jPanel5.add(jLabel1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel4.add(jPanel5, gridBagConstraints);

        add(jPanel4, java.awt.BorderLayout.PAGE_START);

        jPanel1.setBackground(new java.awt.Color(237, 240, 242));
        jPanel1.setLayout(new java.awt.GridBagLayout());

        jTabbedPane2.setFont(new java.awt.Font("Droid Sans", 0, 11)); // NOI18N
        jTabbedPane2.setMinimumSize(new java.awt.Dimension(350, 58));
        jTabbedPane2.setPreferredSize(new java.awt.Dimension(497, 604));

        jPanel6.setBackground(new java.awt.Color(255, 255, 255));
        jPanel6.setMinimumSize(new java.awt.Dimension(220, 27));
        jPanel6.setLayout(new java.awt.GridBagLayout());

        jSeparator3.setForeground(new java.awt.Color(224, 224, 224));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 20);
        jPanel6.add(jSeparator3, gridBagConstraints);

        tblAlumno.setFont(new java.awt.Font("Droid Sans", 0, 11)); // NOI18N
        tblAlumno.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Title 1", "Title 2"
            }
        ));
        tblAlumno.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        tblAlumno.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tblAlumno.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblAlumnoMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblAlumno);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 20, 20);
        jPanel6.add(jScrollPane2, gridBagConstraints);

        txtBusqueda.setFont(new java.awt.Font("Droid Sans", 0, 11)); // NOI18N
        txtBusqueda.setMinimumSize(new java.awt.Dimension(250, 20));
        txtBusqueda.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtBusquedaMouseClicked(evt);
            }
        });
        txtBusqueda.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtBusquedaKeyTyped(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 20);
        jPanel6.add(txtBusqueda, gridBagConstraints);

        jLabel4.setFont(new java.awt.Font("Droid Sans", 0, 11)); // NOI18N
        jLabel4.setText("Búsqueda.");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(20, 20, 20, 0);
        jPanel6.add(jLabel4, gridBagConstraints);

        jLabel2.setFont(new java.awt.Font("Droid Sans", 0, 11)); // NOI18N
        jLabel2.setText("Aula.");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 20, 0);
        jPanel6.add(jLabel2, gridBagConstraints);

        cmbAula.setFont(new java.awt.Font("Droid Sans", 0, 11)); // NOI18N
        cmbAula.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmbAula.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbAulaItemStateChanged(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 20, 20);
        jPanel6.add(cmbAula, gridBagConstraints);

        jLabel6.setFont(new java.awt.Font("Droid Sans", 0, 11)); // NOI18N
        jLabel6.setText("Periodo.");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(20, 20, 20, 0);
        jPanel6.add(jLabel6, gridBagConstraints);

        cmbPeriodo.setFont(new java.awt.Font("Droid Sans", 0, 11)); // NOI18N
        cmbPeriodo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmbPeriodo.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbPeriodoItemStateChanged(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 20);
        jPanel6.add(cmbPeriodo, gridBagConstraints);

        jTabbedPane2.addTab("Listado alumnos", jPanel6);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 10, 10);
        jPanel1.add(jTabbedPane2, gridBagConstraints);

        jTabbedPane3.setFont(new java.awt.Font("Droid Sans", 0, 11)); // NOI18N

        jPanel8.setBackground(new java.awt.Color(255, 255, 255));
        jPanel8.setLayout(new java.awt.GridBagLayout());

        tblCasosTodos.setFont(new java.awt.Font("Droid Sans", 0, 11)); // NOI18N
        tblCasosTodos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Title 1", "Title 2"
            }
        ));
        tblCasosTodos.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tblCasosTodos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblCasosTodosMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(tblCasosTodos);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(10, 20, 20, 20);
        jPanel8.add(jScrollPane4, gridBagConstraints);

        cbxInactivo.setBackground(new java.awt.Color(255, 255, 255));
        cbxInactivo.setFont(new java.awt.Font("Droid Sans", 0, 11)); // NOI18N
        cbxInactivo.setText("Inactivos");
        cbxInactivo.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbxInactivoItemStateChanged(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.insets = new java.awt.Insets(20, 20, 0, 0);
        jPanel8.add(cbxInactivo, gridBagConstraints);

        cbxTodo.setBackground(new java.awt.Color(255, 255, 255));
        cbxTodo.setFont(new java.awt.Font("Droid Sans", 0, 11)); // NOI18N
        cbxTodo.setText("Todos");
        cbxTodo.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbxTodoItemStateChanged(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(20, 20, 0, 0);
        jPanel8.add(cbxTodo, gridBagConstraints);

        cbxActivo.setBackground(new java.awt.Color(255, 255, 255));
        cbxActivo.setFont(new java.awt.Font("Droid Sans", 0, 11)); // NOI18N
        cbxActivo.setSelected(true);
        cbxActivo.setText("Activos");
        cbxActivo.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbxActivoItemStateChanged(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(20, 20, 0, 0);
        jPanel8.add(cbxActivo, gridBagConstraints);

        jTabbedPane3.addTab("Todos los casos", jPanel8);

        jPanel7.setBackground(new java.awt.Color(255, 255, 255));
        jPanel7.setLayout(new java.awt.GridBagLayout());

        tblCasos.setFont(new java.awt.Font("Droid Sans", 0, 12)); // NOI18N
        tblCasos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "FECHA", "ESTADO", "PROBLEMA PRESENTADO"
            }
        ));
        tblCasos.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tblCasos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblCasosMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(tblCasos);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(10, 20, 20, 20);
        jPanel7.add(jScrollPane3, gridBagConstraints);

        jTabbedPane3.addTab("Casos por alumno", jPanel7);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 2.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 10, 10);
        jPanel1.add(jTabbedPane3, gridBagConstraints);

        jTabbedPane1.setFont(new java.awt.Font("Droid Sans", 0, 11)); // NOI18N
        jTabbedPane1.setMinimumSize(new java.awt.Dimension(250, 85));

        jPanel9.setBackground(new java.awt.Color(255, 255, 255));
        jPanel9.setLayout(new java.awt.GridBagLayout());

        jLabel13.setFont(new java.awt.Font("Droid Sans", 0, 11)); // NOI18N
        jLabel13.setText("Acción realizada.");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(20, 20, 0, 20);
        jPanel9.add(jLabel13, gridBagConstraints);

        jScrollPane6.setMinimumSize(new java.awt.Dimension(300, 350));
        jScrollPane6.setPreferredSize(new java.awt.Dimension(300, 350));

        txtAccion.setEditable(false);
        txtAccion.setColumns(20);
        txtAccion.setFont(new java.awt.Font("Droid Sans", 0, 11)); // NOI18N
        txtAccion.setLineWrap(true);
        txtAccion.setRows(5);
        txtAccion.setWrapStyleWord(true);
        txtAccion.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        jScrollPane6.setViewportView(txtAccion);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 2.0;
        gridBagConstraints.insets = new java.awt.Insets(10, 20, 20, 20);
        jPanel9.add(jScrollPane6, gridBagConstraints);

        jScrollPane5.setMinimumSize(new java.awt.Dimension(452, 300));

        tblComentario.setFont(new java.awt.Font("Droid Sans", 0, 11)); // NOI18N
        tblComentario.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null}
            },
            new String [] {
                "FECHA", "PERSONA"
            }
        ));
        tblComentario.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tblComentario.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblComentarioMouseClicked(evt);
            }
        });
        jScrollPane5.setViewportView(tblComentario);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(20, 20, 0, 20);
        jPanel9.add(jScrollPane5, gridBagConstraints);

        jTabbedPane1.addTab("Acciones Psicología", jPanel9);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 10, 10);
        jPanel1.add(jTabbedPane1, gridBagConstraints);

        add(jPanel1, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void txtBusquedaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtBusquedaMouseClicked
        
        int fin = txtBusqueda.getHeight();
        txtBusqueda.setSelectionStart(0);
        txtBusqueda.setSelectionEnd(fin);
        
    }//GEN-LAST:event_txtBusquedaMouseClicked

    private void txtBusquedaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBusquedaKeyTyped
        
        String a = txtBusqueda.getText();
        if(a.equals(""))
        {
            CargarTablaAlumno();
            btnNuevoCaso.setEnabled(false);
        }
        else
        {            
            CargarTablaAlumnoBusqueda(a);
            btnNuevoCaso.setEnabled(false);
        }
    }//GEN-LAST:event_txtBusquedaKeyTyped

    private void tblAlumnoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblAlumnoMouseClicked
        
        int reg;
        DefaultTableModel defaultTableModel;
        reg = tblAlumno.getSelectedRow();
        if(reg == -1)
        {JOptionPane.showMessageDialog(null, "Debe Seleccionar una opción");}
        else
        {
            defaultTableModel = (DefaultTableModel)tblAlumno.getModel();
            idMatricula = ((String)defaultTableModel.getValueAt(reg, 0));
            System.out.println("idMatricula: "+idMatricula);
            nombreAlumno = (String) defaultTableModel.getValueAt(reg, 2);
            
            CargarTablaCasosAlumno(idMatricula);
            
            btnNuevoCaso.setEnabled(true);
        }
        
    }//GEN-LAST:event_tblAlumnoMouseClicked

    private void tblCasosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblCasosMouseClicked
       
        
        DefaultTableModel dtm = (DefaultTableModel)tblCasos.getModel();
        int row = tblCasos.getSelectedRow();
        int column = tblCasos.getSelectedColumn();
        
                
        if(row == -1)
        {
            JOptionPane.showMessageDialog(null, "Debe Seleccionar un registro");
        }
        else
        {
            Object value = tblCasos.getValueAt(row, column);
            idCaso = String.valueOf(dtm.getValueAt(row, 0));
            idMatricula = (String) dtm.getValueAt(row, 1);
            System.out.println(idCaso+"-"+idMatricula);
            if(value instanceof JButton)
            {
                ((JButton)value).doClick();
                JButton boton = (JButton) value;
                if(boton.getName().equals("btnEditar")) //BOTON EDITAR
                {
                    Window parentWindow = SwingUtilities.windowForComponent(this);
                    PsicologiaDocenteEditar psicologiaDocenteEditar = new PsicologiaDocenteEditar
                                            (parentWindow,Integer.parseInt(idCaso),Integer.parseInt(idMatricula));
                    psicologiaDocenteEditar.FormularioPadre(this);
                    psicologiaDocenteEditar.setModal(true);
                    psicologiaDocenteEditar.setVisible(true);
                    psicologiaDocenteEditar.toFront();
                }     
                else if(boton.getName().equals("btnVer")) //VER FICHA
                {
                    Window parentWindow = SwingUtilities.windowForComponent(this);
                    PsicologiaAdministracionVer psicologiaDocenteEditar = new PsicologiaAdministracionVer
                                            (parentWindow,Integer.parseInt(idCaso),Integer.parseInt(idMatricula));
                    psicologiaDocenteEditar.setModal(true);
                    psicologiaDocenteEditar.setVisible(true);
                    psicologiaDocenteEditar.toFront();
                }
            }
            else
            {                   
                CargarTablaPsicologiaAccion(idCaso);
            }
          
        }
    }//GEN-LAST:event_tblCasosMouseClicked

    private void CargarTablaPsicologiaAccion(String idPsicologiaCaso)
    {
        String titulos[] = {"ID ACCION","ID PERSONAL","ACCION","FECHA","PERSONA"};
        PsicologiaDAL psicologiaDAL = new PsicologiaDAL();        
        ArrayList<PsicologiaAccionEntity> arrayAccion = psicologiaDAL.ListarPsicologiaAccion(idPsicologiaCaso);
        Object fila[] = new Object[6];
        
        DefaultTableModel dtm = new DefaultTableModel(null,titulos)
        { 
            @Override
            public boolean isCellEditable(int rowIndex,int columnIndex){return false;} 
        };          
        
        for(PsicologiaAccionEntity ae : arrayAccion)
        {
            fila[0] = ae.getPsa_id();
            fila[1] = ae.getPersonal_id();
            fila[2] = ae.getPsa_accion();
            fila[3] = ae.getPsa_fecha();
            fila[4] = ae.getPersonal_nombre();
            dtm.addRow(fila);
        }
        
        tblComentario.setModel(dtm);
        tblComentario.setRowHeight(alturaCelda);
        
        tblComentario.removeColumn(tblComentario.getColumnModel().getColumn(0));         
        tblComentario.removeColumn(tblComentario.getColumnModel().getColumn(0));  
        tblComentario.removeColumn(tblComentario.getColumnModel().getColumn(0)); 
        
        TableColumn  cfecha =tblComentario.getColumnModel().getColumn(0);
        cfecha.setPreferredWidth(100);
        TableColumn  cPersona =tblComentario.getColumnModel().getColumn(1);
        cPersona.setPreferredWidth(200);
        
        //CENTRAR COLUMNAS Y FILAS (ClsMisc)
        TableCellRenderer tcr =  tblCasos.getTableHeader().getDefaultRenderer();                       
        MiRender mr = new MiRender(tcr);
        tblCasos.setDefaultRenderer(Object.class, mr);
        mr.getTableCellRendererComponent(tblCasos, fila, true, true, WIDTH, 0);
        
        //tblAnecdotario.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
    }
    
    private void tblComentarioMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblComentarioMouseClicked
        int reg;
        DefaultTableModel dtm;
        reg = tblComentario.getSelectedRow();
        if(reg == -1)
        {
            JOptionPane.showMessageDialog(null, "Debe Seleccionar un registro");
        }
        else
        {
            
            dtm = (DefaultTableModel)tblComentario.getModel();    
            System.out.println((String) dtm.getValueAt(reg, 2));
            txtAccion.setText((String) dtm.getValueAt(reg, 2));
            //txtComentarioAdministracion.setText((String) dtm.getValueAt(reg, 2));           
           
        }
    }//GEN-LAST:event_tblComentarioMouseClicked

    private void btnNuevoCasoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevoCasoActionPerformed
        
        Window parentWindow = SwingUtilities.windowForComponent(this);
        
        
        PsicologiaDocenteNuevo psicologiaDocenteNuevo = new PsicologiaDocenteNuevo
                                    (
                                            parentWindow,
                                            Integer.parseInt(idMatricula),
                                            nombreAlumno,
                                            ObtenerNombreAula()
                                    );
        psicologiaDocenteNuevo.FormularioPadre(this);
        psicologiaDocenteNuevo.setModal(true);
        psicologiaDocenteNuevo.setVisible(true);
        psicologiaDocenteNuevo.toFront();
    }//GEN-LAST:event_btnNuevoCasoActionPerformed

    private void cmbAulaItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbAulaItemStateChanged
       
        if(cmbAula.getSelectedIndex() != -1)
        {
            CargarTablaAlumno();
        }
        
    }//GEN-LAST:event_cmbAulaItemStateChanged

    private void tblCasosTodosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblCasosTodosMouseClicked
        DefaultTableModel dtm = (DefaultTableModel)tblCasosTodos.getModel();
        int row = tblCasosTodos.getSelectedRow();
        int column = tblCasosTodos.getSelectedColumn();
        String estado;
        if(row == -1)
        {
            JOptionPane.showMessageDialog(null, "Debe Seleccionar un registro");
        }
        else
        {
            txtAccion.setText("");
            Object value = tblCasosTodos.getValueAt(row, column);
            idCaso = String.valueOf(dtm.getValueAt(row, 0));
            idMatricula = (String) dtm.getValueAt(row, 1);
            estado = (String) dtm.getValueAt(row, 3);
            if(value instanceof JButton)
            {
                ((JButton)value).doClick();
                JButton boton = (JButton) value;
                if(boton.getName().equals("btnEditar")) //EDITAR ESTADO
                {
                    Window parentWindow = SwingUtilities.windowForComponent(this);
                    PsicologiaAdministracionEstado pEstado = new PsicologiaAdministracionEstado(
                        parentWindow,idCaso,nombreAlumno,estado);
                    pEstado.setModal(true);
                    pEstado.setVisible(true);
                    pEstado.toFront();
                }
                else if(boton.getName().equals("btnVer")) //VER FICHA
                {
                    Window parentWindow = SwingUtilities.windowForComponent(this);
                    PsicologiaAdministracionVer psicologiaDocenteEditar = new PsicologiaAdministracionVer
                    (parentWindow,Integer.parseInt(idCaso),Integer.parseInt(idMatricula));
                    psicologiaDocenteEditar.setModal(true);
                    psicologiaDocenteEditar.setVisible(true);
                    psicologiaDocenteEditar.toFront();
                }
            }
            else
            {
                CargarTablaPsicologiaAccion(idCaso);
               
            }

        }
    }//GEN-LAST:event_tblCasosTodosMouseClicked

    private void cbxInactivoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbxInactivoItemStateChanged
        if(cbxInactivo.isSelected()) {
            String idPeriodo = codigoPeriodo.get(cmbPeriodo.getSelectedIndex());
            CargarTablaCasosTodos(idPeriodo);
        }

    }//GEN-LAST:event_cbxInactivoItemStateChanged

    private void cbxTodoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbxTodoItemStateChanged
        if(cbxTodo.isSelected()) {
            String idPeriodo = codigoPeriodo.get(cmbPeriodo.getSelectedIndex());
            CargarTablaCasosTodos(idPeriodo);
        }
    }//GEN-LAST:event_cbxTodoItemStateChanged

    private void cbxActivoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbxActivoItemStateChanged
        if(cbxActivo.isSelected()){
            String idPeriodo = codigoPeriodo.get(cmbPeriodo.getSelectedIndex());
            CargarTablaCasosTodos(idPeriodo);
        }

    }//GEN-LAST:event_cbxActivoItemStateChanged

    private void cmbPeriodoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbPeriodoItemStateChanged
        if(cmbPeriodo.getSelectedIndex() != -1)
        {
            CargarComboAula();
            
            if(cmbAula.getSelectedIndex() != -1)
            {
                CargarTablaAlumno();                
            }
            String idPeriodo = codigoPeriodo.get(cmbPeriodo.getSelectedIndex());
            CargarTablaCasosTodos(idPeriodo);
        }
    }//GEN-LAST:event_cmbPeriodoItemStateChanged

    private String ObtenerNombreAula()
    {
        String nombreAula="";
        Connection conx = ClsConexion.getConection();
        PreparedStatement st;
        ResultSet rsResultado;
        String sqlQuery = "select s.nombre_seccion\n" +
            "from mat_matricula as m inner join mat_seccion as s\n" +
            "on m.seccion_id = s.id_seccion where id_matricula = ?";
        
        try 
        {
            st = conx.prepareStatement(sqlQuery);
            st.setString(1, idMatricula);
            rsResultado = st.executeQuery();
            while(rsResultado.next())
            {
                nombreAula = rsResultado.getString("nombre_seccion");
                
            }
        } catch (SQLException ex) {
            Logger.getLogger(PsicologiaDocenteEditar.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        ClsConexion.closeConnection(conx);
        return nombreAula;
    }
    
    public void CargarTablaCasosAlumno(String idMatricula) //Aca me quede
    {        
        String titulos[] = {"ID","IDMAT","FECHA","ESTADO","PROBLEMA PRESENTADO","",""};
        Object fila[] = new Object[9];
        JButton btnEditar = new JButton("");   
        JButton btnVerFicha = new JButton("");
        PsicologiaDAL psicologia = new PsicologiaDAL();        
        ArrayList<PsicologiaEntity> arrayPsicologia = psicologia.ListarPsicologiaCasosAlumno(idMatricula);        
        
        btnEditar.setName("btnEditar");        
        btnEditar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PckIcoMenu/edit_black.png")));    
        
        btnVerFicha.setName("btnVer");
        btnVerFicha.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PckIcoMenu/file_find.png")));
        
        DefaultTableModel dtm = new DefaultTableModel(null,titulos)
        { 
            @Override
            public boolean isCellEditable(int rowIndex,int cotxtComentariourn)
            {return false;} 
        };    
        
        for(PsicologiaEntity pe : arrayPsicologia)
        {            
            fila[0] = pe.getPsc_id();
            fila[1] = pe.getId_matricula();
            fila[2] = pe.getPsc_fecha();            
            if(pe.getPsc_estado().equals("A"))
            { fila[3] = "ACTIVO"; }else{fila[3] = "INACTIVO";}
            fila[4] = pe.getPsc_problema();
            fila[5] = btnEditar;  
            fila[6] = btnVerFicha;
            dtm.addRow(fila);
        }   
        
        tblCasos.setModel(dtm);
        tblCasos.setRowHeight(alturaCelda);
        
        tblCasos.removeColumn(tblCasos.getColumnModel().getColumn(0));         
        tblCasos.removeColumn(tblCasos.getColumnModel().getColumn(0));         
        
        TableColumn  cfecha =tblCasos.getColumnModel().getColumn(0);
        cfecha.setPreferredWidth(100);
        TableColumn  cestado =tblCasos.getColumnModel().getColumn(1);
        cestado.setPreferredWidth(100);     
        TableColumn  cproblema =tblCasos.getColumnModel().getColumn(2);
        cproblema.setPreferredWidth(230);           
        TableColumn  cbotoneditar =tblCasos.getColumnModel().getColumn(3);
        cbotoneditar.setPreferredWidth(60);        
        TableColumn  cbotonver =tblCasos.getColumnModel().getColumn(4);
        cbotonver.setPreferredWidth(60);
        //CENTRAR COLUMNAS Y FILAS (ClsMisc)
        TableCellRenderer tcr =  tblCasos.getTableHeader().getDefaultRenderer();        
        GeneralRender.MiRender mr = new GeneralRender.MiRender(tcr); 
        tblCasos.setDefaultRenderer(Object.class, new Render());
        mr.getTableCellRendererComponent(tblCasos, fila, true, true, WIDTH, 0);
        
        tblCasos.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);

    }
    
    private void CargarTablaCasosTodos(String idPeriodo)
    {
        String titulos[] = {"ID","IDMAT","FECHA","ESTADO","ALUMNO","AULA","",""}; //Editar //Ver
        PsicologiaDAL psicologia = new PsicologiaDAL();                
        JButton btnEditar = new JButton("");
        JButton btnVerFicha = new JButton("");         
        Object fila[] = new Object[10];
        
        ArrayList<PsicologiaEntity> arrayPsi = null;
        
        if(cbxTodo.isSelected()) {
            arrayPsi = psicologia.ListarPsicologiaCasos(false,false,true,idPeriodo);
        }
        else if(cbxActivo.isSelected()) {
            arrayPsi = psicologia.ListarPsicologiaCasos(true,false,false,idPeriodo);
        }
        else if(cbxInactivo.isSelected()) {
            arrayPsi = psicologia.ListarPsicologiaCasos(false,true,false,idPeriodo);
        }
        
        btnEditar.setName("btnEditar");        
        btnEditar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PckIcoMenu/edit_black.png")));  
        btnVerFicha.setName("btnVer");
        btnVerFicha.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PckIcoMenu/file_find.png")));
                
        DefaultTableModel dtm = new DefaultTableModel(null,titulos)
        { 
            @Override
            public boolean isCellEditable(int rowIndex,int columnIndex)
            {return false;} 
        };
                
        
        for(PsicologiaEntity pe : arrayPsi)
        {
            for(String id : codigoAulaTodos)
            {
                if(pe.getId_seccion() == Integer.parseInt(id))
                {
                    fila[0] = pe.getPsc_id();
                    fila[1] = pe.getId_matricula();
                    fila[2] = pe.getPsc_fecha();
                    if(pe.getPsc_estado().equals("A"))
                    { fila[3] = "ACTIVO"; }else{fila[3] = "INACTIVO";}
                    fila[4] = pe.getPsc_alumno();
                    fila[5] = pe.getPsc_aula();
                    fila[6] = btnEditar;     
                    fila[7] = btnVerFicha; 
                    dtm.addRow(fila);
                }
            }
        }   
        
        tblCasosTodos.setModel(dtm);
        tblCasosTodos.setRowHeight(alturaCelda);
        
        tblCasosTodos.removeColumn(tblCasosTodos.getColumnModel().getColumn(0));  
        tblCasosTodos.removeColumn(tblCasosTodos.getColumnModel().getColumn(0));  
        
        TableColumn  cfecha =tblCasosTodos.getColumnModel().getColumn(0);
        cfecha.setPreferredWidth(70);        
        TableColumn  cEstado =tblCasosTodos.getColumnModel().getColumn(1);
        cEstado.setPreferredWidth(70);        
        TableColumn  cAlumno =tblCasosTodos.getColumnModel().getColumn(2);
        cAlumno.setPreferredWidth(250);        
        TableColumn  cAula =tblCasosTodos.getColumnModel().getColumn(3);
        cAula.setPreferredWidth(200);        
        TableColumn  cBoton =tblCasosTodos.getColumnModel().getColumn(4);
        cBoton.setPreferredWidth(60);   
        TableColumn  cVer =tblCasosTodos.getColumnModel().getColumn(5);
        cVer.setPreferredWidth(60);  
        
        TableCellRenderer tcr =  tblCasosTodos.getTableHeader().getDefaultRenderer();        
        GeneralRender.MiRender mr = new GeneralRender.MiRender(tcr); 
        tblCasosTodos.setDefaultRenderer(Object.class, new Render());
        mr.getTableCellRendererComponent(tblCasosTodos, fila, true, true, WIDTH, 0);
        mr.getTableCellRendererComponent(tblCasosTodos, fila, true, true, WIDTH, 1);
        mr.getTableCellRendererComponent(tblCasosTodos, fila, true, true, WIDTH, 3);
        
        //tblAnecdotario.setAutoResizeMode(JTable.AUTO_RESIZE_LAST_COLUMN);
        tblCasosTodos.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
    }
    
    private void CargarComboPeriodo()
    {
        codigoPeriodo.clear();
        codigoAulaTodos.clear();
        System.out.println("Personal ="+FrmPrincipal.idPersonalLogeado);
        //comprobar si es profesor        
        ClsAnecdotario ane = new ClsAnecdotario();
        con = ClsConexion.getConection();        
        ArrayList<ClsEntidadSeccion> seccion = ane.ListarSeccionProfesor(FrmPrincipal.idPersonalLogeado, con);
        ClsConexion.closeConnection(con);        
        DefaultComboBoxModel dcbPeriodo = new DefaultComboBoxModel();
        dcbPeriodo.removeAllElements();
        cmbPeriodo.removeAllItems();
        Iterator it = seccion.iterator();
        String periodo="";
        
        while(it.hasNext())
        {           
            ClsEntidadSeccion Seccion;
            Seccion = (ClsEntidadSeccion) it.next();
            //periodo                       
            if(!periodo.equals(Seccion.getNombre_Periodo()))
            {
                dcbPeriodo.addElement(Seccion.getNombre_Periodo()); 
                codigoPeriodo.add(Seccion.getId_Periodo());                
                codigoAulaTodos.add(Seccion.getId_Seccion());
                periodo = Seccion.getNombre_Periodo();               
            }                    
        }
        cmbPeriodo.setModel(dcbPeriodo);
    }
    
    private String obtenerIdAlumno()
    {
        String aux = "";
        con = ClsConexion.getConection();
        ResultSet rs;
        try 
        {
            PreparedStatement st = con.prepareStatement("select MPS_Alumno_id_alumno from mat_matricula where"
                    + " id_matricula = ?");
            st.setString(1, idMatricula);
            rs = st.executeQuery();
            
            while(rs.next())
            {
                aux = rs.getString("MPS_Alumno_id_alumno");
            }
        } catch (SQLException ex) {
            Logger.getLogger(PsicologiaDocente.class.getName()).log(Level.SEVERE, null, ex);
        }
        return aux;
    }
    
    private void CargarComboAula()
    {
        codigoAula.clear();        
        ClsAnecdotario ane = new ClsAnecdotario();
        con = ClsConexion.getConection();        
        
        System.out.println("Personal ="+FrmPrincipal.idPersonalLogeado);
        
        //comprobar si es profesor        
        ArrayList<ClsEntidadSeccion> seccion = ane.ListarSeccionProfesor(FrmPrincipal.idPersonalLogeado, con);
        ClsConexion.closeConnection(con);
        DefaultComboBoxModel dcbSeccion = new DefaultComboBoxModel();
        dcbSeccion.removeAllElements();
        cmbAula.removeAllItems();        
        String sec="";
        String idPer = codigoPeriodo.get(cmbPeriodo.getSelectedIndex());
        
        //carga solo las aulas asignadas al docente
        for(ClsEntidadSeccion es : seccion)
        {              
            if(idPer.equals(es.getId_Periodo()))
            {
                dcbSeccion.addElement(es.getNombre_Seccion());
                codigoAula.add(es.getId_Seccion());
            }            
        }
        cmbAula.setModel(dcbSeccion);
    }
    
    private void CargarTablaAlumno()
    {
        int p=1;
        String idSeccion = codigoAula.get(cmbAula.getSelectedIndex());
        String titulos[] = {"ID","N°","APELLIDOS Y NOMBRES"};
        String fila[] = new String[6];  
        con = ClsConexion.getConection();
        ClsAlumno alumnos = new ClsAlumno();
        ArrayList<ClsEntidadAlumnoPago> alumnoo = alumnos.ListarAlumnoPagoSeccion(idSeccion,con);    
        
        DefaultTableModel defaultTableModel =new DefaultTableModel(null,titulos)
        { 
            @Override
            public boolean isCellEditable(int rowIndex,int columnIndex)
            {return false;}
        };
        
        for(ClsEntidadAlumnoPago ap : alumnoo)
        {
            fila[0] = ap.getId_Matricula();
            fila[1] = String.valueOf(p);
            fila[2] = ap.getApellidos_Nombres();
            fila[3] = ap.getId_Seccion(); 
            p++;
            defaultTableModel.addRow(fila); 
        }            
                
        ClsConexion.closeConnection(con);
        tblAlumno.setModel(defaultTableModel);
        tblAlumno.setRowHeight(alturaCelda);              
        
        tblAlumno.removeColumn(tblAlumno.getColumnModel().getColumn(0));
        TableColumn  columnaN =tblAlumno.getColumnModel().getColumn(0);
        columnaN.setPreferredWidth(30);
        TableColumn  columnaPer =tblAlumno.getColumnModel().getColumn(1);
        columnaPer.setPreferredWidth(250);
        
        
        TableCellRenderer tcr =  tblAlumno.getTableHeader().getDefaultRenderer();
        ClsMisc.miRender mr = new ClsMisc.miRender(tcr);
        mr.getTableCellRendererComponent(tblAlumno, fila, true, true, WIDTH, 0);
        tblAlumno.setAutoResizeMode(JTable.AUTO_RESIZE_LAST_COLUMN);
        
    }
    
    private void CargarTablaAlumnoBusqueda(String texto)
    {
        int p=1;
        String titulos[] = {"ID","N°","APELLIDOS Y NOMBRES","AULA"};
        con = ClsConexion.getConection();
        ClsAlumno alumnos = new ClsAlumno();
        ArrayList<ClsEntidadAlumnoPago> alumnoo = alumnos.ListarAlumnoBusqueda(texto,con);
        Iterator iterator = alumnoo.iterator();                    
        String fila[] = new String[12];    
        
        DefaultTableModel dtmBusqueda =new DefaultTableModel(null,titulos)
        { 
            @Override
            public boolean isCellEditable(int rowIndex,int columnIndex)
            {return false;}
        };
        
        for(ClsEntidadAlumnoPago ap : alumnoo)
        {
            //compara el aula de la busqueda con als aulas del docente
            for(String aula : codigoAula)
            {
                if(ap.getId_Seccion().equals(aula))
                {
                    fila[0] = ap.getId_Matricula();
                    fila[1] = String.valueOf(p);
                    fila[2] = ap.getApellidos_Nombres();
                    fila[3] = ap.getNombre_Seccion();
                    fila[4] = ap.getNombre_Periodo();
                    
                    dtmBusqueda.addRow(fila);
                    p++;
                }
            }            
        }        
             
        ClsConexion.closeConnection(con);
        tblAlumno.setModel(dtmBusqueda);
        tblAlumno.setRowHeight(alturaCelda);
        
        tblAlumno.removeColumn(tblAlumno.getColumnModel().getColumn(0));
        TableColumn  columnaN =tblAlumno.getColumnModel().getColumn(0);
        columnaN.setPreferredWidth(30);
        TableColumn  colAlumno =tblAlumno.getColumnModel().getColumn(1);
        colAlumno.setPreferredWidth(250);
        TableColumn  colAula =tblAlumno.getColumnModel().getColumn(2);
        colAula.setPreferredWidth(150);
        
        TableCellRenderer tcr =  tblAlumno.getTableHeader().getDefaultRenderer();
        ClsMisc.miRender mr = new ClsMisc.miRender(tcr);
        mr.getTableCellRendererComponent(tblAlumno, fila, true, true, WIDTH, 0);
        mr.getTableCellRendererComponent(tblAlumno, fila, true, true, WIDTH, 2);
        
        tblAlumno.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
    }
    
    private String ObtenerIdMatricula(String _idAlumno)
    {
        String aux = "";
        con = ClsConexion.getConection();
        ResultSet rs;
        try 
        {
            PreparedStatement st = con.prepareStatement("select id_matricula from mat_matricula where"
                    + " MPS_Alumno_id_alumno = ?");
            st.setString(1, _idAlumno);
            rs = st.executeQuery();
            
            while(rs.next())
            {
                aux = rs.getString("id_matricula");
            }
        } catch (SQLException ex) {
            Logger.getLogger(PsicologiaDocente.class.getName()).log(Level.SEVERE, null, ex);
        }
        return aux;
    }
    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnNuevoCaso;
    private javax.swing.JRadioButton cbxActivo;
    private javax.swing.JRadioButton cbxInactivo;
    private javax.swing.JRadioButton cbxTodo;
    private javax.swing.JComboBox<String> cmbAula;
    private javax.swing.JComboBox<String> cmbPeriodo;
    private javax.swing.ButtonGroup grupo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JTabbedPane jTabbedPane3;
    private javax.swing.JTable tblAlumno;
    private javax.swing.JTable tblCasos;
    private javax.swing.JTable tblCasosTodos;
    private javax.swing.JTable tblComentario;
    private javax.swing.JTextArea txtAccion;
    private javax.swing.JTextField txtBusqueda;
    // End of variables declaration//GEN-END:variables
}
