/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package PckInterfaces;

import ClsEntidadReporte.ClsPagoAulaDeudaReporte;
import PckConexion.ClsConexion;
import PckEntidad.ClsEntidadNivel;
import PckEntidad.ClsEntidadPeriodo;
import PckEntidad.ClsEntidadSeccion;
import PckNegocio.ClsNivel;
import PckNegocio.ClsPagoAula;
import PckNegocio.ClsPagoAulaDeuda;
import PckNegocio.ClsPeriodo;
import PckNegocio.ClsSeccion;

import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Iterator;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListModel;
import javax.swing.table.DefaultTableModel;

import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.data.JRBeanCollectionDataSource;
import net.sf.jasperreports.view.JasperViewer;
import static prymatricula.ClsMisc.obtenerAnioActual;

/**
 *
 * @author John Kevin Montes De Oca Vizcarra
 * @email jkevin.mv@gmail.com
 */
public class FrmRptRequerimientoAula extends javax.swing.JInternalFrame {

    ArrayList<String> codigoNivel = new ArrayList();
    ArrayList<String> codigoPeriodo = new ArrayList();
    ArrayList<String> arrayAulaId = new ArrayList();
    DefaultListModel dlmItem = new DefaultListModel();
    ArrayList<String> arrayItemId = new ArrayList();
    /**
     * Creates new form FrmRptRequerimientoAula
     */
    public FrmRptRequerimientoAula() {
        initComponents();
        
        cargaComboNivel();
        cargaComboPeriodo();
        if(cmbPeriodo.getSelectedIndex() != -1)
        {            
            cargaComboSeccion();
        }
        String seleccionado = CargaComboAnio();
        cmbAnioo.setSelectedItem(seleccionado);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        grupo = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        cmbNivel = new javax.swing.JComboBox();
        cmbPeriodo = new javax.swing.JComboBox();
        cmbSeccion = new javax.swing.JComboBox();
        jPanel5 = new javax.swing.JPanel();
        cmbAnioo = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        lstItem = new javax.swing.JList<>();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        btnReporte = new javax.swing.JButton();
        btnVer = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblRequerimiento = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        txtSI = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtNO = new javax.swing.JTextField();

        setTitle("Reporte Cumpliminetos por Aula");
        setMinimumSize(new java.awt.Dimension(100, 100));
        setPreferredSize(new java.awt.Dimension(907, 671));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setMinimumSize(new java.awt.Dimension(100, 100));
        jPanel1.setPreferredSize(new java.awt.Dimension(907, 671));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Seleccione Aula"));
        jPanel4.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Droid Sans", 0, 11)); // NOI18N
        jLabel1.setText("Periodo:");
        jPanel4.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 100, 100, -1));

        jLabel2.setFont(new java.awt.Font("Droid Sans", 0, 11)); // NOI18N
        jLabel2.setText("Aula:");
        jPanel4.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 170, 90, -1));

        jLabel5.setFont(new java.awt.Font("Droid Sans", 0, 11)); // NOI18N
        jLabel5.setText("Nivel");
        jPanel4.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 30, 80, -1));

        cmbNivel.setFont(new java.awt.Font("Droid Sans", 0, 11)); // NOI18N
        cmbNivel.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmbNivel.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbNivelItemStateChanged(evt);
            }
        });
        jPanel4.add(cmbNivel, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 50, 290, -1));

        cmbPeriodo.setFont(new java.awt.Font("Droid Sans", 0, 11)); // NOI18N
        cmbPeriodo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmbPeriodo.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbPeriodoItemStateChanged(evt);
            }
        });
        jPanel4.add(cmbPeriodo, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 120, 290, -1));

        cmbSeccion.setFont(new java.awt.Font("Droid Sans", 0, 11)); // NOI18N
        cmbSeccion.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbSeccionItemStateChanged(evt);
            }
        });
        jPanel4.add(cmbSeccion, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 190, 290, -1));

        jPanel1.add(jPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 30, 350, 240));

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));
        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder("Seleccione cumplimiento"));

        cmbAnioo.setFont(new java.awt.Font("Droid Sans", 0, 11)); // NOI18N
        cmbAnioo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmbAnioo.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbAniooItemStateChanged(evt);
            }
        });

        lstItem.setFont(new java.awt.Font("Droid Sans", 0, 11)); // NOI18N
        lstItem.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                lstItemValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(lstItem);

        jLabel3.setFont(new java.awt.Font("Droid Sans", 0, 11)); // NOI18N
        jLabel3.setText("Items añadidos.");

        jLabel4.setFont(new java.awt.Font("Droid Sans", 0, 11)); // NOI18N
        jLabel4.setText("Año:");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(cmbAnioo, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel3)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel5Layout.createSequentialGroup()
                            .addGap(2, 2, 2)
                            .addComponent(jLabel4))))
                .addContainerGap(30, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cmbAnioo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel1.add(jPanel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 30, 270, 240));

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Opciones"));
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnReporte.setFont(new java.awt.Font("Droid Sans", 0, 11)); // NOI18N
        btnReporte.setText("<html> <p align=center>Generar</p> <p align=center>Reporte</p> </html>");
        btnReporte.setEnabled(false);
        btnReporte.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReporteActionPerformed(evt);
            }
        });
        jPanel3.add(btnReporte, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 100, 90, 40));

        btnVer.setFont(new java.awt.Font("Droid Sans", 0, 11)); // NOI18N
        btnVer.setText("Ver");
        btnVer.setEnabled(false);
        btnVer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVerActionPerformed(evt);
            }
        });
        jPanel3.add(btnVer, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 40, 90, 40));

        jButton1.setFont(new java.awt.Font("Droid Sans", 0, 11)); // NOI18N
        jButton1.setText("Salir");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel3.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 160, 90, 40));

        jPanel1.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 30, 150, 240));

        jPanel6.setBackground(new java.awt.Color(255, 255, 255));
        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder("Alumnos que cumplieron"));
        jPanel6.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tblRequerimiento.setFont(new java.awt.Font("Droid Sans", 0, 11)); // NOI18N
        tblRequerimiento.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "ALUMNO", "ESTADO"
            }
        ));
        jScrollPane2.setViewportView(tblRequerimiento);

        jPanel6.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 40, 580, 280));

        jPanel1.add(jPanel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 280, 640, 340));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Resumen"));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel6.setFont(new java.awt.Font("Droid Sans", 0, 11)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("SI:");
        jPanel2.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(44, 50, 40, -1));

        txtSI.setFont(new java.awt.Font("Droid Sans", 0, 11)); // NOI18N
        jPanel2.add(txtSI, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 70, 30, -1));

        jLabel7.setFont(new java.awt.Font("Droid Sans", 0, 11)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("NO:");
        jPanel2.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 120, 30, -1));

        txtNO.setFont(new java.awt.Font("Droid Sans", 0, 11)); // NOI18N
        jPanel2.add(txtNO, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 140, 30, -1));

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 290, 150, 190));

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cmbPeriodoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbPeriodoItemStateChanged
        
        if(cmbPeriodo.getSelectedIndex() != -1)
        {

            cargaComboSeccion();
        }

    }//GEN-LAST:event_cmbPeriodoItemStateChanged

    private void cmbAniooItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbAniooItemStateChanged

        if(cmbAnioo.getSelectedIndex() != -1 && cmbPeriodo.getSelectedIndex() != -1 && cmbSeccion.getSelectedIndex() != -1)
        {
           CargarListaItem();
        }
        
    }//GEN-LAST:event_cmbAniooItemStateChanged

    private void lstItemValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_lstItemValueChanged

        if(lstItem.getSelectedIndex() != -1)
        {
           btnVer.setEnabled(true);
           btnReporte.setEnabled(true);
        }
        
    }//GEN-LAST:event_lstItemValueChanged

    private void cmbNivelItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbNivelItemStateChanged

        if(cmbNivel.getSelectedIndex() != -1)
        {
            cargaComboPeriodo();
            if(cmbPeriodo.getSelectedIndex() != -1)
            {            
                cargaComboSeccion();
                if(cmbSeccion.getSelectedIndex() != -1)
                {
                    CargarListaItem();
                }
                
            }
        }

    }//GEN-LAST:event_cmbNivelItemStateChanged

    private void btnVerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVerActionPerformed
       
        ActualizarTablaRequerimiento();
        
    }//GEN-LAST:event_btnVerActionPerformed

    private void cmbSeccionItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbSeccionItemStateChanged
        
        if(cmbSeccion.getSelectedIndex() != -1)
        {
            CargarListaItem();
        }
        
    }//GEN-LAST:event_cmbSeccionItemStateChanged

    private void btnReporteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReporteActionPerformed
        
        Map mapa;
        int contSI=0;
        int contNO=0;
        ClsPagoAulaDeuda aulaDeuda;
        ResultSet rsResultado;
        Connection con;
        String idAula;
        String idItem;
        String nombreAula;
        String nombreDocente="";
        String nombreItem;
        ArrayList <ClsPagoAulaDeudaReporte> dataBean = new ArrayList<>();
        JasperPrint print;
        JRBeanCollectionDataSource ds;
        JasperViewer view;
        String urlJRXML="/Reportes/RptRequerimiento.jrxml";
        String urlJASPER="/Reportes/RptRequerimiento.jasper";
        
        
        idAula = arrayAulaId.get(cmbSeccion.getSelectedIndex());
        idItem = arrayItemId.get(lstItem.getSelectedIndex());
        nombreAula = cmbSeccion.getSelectedItem().toString();
        nombreItem = lstItem.getSelectedValue();
        
        con = ClsConexion.getConection();
        aulaDeuda = new ClsPagoAulaDeuda();
        mapa = new HashMap();
        
        try 
        {
            rsResultado = aulaDeuda.SeleccionarPagoAulaDeuda(idAula, idItem, con);
            
            while(rsResultado.next())
            {
                ClsPagoAulaDeudaReporte rt = new ClsPagoAulaDeudaReporte();
                rt.setAlumno(rsResultado.getString("apellidos_nombres"));
                rt.setEstado(rsResultado.getString("pgo_aula_deuda_estado"));
                dataBean.add(rt);
                nombreDocente = rsResultado.getString("docente");
                if(rsResultado.getString("pgo_aula_deuda_estado").equals("SI"))
                {
                    contSI++;
                }
                else
                {
                    contNO++;
                }   
            }
            
            mapa.put("si", String.valueOf(contSI)); 
            mapa.put("no", String.valueOf(contNO));
            mapa.put("aula", nombreAula);
            mapa.put("item", nombreItem);
            mapa.put("docente", nombreDocente);
            ds = new JRBeanCollectionDataSource(dataBean);
            JasperCompileManager.compileReportToFile(System.getProperty("user.dir")+ urlJRXML,
                            System.getProperty("user.dir")+urlJASPER);
            print = JasperFillManager.fillReport(System.getProperty("user.dir")+urlJASPER, mapa,ds);
            view = new JasperViewer(print,false);
            view.setTitle("Reporte Requerimiento Aula");
            view.setVisible(true);
            
        }
        catch (SQLException | JRException ex) 
        {
            Logger.getLogger(FrmRptRequerimientoAula.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_btnReporteActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        this.dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void ActualizarTablaRequerimiento() {
    
        String[] titulos = {"id", "Alumno", "Estado"};
        String[] fila;
        ClsPagoAulaDeuda aulaDeuda;
        DefaultTableModel dtmRequerimiento;
        ResultSet rsResultado;
        Connection con;
        String idAula;
        String idItem;
        int countSI = 0;
        int countNO = 0;
        
        fila = new String[4];
        dtmRequerimiento = new DefaultTableModel(null,titulos) {        
            @Override
            public boolean isCellEditable(int rowIndex,int columnIndex){return false;}               
        }; 
        
        idAula = arrayAulaId.get(cmbSeccion.getSelectedIndex());
        idItem = arrayItemId.get(lstItem.getSelectedIndex());
        con = ClsConexion.getConection();
        aulaDeuda = new ClsPagoAulaDeuda();
        
        try 
        {
            rsResultado = aulaDeuda.SeleccionarPagoAulaDeuda(idAula, idItem, con);
            
            while(rsResultado.next())
            {
                fila[0] = rsResultado.getString("pgo_aula_deuda_id");
                fila[1] = rsResultado.getString("apellidos_nombres");
                fila[2] = rsResultado.getString("pgo_aula_deuda_estado");
                dtmRequerimiento.addRow(fila);
                
                if(fila[2].equals("SI"))
                {
                    countSI++;
                }
                else
                {
                    countNO++;
                }                
            }
            
            tblRequerimiento.setModel(dtmRequerimiento);
            tblRequerimiento.removeColumn(tblRequerimiento.getColumnModel().getColumn(0));  
            txtSI.setText(String.valueOf(countSI));
            txtNO.setText(String.valueOf(countNO));
        }
        catch (SQLException ex) 
        {
            Logger.getLogger(FrmRptRequerimientoAula.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }
    
    private String CargaComboAnio() {        
        
        cmbAnioo.removeAllItems();
        //obtengo año actual
        int Anioactual = Integer.parseInt(obtenerAnioActual());   
        int burbuja[] = new int[4];
        //lleno la matriz inicial (2015-2014-2013-2012-2011)
        //es necesario ordenarla
        for (int i=0;i<4;i++)
        {
           burbuja[i] = Anioactual - i;
        }        
        int temp;
        for(int m=0;m<burbuja.length;m++)//recorre cada elemento
        {            
            for(int n=0;n<burbuja.length-1;n++)//el elemento es comparado con todos
            {                
                if(burbuja[n]>burbuja[n+1]) //+1 porque ya tomamos el valor 0
                {
                    temp = burbuja[n];
                    burbuja[n] = burbuja[n+1];
                    burbuja[n+1] = temp;
                }
            }
        }
        //agrego los años ordenados
        for(int o=0;o<burbuja.length;o++)
        {
            
            cmbAnioo.addItem(String.valueOf(burbuja[o]));
        }        
        //agrego los 4 años siguientes
        for (int j=1;j<5;j++)
        {
           
           cmbAnioo.addItem(String.valueOf(Anioactual + j));
        }
        
        return String.valueOf(Anioactual);
        
    }
    
    private void cargaComboNivel()
    {
        ClsNivel niveles = new ClsNivel();
        ArrayList<ClsEntidadNivel> nivel =  niveles.SeleccionarNivel();
        Iterator it = nivel.iterator();
        DefaultComboBoxModel dtm = new DefaultComboBoxModel();
        dtm.removeAllElements();
        cmbNivel.removeAllItems();
                
        while(it.hasNext())
        {
        ClsEntidadNivel Nivel = new ClsEntidadNivel();
        Nivel = (ClsEntidadNivel) it.next();       
        codigoNivel.add(Nivel.getNivel_id());
        dtm.addElement(Nivel.getNivel_nombre());                
        }
        cmbNivel.setModel(dtm); 
    }
    private void cargaComboPeriodo()
    {
        codigoPeriodo.clear();
        ClsPeriodo periodos = new ClsPeriodo();
        ArrayList<ClsEntidadPeriodo> periodo =  periodos.ListarPeriodo();
        Iterator iterator = periodo.iterator();
        DefaultComboBoxModel DefaultComboBoxModel = new DefaultComboBoxModel();
        DefaultComboBoxModel.removeAllElements();
        cmbPeriodo.removeAllItems();
        String fila[] = new String[4];     
        while(iterator.hasNext())
        {
        ClsEntidadPeriodo Periodo = new ClsEntidadPeriodo();
        Periodo = (ClsEntidadPeriodo) iterator.next();               
        fila[0] = Periodo.getNombre_Periodo();
        fila[1] = Periodo.getEstado_Periodo();        
            if(Periodo.getEstado_Periodo().equals("Activo") &&                     
            codigoNivel.get(cmbNivel.getSelectedIndex()).equals(Periodo.getNivel_Id()))
            {   
            codigoPeriodo.add(Periodo.getId_Periodo());     
            DefaultComboBoxModel.addElement(Periodo.getNombre_Periodo());        
            }
        }
        cmbPeriodo.setModel(DefaultComboBoxModel);       
    }
    private void cargaComboSeccion()
    {    
        arrayAulaId.clear();
        ClsSeccion secciones = new ClsSeccion();
        ArrayList<ClsEntidadSeccion> seccion =  secciones.ListarSeccion();
        Iterator it = seccion.iterator();
        DefaultComboBoxModel DefaultComboBoxModel = new DefaultComboBoxModel();
        DefaultComboBoxModel.removeAllElements();
        cmbSeccion.removeAllItems();
        String fila2[] = new String[5];        
        while(it.hasNext())
        {
        ClsEntidadSeccion Seccion = (ClsEntidadSeccion) it.next();             
        fila2[0] = Seccion.getNombre_Seccion();
        fila2[1] = Seccion.getEstado_Periodo();       
        fila2[3] = Seccion.getNombre_Periodo();
        
            if (codigoPeriodo.get(cmbPeriodo.getSelectedIndex()).equals(Seccion.getId_Periodo())) 
            {
                arrayAulaId.add(Seccion.getId_Seccion());
                DefaultComboBoxModel.addElement(fila2[0]);
            }       
        }
        cmbSeccion.setModel(DefaultComboBoxModel);         
    }
    
    private void CargarListaItem() {
        
        ClsPagoAula pagoAula = new ClsPagoAula();        
        Connection conexion;
        ResultSet rsResultado;
        String anio;
        
        dlmItem.removeAllElements();
        arrayItemId.clear();
                
        conexion = ClsConexion.getConection();
        anio = cmbAnioo.getSelectedItem().toString();
        String id = arrayAulaId.get(cmbSeccion.getSelectedIndex());
        try 
        {
            rsResultado = pagoAula.SeleccionarPagoAulaRelacion(id,conexion);
            while(rsResultado.next())
            {
                if(rsResultado.getString("pgo_aula_anio").equals(anio))
                {
                    dlmItem.addElement(rsResultado.getString("pgo_aula_nombre"));
                    arrayItemId.add(rsResultado.getString("pgo_aula_id"));
                }                
            }
            lstItem.setModel(dlmItem);
            ClsConexion.closeConnection(conexion);
        }
        catch (Exception ex) 
        {
            Logger.getLogger(FrmPagoAula.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnReporte;
    private javax.swing.JButton btnVer;
    private javax.swing.JComboBox<String> cmbAnioo;
    private javax.swing.JComboBox cmbNivel;
    private javax.swing.JComboBox cmbPeriodo;
    private javax.swing.JComboBox cmbSeccion;
    private javax.swing.ButtonGroup grupo;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JList<String> lstItem;
    private javax.swing.JTable tblRequerimiento;
    private javax.swing.JTextField txtNO;
    private javax.swing.JTextField txtSI;
    // End of variables declaration//GEN-END:variables
}
