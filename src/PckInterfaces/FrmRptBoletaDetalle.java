/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package PckInterfaces;

import PckConexion.ClsConexion;
import PckEntidad.ClsEntidadNivel;
import PckEntidad.ClsEntidadPeriodo;
import PckEntidad.ClsEntidadProducto;
import PckEntidad.ClsEntidadSeccion;
import PckEntidad.ClsEntidadServicio;
import PckNegocio.ClsNivel;
import PckNegocio.ClsPeriodo;
import PckNegocio.ClsProducto;
import PckNegocio.ClsSeccion;
import PckNegocio.ClsServicio;
import java.sql.Connection;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.GregorianCalendar;
import java.util.HashMap;
import java.util.Iterator;
import java.util.Map;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;

import net.sf.jasperreports.view.JasperViewer;
import static prymatricula.ClsMisc.obtenerAnioActual;

/**
 *
 * @author Sistemas
 */
public class FrmRptBoletaDetalle extends javax.swing.JInternalFrame {
DefaultListModel dlm = new DefaultListModel();
Connection con=null;
Date ini;
Date fi;
Date actual = new Date();
String opcion="";
SimpleDateFormat formato = new SimpleDateFormat("yyyy-MM-dd");
Calendar cal = new GregorianCalendar();
ArrayList<String> codigoNivel = new ArrayList();
ArrayList<String> codigoPeriodo = new ArrayList();
ArrayList<String> codigoSeccion = new ArrayList();
    /**
     * Creates new form FrmRptBoleta
     */
    public FrmRptBoletaDetalle() {
        
        initComponents();
        cal.setTimeInMillis(actual.getTime());
        cal.add(Calendar.DATE, -7); 
        jdcFin.setDate(actual);
        String seleccionado = llenaCombo();
        cmbAnio.setSelectedItem(seleccionado); 
    java.sql.Date pasado = new java.sql.Date(cal.getTimeInMillis());
        
    jdcInicio.setDate(pasado);
    
    grupo.add(raMatricula);
        grupo.add(raMensualidad);
        grupo.add(raAlimentacion);
        grupo.add(raProductos);
        grupo.add(raServicios);
        
        grupo2.add(rbnNivel);
        grupo2.add(rbnPeriodo);
        grupo2.add(rbnSeccion);
        
        cargaComboNivel();
        cargaComboPeriodo();
        if(cmbPeriodo.getSelectedIndex() != -1)
        {            
            cargaComboSeccion();
        }
        
    
    }
    private String llenaCombo()
    {
        cmbAnio.removeAllItems();        
        //obtengo año actual
        int Anioactual = Integer.parseInt(obtenerAnioActual());   
        int burbuja[] = new int[4];
        //lleno la matriz inicial (2015-2014-2013-2012-2011)
        //es necesario ordenarla
        for (int i=0;i<4;i++)
        {
           burbuja[i] = Anioactual - i;
        }        
        int temp;
        for(int m=0;m<burbuja.length;m++)//recorre cada elemento
        {            
            for(int n=0;n<burbuja.length-1;n++)//el elemento es comparado con todos
            {                
                if(burbuja[n]>burbuja[n+1]) //+1 porque ya tomamos el valor 0
                {
                    temp = burbuja[n];
                    burbuja[n] = burbuja[n+1];
                    burbuja[n+1] = temp;
                }
            }
        }
        //agrego los años ordenados
        for(int o=0;o<burbuja.length;o++)
        {
            cmbAnio.addItem(String.valueOf(burbuja[o]));
            
        }        
        //agrego los 4 años siguientes
        for (int j=1;j<5;j++)
        {
           cmbAnio.addItem(String.valueOf(Anioactual + j));
          
        }
        
        return String.valueOf(Anioactual);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        grupo = new javax.swing.ButtonGroup();
        grupo2 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        btnGenerar = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        raMatricula = new javax.swing.JRadioButton();
        raMensualidad = new javax.swing.JRadioButton();
        raAlimentacion = new javax.swing.JRadioButton();
        raServicios = new javax.swing.JRadioButton();
        raProductos = new javax.swing.JRadioButton();
        cmbAnio = new javax.swing.JComboBox();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        lista = new javax.swing.JList();
        jPanel4 = new javax.swing.JPanel();
        cmbPeriodo = new javax.swing.JComboBox();
        cmbSeccion = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        cmbNivel = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        rbnPeriodo = new javax.swing.JRadioButton();
        rbnSeccion = new javax.swing.JRadioButton();
        rbnNivel = new javax.swing.JRadioButton();
        jPanel5 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jdcInicio = new com.toedter.calendar.JDateChooser();
        jdcFin = new com.toedter.calendar.JDateChooser();
        jLabel3 = new javax.swing.JLabel();

        setTitle("Reporte Boletas Detalle");

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 51, 204));
        jLabel2.setText("Reporte Boletas Detalle");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 40, -1, -1));

        btnGenerar.setFont(new java.awt.Font("Droid Sans", 0, 11)); // NOI18N
        btnGenerar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PckIconos/accept_page.png"))); // NOI18N
        btnGenerar.setLabel("<html> <p>Generar</p> <p align=center>Reporte</p> </html>");
        btnGenerar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGenerarActionPerformed(evt);
            }
        });
        jPanel1.add(btnGenerar, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 410, 120, 50));

        jButton1.setFont(new java.awt.Font("Droid Sans", 0, 11)); // NOI18N
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PckIconos/back.png"))); // NOI18N
        jButton1.setText("Salir");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 410, 120, 50));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Pagos"));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        raMatricula.setFont(new java.awt.Font("Droid Sans", 0, 11)); // NOI18N
        raMatricula.setText("Matrícula");
        raMatricula.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                raMatriculaItemStateChanged(evt);
            }
        });
        jPanel2.add(raMatricula, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 30, -1, -1));

        raMensualidad.setFont(new java.awt.Font("Droid Sans", 0, 11)); // NOI18N
        raMensualidad.setText("Mensualidad");
        raMensualidad.setToolTipText("");
        raMensualidad.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                raMensualidadItemStateChanged(evt);
            }
        });
        jPanel2.add(raMensualidad, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 60, -1, -1));

        raAlimentacion.setFont(new java.awt.Font("Droid Sans", 0, 11)); // NOI18N
        raAlimentacion.setText("Alimentación");
        raAlimentacion.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                raAlimentacionItemStateChanged(evt);
            }
        });
        jPanel2.add(raAlimentacion, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 90, -1, -1));

        raServicios.setFont(new java.awt.Font("Droid Sans", 0, 11)); // NOI18N
        raServicios.setText("Servicios");
        raServicios.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                raServiciosItemStateChanged(evt);
            }
        });
        jPanel2.add(raServicios, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 120, -1, -1));

        raProductos.setFont(new java.awt.Font("Droid Sans", 0, 11)); // NOI18N
        raProductos.setText("Productos");
        raProductos.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                raProductosItemStateChanged(evt);
            }
        });
        jPanel2.add(raProductos, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 150, -1, -1));

        cmbAnio.setFont(new java.awt.Font("Droid Sans", 0, 11)); // NOI18N
        cmbAnio.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "2013", "2014", "2015", "2016", "2017", "2018", "2019", "2020" }));
        cmbAnio.setSelectedIndex(2);
        cmbAnio.setSelectedItem(2014);
        cmbAnio.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbAnioItemStateChanged(evt);
            }
        });
        jPanel2.add(cmbAnio, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 130, 80, -1));

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 90, 230, 200));

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Concepto"));
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lista.setFont(new java.awt.Font("Droid Sans", 0, 11)); // NOI18N
        lista.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                listaValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(lista);

        jPanel3.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 30, 210, 150));

        jPanel1.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 90, 250, 200));

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Periodo o Sección"));
        jPanel4.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        cmbPeriodo.setFont(new java.awt.Font("Droid Sans", 0, 11)); // NOI18N
        cmbPeriodo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmbPeriodo.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbPeriodoItemStateChanged(evt);
            }
        });
        jPanel4.add(cmbPeriodo, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 100, 270, -1));

        cmbSeccion.setFont(new java.awt.Font("Droid Sans", 0, 11)); // NOI18N
        jPanel4.add(cmbSeccion, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 150, 270, -1));

        jLabel4.setFont(new java.awt.Font("Droid Sans", 0, 11)); // NOI18N
        jLabel4.setText("Nivel:");
        jPanel4.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 30, -1, -1));

        jLabel5.setFont(new java.awt.Font("Droid Sans", 0, 11)); // NOI18N
        jLabel5.setText("Sección:");
        jPanel4.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 130, -1, -1));

        cmbNivel.setFont(new java.awt.Font("Droid Sans", 0, 11)); // NOI18N
        cmbNivel.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmbNivel.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbNivelItemStateChanged(evt);
            }
        });
        jPanel4.add(cmbNivel, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 50, 270, -1));

        jLabel6.setFont(new java.awt.Font("Droid Sans", 0, 11)); // NOI18N
        jLabel6.setText("Periodo:");
        jPanel4.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 80, -1, -1));

        rbnPeriodo.setFont(new java.awt.Font("Droid Sans", 0, 11)); // NOI18N
        jPanel4.add(rbnPeriodo, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 100, -1, -1));

        rbnSeccion.setFont(new java.awt.Font("Droid Sans", 0, 11)); // NOI18N
        jPanel4.add(rbnSeccion, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 150, -1, -1));

        rbnNivel.setFont(new java.awt.Font("Droid Sans", 0, 11)); // NOI18N
        jPanel4.add(rbnNivel, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 50, -1, -1));

        jPanel1.add(jPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 90, 360, 200));

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));
        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder("Seleccione intervalo de fechas"));
        jPanel5.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Droid Sans", 0, 11)); // NOI18N
        jLabel1.setText("Fecha Inicio:");
        jPanel5.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 30, -1, -1));

        jdcInicio.setFont(new java.awt.Font("Droid Sans", 0, 11)); // NOI18N
        jPanel5.add(jdcInicio, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 30, 110, -1));

        jdcFin.setFont(new java.awt.Font("Droid Sans", 0, 11)); // NOI18N
        jPanel5.add(jdcFin, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 30, 130, -1));

        jLabel3.setFont(new java.awt.Font("Droid Sans", 0, 11)); // NOI18N
        jLabel3.setText("Fecha Fin:");
        jPanel5.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 30, -1, -1));

        jPanel1.add(jPanel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 320, 560, 70));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 926, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 493, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnGenerarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGenerarActionPerformed
         //Pasando parámetros
        ini = jdcInicio.getDate();
        fi = jdcFin.getDate();

        String auxi = formato.format(ini);
        String auxf = formato.format(fi);
        
        Map p = new HashMap();
        p.put("inicio", auxi);
        p.put("fin", auxf);
        JasperPrint print;
       
        //////////////////////////////////////////////////////////////////////
        System.out.println(auxi+" - "+auxf);
        String porperiodo ;
        String porsalon,pornivel ;
    
        porsalon = codigoSeccion.get(cmbSeccion.getSelectedIndex());
        porperiodo = codigoPeriodo.get(cmbPeriodo.getSelectedIndex());
        pornivel = codigoNivel.get(cmbNivel.getSelectedIndex());
           
        if(raMatricula.isSelected())
        {   
            String urlmatp="/Reportes/RptBoletasMatriculaPeriodo.jasper";
            String urlmats="/Reportes/RptBoletasMatriculaSeccion.jasper";
            String urlmatn="/Reportes/RptBoletasMatriculaNivel.jasper";
            //en matricula no hay opcion
            
            if(rbnNivel.isSelected()) //Por Periodo
            {
                p.put("nivel", porperiodo);          
                p.put("nombre", cmbNivel.getSelectedItem().toString());
                try
                {//Invoco al reporte 
                    con = ClsConexion.getConection();
                    print = JasperFillManager.fillReport(System.getProperty("user.dir")+urlmatn,p ,con);
                    JasperViewer view = new JasperViewer(print,false);
                    ClsConexion.closeConnection(con);
                    view.setTitle("Reporte Boletas Nivel");
                    view.setVisible(true);
                }
                catch(JRException ex)
                {
                    ex.printStackTrace();
                    JOptionPane.showMessageDialog(this, ex);
                }
            }
            else if(rbnPeriodo.isSelected()) //Por Periodo
            {
                p.put("periodo", porperiodo);          
                p.put("nombre", cmbPeriodo.getSelectedItem().toString());
                try
                {//Invoco al reporte 
                    con = ClsConexion.getConection();
                    print = JasperFillManager.fillReport(System.getProperty("user.dir")+urlmatp,p ,con);
                    JasperViewer view = new JasperViewer(print,false);
                    ClsConexion.closeConnection(con);
                    view.setTitle("Reporte Boletas Periodo");
                    view.setVisible(true);
                }
                catch(JRException ex)
                {
                    ex.printStackTrace();
                    JOptionPane.showMessageDialog(this, ex);
                }
            }
            else
            { //Por Seccion
                p.put("seccion", porsalon);
                p.put("nombre", cmbSeccion.getSelectedItem().toString());
                try
                {//Invoco al reporte
                    con = ClsConexion.getConection();
                    print = JasperFillManager.fillReport(System.getProperty("user.dir")+urlmats,p ,con);
                    JasperViewer view = new JasperViewer(print,false);
                    ClsConexion.closeConnection(con);
                    view.setTitle("Reporte Boletas Seccion");
                    view.setVisible(true);
                }
                catch(JRException ex)
                {
                    ex.printStackTrace();
                    JOptionPane.showMessageDialog(this, ex);
                }   
            }     
        }
        else if(raMensualidad.isSelected())
        {
            String urlmenp="/Reportes/RptBoletasMensualidadPeriodo.jasper";
            String urlmens="/Reportes/RptBoletasMensualidadSeccion.jasper";
            String urlmenn="/Reportes/RptBoletasMensualidadNivel.jasper";
            //aca si hay opcion
            opcion = lista.getSelectedValue().toString();
            
            if(rbnNivel.isSelected())
            {
            p.put("nivel", pornivel);
            p.put("opcion", opcion);
            p.put("nombre", cmbNivel.getSelectedItem().toString());
            
                try
                {//Invoco al reporte
                    con = ClsConexion.getConection();
                    print = JasperFillManager.fillReport(System.getProperty("user.dir")+urlmenn,p ,con);
                    JasperViewer view = new JasperViewer(print,false);
                    ClsConexion.closeConnection(con);
                    view.setTitle("Reporte Boletas Nivel");
                    view.setVisible(true);
                }
                catch(JRException ex)
                {
                    ex.printStackTrace();
                    JOptionPane.showMessageDialog(this, ex);
                }
            
            
            }
            else if(rbnPeriodo.isSelected())
            {
            p.put("periodo", porperiodo);
            p.put("opcion", opcion);
            p.put("nombre", cmbPeriodo.getSelectedItem().toString());
            
                try
                {//Invoco al reporte
                    con = ClsConexion.getConection();
                    print = JasperFillManager.fillReport(System.getProperty("user.dir")+urlmenp,p ,con);
                    JasperViewer view = new JasperViewer(print,false);
                    ClsConexion.closeConnection(con);
                    view.setTitle("Reporte Boletas Periodo");
                    view.setVisible(true);
                }
                catch(JRException ex)
                {
                    ex.printStackTrace();
                    JOptionPane.showMessageDialog(this, ex);
                }
            
            
            }
            else{
            p.put("seccion", porsalon);
            p.put("opcion", opcion);
            p.put("nombre", cmbSeccion.getSelectedItem().toString());
                try
                {//Invoco al reporte
                    con = ClsConexion.getConection();
                    print = JasperFillManager.fillReport(System.getProperty("user.dir")+urlmens,p ,con);
                    JasperViewer view = new JasperViewer(print,false);      
                    ClsConexion.closeConnection(con);
                    view.setTitle("Reporte Boletas Seccion");
                    view.setVisible(true);
                }
                catch(JRException ex)
                {
                    ex.printStackTrace();
                    JOptionPane.showMessageDialog(this, ex);
                }
            }
      
        }
        else if(raAlimentacion.isSelected())
        {
            String urlalip="/Reportes/RptBoletasAlimentacionPeriodo.jasper";
            String urlalis="/Reportes/RptBoletasAlimentacionSeccion.jasper";
            String urlalin="/Reportes/RptBoletasAlimentacionNivel.jasper";
            //aca si hay opcion
            opcion = lista.getSelectedValue().toString();
            if(rbnNivel.isSelected())
            {
            p.put("nivel", pornivel);
            p.put("opcion", opcion);
            p.put("nombre", cmbNivel.getSelectedItem().toString());
             try{//Invoco al reporte
                    con = ClsConexion.getConection();
                    print = JasperFillManager.fillReport(System.getProperty("user.dir")+urlalin,p ,con);
                    JasperViewer view = new JasperViewer(print,false);
                    con = ClsConexion.getConection();
                    view.setTitle("Reporte Boletas Nivel");
                    view.setVisible(true);
                }
                catch(JRException ex)
                {
                    ex.printStackTrace();
                    JOptionPane.showMessageDialog(this, ex);
                }
            }
            else if(rbnPeriodo.isSelected())
            {
            p.put("periodo", porperiodo);
            p.put("opcion", opcion);
            p.put("nombre", cmbPeriodo.getSelectedItem().toString());
             try{//Invoco al reporte
                    con = ClsConexion.getConection();
                    print = JasperFillManager.fillReport(System.getProperty("user.dir")+urlalip,p ,con);
                    JasperViewer view = new JasperViewer(print,false);
                    con = ClsConexion.getConection();
                    view.setTitle("Reporte Boletas Periodo");
                    view.setVisible(true);
                }
                catch(JRException ex)
                {
                    ex.printStackTrace();
                    JOptionPane.showMessageDialog(this, ex);
                }
            }
            else
            {
                p.put("seccion", porsalon);
                p.put("opcion", opcion);
                p.put("nombre", cmbSeccion.getSelectedItem().toString());
                try{//Invoco al reporte
                    con = ClsConexion.getConection();
                    print = JasperFillManager.fillReport(System.getProperty("user.dir")+urlalis,p ,con);
                    JasperViewer view = new JasperViewer(print,false);
                    con = ClsConexion.getConection();
                    view.setTitle("Reporte Boletas Seccion");
                    view.setVisible(true);
                }
                catch(JRException ex)
                {
                    ex.printStackTrace();
                    JOptionPane.showMessageDialog(this, ex);
                }
            }
        }
       
        else if(raServicios.isSelected())
        {
           String urlservp="/Reportes/RptBoletasServicioPeriodo.jasper";
           String urlservs="/Reportes/RptBoletasServicioSeccion.jasper";
           String urlservn="/Reportes/RptBoletasServicioNivel.jasper";
            //aca si hay opcion
            opcion = lista.getSelectedValue().toString();
            if(rbnNivel.isSelected())
            {
                p.put("nivel", pornivel);
                p.put("opcion", opcion);
                p.put("nombre", cmbNivel.getSelectedItem().toString());
                try
                {//Invoco al reporte
                    con = ClsConexion.getConection();
                    print = JasperFillManager.fillReport(System.getProperty("user.dir")+urlservn,p ,con);
                    JasperViewer view = new JasperViewer(print,false);
                    ClsConexion.closeConnection(con);
                    view.setTitle("Reporte Boletas Nivel");
                    view.setVisible(true);
                }
                catch(JRException ex)
                {
                    ex.printStackTrace();
                }
            }
            else if(rbnPeriodo.isSelected())
            {
                p.put("periodo", porperiodo);
                p.put("opcion", opcion);
                p.put("nombre", cmbPeriodo.getSelectedItem().toString());
                try
                {//Invoco al reporte
                    con = ClsConexion.getConection();
                    print = JasperFillManager.fillReport(System.getProperty("user.dir")+urlservp,p ,con);
                    JasperViewer view = new JasperViewer(print,false);
                    ClsConexion.closeConnection(con);
                    view.setTitle("Reporte Boletas Periodo");
                    view.setVisible(true);
                }
                catch(JRException ex)
                {
                    ex.printStackTrace();
                }
            }
            else
            {
            p.put("seccion", porsalon);
            p.put("opcion", opcion);
            p.put("nombre", cmbSeccion.getSelectedItem().toString());
                try{//Invoco al reporte
                    con = ClsConexion.getConection();
                    print = JasperFillManager.fillReport(System.getProperty("user.dir")+urlservs,p ,con);
                    JasperViewer view = new JasperViewer(print,false);  
                    ClsConexion.closeConnection(con);
                    view.setTitle("Reporte Boletas Seccion");
                    view.setVisible(true);
                }
                catch(JRException ex)
                {
                    ex.printStackTrace();
                    JOptionPane.showMessageDialog(this, ex);
                }
            }
        }
        else if(raProductos.isSelected())
        {
        String urlprodp="/Reportes/RptBoletasProductoPeriodo.jasper";
        String urlprods="/Reportes/RptBoletasProductoSeccion.jasper";
        String urlprodn="/Reportes/RptBoletasProductoNivel.jasper";
            //aca si hay opcion
            opcion = lista.getSelectedValue().toString();
            if(rbnNivel.isSelected())
            {
            p.put("nivel", pornivel);
            p.put("opcion", opcion);
            p.put("nombre", cmbNivel.getSelectedItem().toString()); 
            try{//Invoco al reporte
                con = ClsConexion.getConection();
                    print = JasperFillManager.fillReport(System.getProperty("user.dir")+urlprodn,p ,con);
                    JasperViewer view = new JasperViewer(print,false);
                    ClsConexion.closeConnection(con);
                    view.setTitle("Reporte Boletas Nivel");
                    view.setVisible(true);
                }
                catch(JRException ex)
                {
                    ex.printStackTrace();
                   
                }
            }
            else if(rbnPeriodo.isSelected())
            {
            p.put("periodo", porperiodo);
            p.put("opcion", opcion);
            p.put("nombre", cmbPeriodo.getSelectedItem().toString()); 
            try{//Invoco al reporte
                con = ClsConexion.getConection();
                    print = JasperFillManager.fillReport(System.getProperty("user.dir")+urlprodp,p ,con);
                    JasperViewer view = new JasperViewer(print,false);
                    ClsConexion.closeConnection(con);
                    view.setTitle("Reporte Boletas Periodo");
                    view.setVisible(true);
                }
                catch(JRException ex)
                {
                    ex.printStackTrace();
                   
                }
            }
            else
            {
                p.put("seccion", porsalon);
                p.put("opcion", opcion);
                p.put("nombre", cmbSeccion.getSelectedItem().toString());
                try{//Invoco al reporte
                    con = ClsConexion.getConection();
                    print = JasperFillManager.fillReport(System.getProperty("user.dir")+urlprods,p ,con);
                    JasperViewer view = new JasperViewer(print,false);   
                    ClsConexion.closeConnection(con);
                    view.setTitle("Reporte Boletas Seccion");
                    view.setVisible(true);
                }
                catch(JRException ex)
                {
                    ex.printStackTrace();
                    JOptionPane.showMessageDialog(this, ex);
                }
            }
       }
           
     
            
    }//GEN-LAST:event_btnGenerarActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        this.dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void raMatriculaItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_raMatriculaItemStateChanged
        
        dlm.removeAllElements();
        lista.setModel(dlm);
        rbnNivel.setEnabled(true);
    }//GEN-LAST:event_raMatriculaItemStateChanged

    private void raMensualidadItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_raMensualidadItemStateChanged
        cargaMeses();
        rbnNivel.setEnabled(true);
    }//GEN-LAST:event_raMensualidadItemStateChanged

    private void raAlimentacionItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_raAlimentacionItemStateChanged
        cargaMeses();
 
        rbnNivel.setEnabled(true);
    }//GEN-LAST:event_raAlimentacionItemStateChanged

    private void raServiciosItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_raServiciosItemStateChanged
        if(raServicios.isSelected())
        {
            rellenaServicio();
            
            rbnNivel.setEnabled(true);
        }

    }//GEN-LAST:event_raServiciosItemStateChanged

    private void raProductosItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_raProductosItemStateChanged
        rellenaProducto();
       
        rbnNivel.setEnabled(true);
    }//GEN-LAST:event_raProductosItemStateChanged

    private void cmbAnioItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbAnioItemStateChanged
        if(raServicios.isSelected())
        {
            rellenaServicio();

        }
        else if(raProductos.isSelected())
        {
            rellenaProducto();

        }
    }//GEN-LAST:event_cmbAnioItemStateChanged

    private void listaValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_listaValueChanged
//        btnVer.setEnabled(true);
    }//GEN-LAST:event_listaValueChanged

    private void cmbPeriodoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbPeriodoItemStateChanged
        if(cmbPeriodo.getSelectedIndex() != -1)
        {

            System.out.println("Periodo: "+cmbPeriodo.getSelectedItem()+" ID: "+codigoPeriodo.get(cmbPeriodo.getSelectedIndex()));
            cargaComboSeccion();
        }

    }//GEN-LAST:event_cmbPeriodoItemStateChanged

    private void cmbNivelItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbNivelItemStateChanged
        if(cmbNivel.getSelectedIndex() != -1)
        {
            cargaComboPeriodo();
            if(cmbPeriodo.getSelectedIndex() != -1)
            {            
                cargaComboSeccion();
            }
        }
    }//GEN-LAST:event_cmbNivelItemStateChanged
    private void cargaMeses()
    {
        dlm.removeAllElements();
       dlm.addElement("ENERO");
       dlm.addElement("FEBRERO");
       dlm.addElement("MARZO");
       dlm.addElement("ABRIL");
       dlm.addElement("MAYO");
       dlm.addElement("JUNIO");
       dlm.addElement("JULIO");
       dlm.addElement("AGOSTO");
       dlm.addElement("SEPTIEMBRE");
       dlm.addElement("OCTUBRE");
       dlm.addElement("NOVIEMBRE");
       dlm.addElement("DICIEMBRE");
       lista.setModel(dlm);
    
    }
    private void rellenaServicio()
    {
        ClsServicio servicios = new ClsServicio();
        ArrayList<ClsEntidadServicio> producto = servicios.ListarServicio();        
        dlm.removeAllElements();
        //lista.setModel(dlm);
        Iterator iterator = producto.iterator();            
        String fila[] = new String[6];
        while(iterator.hasNext()){
            ClsEntidadServicio Servicio = new ClsEntidadServicio();
            Servicio = (ClsEntidadServicio) iterator.next();
            fila[0] = Servicio.getId_Servicio();
            fila[1] = Servicio.getNombre_Servicio();   
            fila[2] = Servicio.getAnio_Servicio();
          
            if(fila[2].equals(cmbAnio.getSelectedItem().toString())){
          dlm.addElement(fila[1]);      
            }
          
        }     
        lista.setModel(dlm); 
    }

    private void rellenaProducto()
    {
   
    ClsProducto productos = new ClsProducto();
    ArrayList<ClsEntidadProducto> producto = productos.ListarProducto();
    Iterator iterator = producto.iterator();
    dlm.removeAllElements();
    String fila[] = new String[6];
    while(iterator.hasNext())
    {
        ClsEntidadProducto Producto = new ClsEntidadProducto();
        Producto = (ClsEntidadProducto) iterator.next();
        fila[0] = Producto.getId_Producto();
        fila[1] = Producto.getNombre_Producto();
        fila[2] = Producto.getAnio_Producto();
        if(fila[2].equals(cmbAnio.getSelectedItem().toString())){
        dlm.addElement(fila[1]);                  
        }        
    }
    lista.setModel(dlm); 
    }    
    private void cargaComboNivel()
    {
        ClsNivel niveles = new ClsNivel();
        ArrayList<ClsEntidadNivel> nivel =  niveles.SeleccionarNivel();
        Iterator it = nivel.iterator();
        DefaultComboBoxModel dtm = new DefaultComboBoxModel();
        dtm.removeAllElements();
        cmbNivel.removeAllItems();
                
        while(it.hasNext())
        {
        ClsEntidadNivel Nivel;
        Nivel = (ClsEntidadNivel) it.next();       
        codigoNivel.add(Nivel.getNivel_id());
        dtm.addElement(Nivel.getNivel_nombre());                
        }
        cmbNivel.setModel(dtm); 
   }
   private void cargaComboPeriodo()
   {
        codigoPeriodo.clear();
        ClsPeriodo periodos = new ClsPeriodo();
        ArrayList<ClsEntidadPeriodo> periodo =  periodos.ListarPeriodo();
        Iterator iterator = periodo.iterator();
        DefaultComboBoxModel DefaultComboBoxModel = new DefaultComboBoxModel();
        DefaultComboBoxModel.removeAllElements();
        cmbPeriodo.removeAllItems();
            
        while(iterator.hasNext())
        {
        ClsEntidadPeriodo Periodo ;
        Periodo = (ClsEntidadPeriodo) iterator.next();               
            
            if(Periodo.getEstado_Periodo().equals("Activo") &&                     
            codigoNivel.get(cmbNivel.getSelectedIndex()).equals(Periodo.getNivel_Id()))
            {   
            codigoPeriodo.add(Periodo.getId_Periodo());     
            DefaultComboBoxModel.addElement(Periodo.getNombre_Periodo());        
            }
        }
        cmbPeriodo.setModel(DefaultComboBoxModel);       
   }
   private void cargaComboSeccion()
   {    
        codigoSeccion.clear();
        ClsSeccion secciones = new ClsSeccion();
        ArrayList<ClsEntidadSeccion> seccion =  secciones.ListarSeccion();
        Iterator it = seccion.iterator();
        DefaultComboBoxModel DefaultComboBoxModel = new DefaultComboBoxModel();
        DefaultComboBoxModel.removeAllElements();
        cmbSeccion.removeAllItems();
        String fila2[] = new String[5];        
        while(it.hasNext())
        {
        ClsEntidadSeccion Seccion = (ClsEntidadSeccion) it.next();             
        fila2[0] = Seccion.getNombre_Seccion();
        fila2[1] = Seccion.getEstado_Periodo();       
        fila2[3] = Seccion.getNombre_Periodo();
        
            if (codigoPeriodo.get(cmbPeriodo.getSelectedIndex()).equals(Seccion.getId_Periodo())) 
            {
                codigoSeccion.add(Seccion.getId_Seccion());
                DefaultComboBoxModel.addElement(fila2[0]);
            }       
        }
        cmbSeccion.setModel(DefaultComboBoxModel);         
   }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnGenerar;
    private javax.swing.JComboBox cmbAnio;
    private javax.swing.JComboBox<String> cmbNivel;
    private javax.swing.JComboBox cmbPeriodo;
    private javax.swing.JComboBox cmbSeccion;
    private javax.swing.ButtonGroup grupo;
    private javax.swing.ButtonGroup grupo2;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private com.toedter.calendar.JDateChooser jdcFin;
    private com.toedter.calendar.JDateChooser jdcInicio;
    private javax.swing.JList lista;
    private javax.swing.JRadioButton raAlimentacion;
    private javax.swing.JRadioButton raMatricula;
    private javax.swing.JRadioButton raMensualidad;
    private javax.swing.JRadioButton raProductos;
    private javax.swing.JRadioButton raServicios;
    private javax.swing.JRadioButton rbnNivel;
    private javax.swing.JRadioButton rbnPeriodo;
    private javax.swing.JRadioButton rbnSeccion;
    // End of variables declaration//GEN-END:variables
}
