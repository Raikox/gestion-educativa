/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package PckInterfaces;

import PckEntidad.MatriculaAlumnoHuella;
import PckNegocio.ClsMatricula;
import PckRenderTabla.GeneralRender;
import PckRenderTabla.Render;
import java.awt.Window;
import java.awt.event.KeyEvent;
import java.util.ArrayList;
import javax.swing.KeyStroke;
import javax.swing.SwingUtilities;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellRenderer;
import javax.swing.table.TableColumn;
import mpsModel.MatriculaModelo;

/**
 *
 * @author Kevin
 */
public class MatriculaHuella extends javax.swing.JPanel {
    
    ArrayList<Object> arrayIdPeriodo = new ArrayList();
    ArrayList<Object> arrayIdAula = new ArrayList();
    MatriculaModelo matriculaModelo = new MatriculaModelo();
    ClsMatricula matricula = new ClsMatricula();
    int idPeriodo;
    int idAula;
    
    /** Creates new form MatriculaHuella */
    public MatriculaHuella() {
        initComponents();
                
        arrayIdPeriodo = matriculaModelo.MostrarComboPeriodos(cmbPeriodo);
        idPeriodo = (int) arrayIdPeriodo.get(cmbPeriodo.getSelectedIndex());
        arrayIdAula = matriculaModelo.MostrarComboAulasPeriodo(cmbAula, idPeriodo);        
        CargarTablaAlumnoHuella();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        grupo = new javax.swing.ButtonGroup();
        jPanel4 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        pnlIzquierda = new javax.swing.JPanel();
        pnlIbot = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblAlumno = new javax.swing.JTable();
        jLabel12 = new javax.swing.JLabel();
        cmbAula = new javax.swing.JComboBox<>();
        cmbPeriodo = new javax.swing.JComboBox<>();
        jLabel15 = new javax.swing.JLabel();
        txtBusqueda = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(new java.awt.BorderLayout());

        jPanel4.setBackground(new java.awt.Color(237, 237, 237));
        jPanel4.setPreferredSize(new java.awt.Dimension(911, 50));
        jPanel4.setLayout(new java.awt.GridBagLayout());

        jPanel5.setBackground(new java.awt.Color(237, 240, 242));
        jPanel5.setLayout(new java.awt.GridBagLayout());

        jLabel1.setFont(new java.awt.Font("Droid Sans", 1, 14)); // NOI18N
        jLabel1.setText("REGISTRO DE HUELLAS");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        jPanel5.add(jLabel1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel4.add(jPanel5, gridBagConstraints);

        add(jPanel4, java.awt.BorderLayout.PAGE_START);

        jPanel3.setBackground(new java.awt.Color(237, 240, 242));
        jPanel3.setLayout(new java.awt.GridBagLayout());

        pnlIzquierda.setBackground(new java.awt.Color(255, 255, 255));
        pnlIzquierda.setMinimumSize(new java.awt.Dimension(200, 390));
        pnlIzquierda.setPreferredSize(new java.awt.Dimension(400, 10));
        pnlIzquierda.setLayout(new java.awt.BorderLayout());

        pnlIbot.setBackground(new java.awt.Color(255, 255, 255));
        pnlIbot.setLayout(new java.awt.GridBagLayout());

        jScrollPane1.setMinimumSize(new java.awt.Dimension(23, 250));
        jScrollPane1.setPreferredSize(new java.awt.Dimension(452, 420));

        tblAlumno.setFont(new java.awt.Font("Droid Sans", 0, 11)); // NOI18N
        tblAlumno.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblAlumno.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tblAlumno.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblAlumnoMouseClicked(evt);
            }
        });
        tblAlumno.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tblAlumnoKeyTyped(evt);
            }
        });
        jScrollPane1.setViewportView(tblAlumno);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(20, 20, 20, 20);
        pnlIbot.add(jScrollPane1, gridBagConstraints);

        jLabel12.setFont(new java.awt.Font("Droid Sans", 0, 11)); // NOI18N
        jLabel12.setText("Aula.");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(10, 20, 0, 0);
        pnlIbot.add(jLabel12, gridBagConstraints);

        cmbAula.setFont(new java.awt.Font("Droid Sans", 0, 11)); // NOI18N
        cmbAula.setMinimumSize(new java.awt.Dimension(200, 20));
        cmbAula.setPreferredSize(new java.awt.Dimension(200, 20));
        cmbAula.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbAulaItemStateChanged(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(10, 20, 0, 0);
        pnlIbot.add(cmbAula, gridBagConstraints);

        cmbPeriodo.setFont(new java.awt.Font("Droid Sans", 0, 11)); // NOI18N
        cmbPeriodo.setMinimumSize(new java.awt.Dimension(200, 20));
        cmbPeriodo.setPreferredSize(new java.awt.Dimension(200, 20));
        cmbPeriodo.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbPeriodoItemStateChanged(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(10, 20, 0, 0);
        pnlIbot.add(cmbPeriodo, gridBagConstraints);

        jLabel15.setFont(new java.awt.Font("Droid Sans", 0, 11)); // NOI18N
        jLabel15.setText("Periodo.");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(10, 20, 0, 0);
        pnlIbot.add(jLabel15, gridBagConstraints);

        txtBusqueda.setFont(new java.awt.Font("Droid Sans", 0, 12)); // NOI18N
        txtBusqueda.setMinimumSize(new java.awt.Dimension(250, 23));
        txtBusqueda.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtBusquedaKeyTyped(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(20, 20, 0, 0);
        pnlIbot.add(txtBusqueda, gridBagConstraints);

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PckIcoMenu/icons8_Search_20px_1.png"))); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(20, 5, 0, 20);
        pnlIbot.add(jLabel2, gridBagConstraints);

        pnlIzquierda.add(pnlIbot, java.awt.BorderLayout.CENTER);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 10, 10);
        jPanel3.add(pnlIzquierda, gridBagConstraints);

        add(jPanel3, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void tblAlumnoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblAlumnoMouseClicked
        
        int row = tblAlumno.getSelectedRow();
        boolean tieneHuella;
        if(row != -1)
        {
            if(evt.getClickCount() == 2)
            {
                DefaultTableModel dtmMatricula = (DefaultTableModel) tblAlumno.getModel();
                int idMatricula = (int) dtmMatricula.getValueAt(row, 0);
                String nombreAlumno = (String) dtmMatricula.getValueAt(row, 3);
                String huella = (String) dtmMatricula.getValueAt(row, 1);
                tieneHuella = huella.equals("SI");                
                AbrirDialogHuellaEditar(idMatricula,nombreAlumno,tieneHuella);
            }            
        }
    }//GEN-LAST:event_tblAlumnoMouseClicked

    private void cmbAulaItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbAulaItemStateChanged
               
        CargarTablaAlumnoHuella();
    }//GEN-LAST:event_cmbAulaItemStateChanged

    private void cmbPeriodoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbPeriodoItemStateChanged
        
        arrayIdAula = matriculaModelo.MostrarComboAulasPeriodo(cmbAula, idPeriodo);
    }//GEN-LAST:event_cmbPeriodoItemStateChanged

    private void txtBusquedaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBusquedaKeyTyped
        idPeriodo = (int) arrayIdPeriodo.get(cmbPeriodo.getSelectedIndex());
        String busqueda = txtBusqueda.getText();
        if(busqueda.equals("")) {
            CargarTablaAlumnoHuella();
        }
        else {
            CargarTablaAlumnoHuella(busqueda,idPeriodo);
        }            
    }//GEN-LAST:event_txtBusquedaKeyTyped

    private void tblAlumnoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tblAlumnoKeyTyped
        int row = tblAlumno.getSelectedRow();
        boolean tieneHuella;
        
        if(row != -1) {
                        
            if(evt.getKeyCode() == KeyEvent.VK_ENTER) {
                
                DefaultTableModel dtmMatricula = (DefaultTableModel) tblAlumno.getModel();
                int idMatricula = (int) dtmMatricula.getValueAt(row, 0);
                String nombreAlumno = (String) dtmMatricula.getValueAt(row, 3);
                String huella = (String) dtmMatricula.getValueAt(row, 1);
                tieneHuella = huella.equals("SI");                
                AbrirDialogHuellaEditar(idMatricula,nombreAlumno,tieneHuella);
            }
        }
    }//GEN-LAST:event_tblAlumnoKeyTyped

    public void CargarTablaAlumnoHuella() {
        
        String titulos[] = {"ID","HUELLA","N°","ALUMNO","HUELLA"};
        ArrayList<MatriculaAlumnoHuella> arrayMatriculaAlumnoHuella;
        Object datos[] = new Object[6];
        idAula = (int) arrayIdAula.get(cmbAula.getSelectedIndex());
        
        int orden = 1;
        DefaultTableModel dtm = new DefaultTableModel(null,titulos) {
            @Override
            public boolean isCellEditable(int rowIndex,int columnIndex)
            {return false;}
        };
        
        for(MatriculaAlumnoHuella mah : matricula.ListarAlumnoHuellas(idAula)) {
            
            datos[0] = mah.getId_matricula();
            datos[1] = mah.getTieneHuella();
            datos[2] = orden;
            datos[3] = mah.getNombresApellidosAlumno();
            datos[4] = mah.getTieneHuella();
            dtm.addRow(datos);
            orden++;
        }
        
        tblAlumno.setModel(dtm); 
        tblAlumno.setRowHeight(20);
        
        tblAlumno.removeColumn(tblAlumno.getColumnModel().getColumn(0));
        tblAlumno.removeColumn(tblAlumno.getColumnModel().getColumn(0));
        
        TableColumn colOrden = tblAlumno.getColumnModel().getColumn(0);colOrden.setMaxWidth(35);
        
        TableCellRenderer tcr =  tblAlumno.getTableHeader().getDefaultRenderer();
        GeneralRender.MiRender miRender = new GeneralRender.MiRender(tcr);
        tblAlumno.setDefaultRenderer(Object.class, new Render());        
        miRender.getTableCellRendererComponent(tblAlumno, datos, true, true, WIDTH, 0);
        miRender.getTableCellRendererComponent(tblAlumno, datos, true, true, WIDTH, 2);
        
        tblAlumno.setSurrendersFocusOnKeystroke(true);
        
    }
    
    private void CargarTablaAlumnoHuella(String busqueda,int idPeriodo)
    {
        String titulos[] = {"ID","HUELLA","N°","ALUMNO","AULA","HUELLA"};
        ArrayList<MatriculaAlumnoHuella> arrayMatriculaAlumnoHuella;
        Object datos[] = new Object[7];        
        int orden = 1;
        DefaultTableModel dtm = new DefaultTableModel(null,titulos) {
            @Override
            public boolean isCellEditable(int rowIndex,int columnIndex)
            {return false;}
        };
        
        for(MatriculaAlumnoHuella mah : matricula.ListarAlumnoHuellas(busqueda,idPeriodo)) {
            
            datos[0] = mah.getId_matricula();
            datos[1] = mah.getTieneHuella(); 
            datos[2] = orden;
            datos[3] = mah.getNombresApellidosAlumno();
            datos[4] = mah.getAula_alumno();
            datos[5] = mah.getTieneHuella(); 
            dtm.addRow(datos);
            orden++;
        }
        
        tblAlumno.setModel(dtm); 
        tblAlumno.setRowHeight(20);
        
        tblAlumno.removeColumn(tblAlumno.getColumnModel().getColumn(0));
        tblAlumno.removeColumn(tblAlumno.getColumnModel().getColumn(0));
        
        TableColumn colOrden = tblAlumno.getColumnModel().getColumn(0);colOrden.setMaxWidth(35);
        
        TableCellRenderer tcr =  tblAlumno.getTableHeader().getDefaultRenderer();
        GeneralRender.MiRender miRender = new GeneralRender.MiRender(tcr);
        tblAlumno.setDefaultRenderer(Object.class, new Render());        
        miRender.getTableCellRendererComponent(tblAlumno, datos, true, true, WIDTH, 0);
        miRender.getTableCellRendererComponent(tblAlumno, datos, true, true, WIDTH, 2);
        miRender.getTableCellRendererComponent(tblAlumno, datos, true, true, WIDTH, 3);
        
        tblAlumno.setSurrendersFocusOnKeystroke(true);
    }
    
    private void AbrirDialogHuellaEditar(int idMatricula, String nombreAlumno, boolean tieneHuella) {
        
        Window parentWindow = SwingUtilities.windowForComponent(this);
        MatriculaHuellaEditar matriculaHuellaEditar = new MatriculaHuellaEditar
        (parentWindow, idMatricula, nombreAlumno, tieneHuella);        
        matriculaHuellaEditar.FormularioPadre(this);
        matriculaHuellaEditar.setModal(true);
        matriculaHuellaEditar.setVisible(true);
        matriculaHuellaEditar.toFront();
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> cmbAula;
    private javax.swing.JComboBox<String> cmbPeriodo;
    private javax.swing.ButtonGroup grupo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel pnlIbot;
    private javax.swing.JPanel pnlIzquierda;
    private javax.swing.JTable tblAlumno;
    private javax.swing.JTextField txtBusqueda;
    // End of variables declaration//GEN-END:variables

}
