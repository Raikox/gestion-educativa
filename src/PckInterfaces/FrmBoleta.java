/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package PckInterfaces;

import PckConexion.ClsConexion;
import PckEntidad.ClsEntidadBoleta;
import PckEntidad.ClsEntidadDetalleBoleta;
import PckNegocio.ClsBoleta;
import PckNegocio.ClsDetalleBoleta;
import PckNegocio.ClsPendienteBoleta;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellRenderer;
import javax.swing.table.TableColumn;
import prymatricula.ClsMisc;
import prymatricula.MyTableCellEditorBoleta;

/**
 *
 * @author Sistemas
 */
public class FrmBoleta extends javax.swing.JInternalFrame {
    
    public static String idBoleta;
    SimpleDateFormat formato = new SimpleDateFormat("dd/MM/yyyy");
    prymatricula.MyTableCellEditorBoleta cee = new prymatricula.MyTableCellEditorBoleta();
    static int limiteDetalle = 0;
    static DefaultTableModel modelo;
    static String tipo;
    ArrayList<Double> importeAntiguo = new ArrayList();
    Connection con = null;
    public static FrmPagoTodo PObjTodito;    
    
    /**
     * Creates new form FrmBoleta
     */
    public FrmBoleta() {
        initComponents();        
        actualizarDatosBoleta();
        actualizarTablaDetalle();
        if(tipo.equals("anulada"))
        {
            tblDetalle.setEnabled(false);
            jLabel5.setText("El detalle de una boleta anulada no puede ser modificado");
        }
        cee.ActualizaTodoo(this);
        tblDetalle.getColumnModel().getColumn( 3 ).setCellEditor(new MyTableCellEditorBoleta());
    }
    public void ActualizaTodoBoleta(FrmPagoTodo obj) {
            FrmBoleta.PObjTodito = obj;
     }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        txtSerie = new javax.swing.JTextField();
        txtCorrelativo = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        txtAlumno = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jdcFecha = new com.toedter.calendar.JDateChooser();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblDetalle = new javax.swing.JTable();
        jPanel5 = new javax.swing.JPanel();
        txtTotal = new javax.swing.JTextField();
        jPanel6 = new javax.swing.JPanel();
        btnGuardar = new javax.swing.JButton();
        btnSalir = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();

        setTitle("ModificarBoleta");

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setFont(new java.awt.Font("Droid Sans", 0, 11)); // NOI18N
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PckImages/modificarb.jpg"))); // NOI18N
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, -1, 40));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Numero Boleta"));
        jPanel2.setFont(new java.awt.Font("Droid Sans", 0, 11)); // NOI18N
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txtSerie.setFont(new java.awt.Font("Droid Sans", 0, 11)); // NOI18N
        jPanel2.add(txtSerie, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 30, 40, -1));

        txtCorrelativo.setFont(new java.awt.Font("Droid Sans", 0, 11)); // NOI18N
        jPanel2.add(txtCorrelativo, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 30, 80, -1));

        jLabel4.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        jLabel4.setText("  -");
        jLabel4.setToolTipText("");
        jPanel2.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 30, 20, -1));

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 90, 200, 70));

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Boleta"));
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txtAlumno.setFont(new java.awt.Font("Droid Sans", 0, 11)); // NOI18N
        txtAlumno.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        txtAlumno.setEnabled(false);
        jPanel3.add(txtAlumno, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 20, 280, 20));

        jLabel1.setFont(new java.awt.Font("Droid Sans", 0, 11)); // NOI18N
        jLabel1.setText("Alumno:");
        jPanel3.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, 60, 20));

        jLabel3.setText("Fecha:");
        jPanel3.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 20, -1, 20));

        jdcFecha.setFont(new java.awt.Font("Droid Sans", 0, 11)); // NOI18N
        jPanel3.add(jdcFecha, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 20, 100, 20));

        jPanel1.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 170, 560, 60));

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Detalle Boleta"));
        jPanel4.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tblDetalle.setFont(new java.awt.Font("Droid Sans", 0, 11)); // NOI18N
        tblDetalle.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Cantidad", "Descripci√≥n", "P. Unitario", "Importe"
            }
        ));
        jScrollPane1.setViewportView(tblDetalle);

        jPanel4.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, 520, 150));

        jPanel1.add(jPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 240, 560, 180));

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));
        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder("Total"));
        jPanel5.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txtTotal.setFont(new java.awt.Font("Droid Sans", 1, 12)); // NOI18N
        txtTotal.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        txtTotal.setEnabled(false);
        jPanel5.add(txtTotal, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, 70, -1));

        jPanel1.add(jPanel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 430, 90, 50));

        jPanel6.setBackground(new java.awt.Color(255, 255, 255));
        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder("Opciones"));
        jPanel6.setFont(new java.awt.Font("Droid Sans", 0, 11)); // NOI18N
        jPanel6.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnGuardar.setFont(new java.awt.Font("Droid Sans", 0, 11)); // NOI18N
        btnGuardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PckIcoMenu/media_floppy_green.png"))); // NOI18N
        btnGuardar.setText("<html> <p align=center>Guardar</p> <p align=center>Cambios</p> </html>");
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });
        jPanel6.add(btnGuardar, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 20, 100, 40));

        btnSalir.setFont(new java.awt.Font("Droid Sans", 0, 11)); // NOI18N
        btnSalir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PckIcoMenu/undo.png"))); // NOI18N
        btnSalir.setText("Salir");
        btnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirActionPerformed(evt);
            }
        });
        jPanel6.add(btnSalir, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 20, 100, 40));

        jPanel1.add(jPanel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 90, 330, 70));

        jLabel5.setFont(new java.awt.Font("Droid Sans", 0, 12)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 0, 0));
        jLabel5.setText("Modificar monto de la columna celeste");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 450, -1, 20));

        jLabel6.setFont(new java.awt.Font("Droid Sans", 1, 12)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 0, 0));
        jLabel6.setText("Nota:");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 450, -1, 20));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 614, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 492, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnSalirActionPerformed

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
         //Boleta
         String codigoBoleta,serie,correlativo,alumno,fecha,total;
         //Detalle
         String idDetalle,cantidad,descripcion,punitario,tipo,idDeuda;
         Double importe;
        
         //Boleta
         codigoBoleta = idBoleta;
         serie = txtSerie.getText();//+" ";//espacio entre guion
         correlativo = txtCorrelativo.getText();
         //alumno = no se puede modificar
         fecha = formato.format(jdcFecha.getDate());
         total = txtTotal.getText();
        
         //modificar boleta
         ClsBoleta boleta = new ClsBoleta();
         ClsEntidadBoleta eboleta = new ClsEntidadBoleta();
         eboleta.setNumero_Boleta(serie+"-"+correlativo);
         eboleta.setFecha_Boleta(fecha);
         eboleta.setTotal_Boleta(Double.parseDouble(total));
         con = ClsConexion.getConection();
         boleta.ModificaBoleta(eboleta, codigoBoleta,con);
         ClsConexion.closeConnection(con);
         //Detalle
         ClsDetalleBoleta db = new ClsDetalleBoleta();
         ClsEntidadDetalleBoleta edb = new ClsEntidadDetalleBoleta();
         for(int i=0;i<limiteDetalle;i++)
         {
                  idDetalle = modelo.getValueAt(i, 0).toString();
                  cantidad = modelo.getValueAt(i, 1).toString();
                  descripcion = modelo.getValueAt(i, 2).toString();
                  punitario = modelo.getValueAt(i, 3).toString();
                  importe = Double.parseDouble(modelo.getValueAt(i, 4).toString());
                  tipo = modelo.getValueAt(i, 5).toString();
                  idDeuda = modelo.getValueAt(i, 6).toString();
                  //modificar detalle
                  edb.setCantidad_Detalle(Integer.parseInt(cantidad));
                  edb.setDescripcion_Detalle(descripcion);
                  edb.setUnitario_Detalle(Double.parseDouble(punitario));
                  edb.setImporte_Detalle(importe);
                  
                  try 
                  {
                           con = ClsConexion.getConection();
                           db.ModificarDetalleBoletaFull(edb,idDetalle,con);            
                           con.close();
                  } 
                  catch (SQLException ex) 
                  {
                           Logger.getLogger(FrmBoleta.class.getName()).log(Level.SEVERE, null, ex);
                  }
         
            //modificar pendientes  
            ClsPendienteBoleta pboleta = new ClsPendienteBoleta();            
            switch(tipo)
            {
                case "matricula":
                    
                    if(importeAntiguo.get(i) < importe)
                    {
                        //si importe antiguo es menor que importe nuevo se debe restar al pendiente                
                        pboleta.ModificarPendienteMatricula(idDeuda, importe-importeAntiguo.get(i), "-");
                        
                    }
                    else if(importeAntiguo.get(i) > importe)
                    {
                        //si importe antiguo es mayor que importe nuevo se debe sumar al pendiente                        
                        pboleta.ModificarPendienteMatricula(idDeuda,importeAntiguo.get(i)-importe, "+");
                       
                    }
                    break;
                case "mensualidad":
                    
                    if(importeAntiguo.get(i) < importe)
                    {
                        //si importe antiguo es menor que importe nuevo se debe restar al pendiente                
                        pboleta.ModificarPendienteMensualidad(idDeuda, importe-importeAntiguo.get(i), "-");
                        
                    }
                    else if(importeAntiguo.get(i) > importe)
                    {
                        //si importe antiguo es mayor que importe nuevo se debe sumar al pendiente                        
                        pboleta.ModificarPendienteMensualidad(idDeuda,importeAntiguo.get(i)-importe, "+");
                        
                    }
                    break;  
                case "comida":
                    
                    if(importeAntiguo.get(i) < importe)
                    {
                        //si importe antiguo es menor que importe nuevo se debe restar al pendiente                
                        pboleta.ModificarPendienteComida(idDeuda, importe-importeAntiguo.get(i), "-");
                        
                    }
                    else if(importeAntiguo.get(i) > importe)
                    {
                        //si importe antiguo es mayor que importe nuevo se debe sumar al pendiente                        
                        pboleta.ModificarPendienteComida(idDeuda,importeAntiguo.get(i)-importe, "+");
                        
                    }
                    break;    
                case "producto":
                    
                    if(importeAntiguo.get(i) < importe)
                    {
                        //si importe antiguo es menor que importe nuevo se debe restar al pendiente                
                        pboleta.ModificarPendienteProducto(idDeuda, importe-importeAntiguo.get(i), "-");
                        
                    }
                    else if(importeAntiguo.get(i) > importe)
                    {
                        //si importe antiguo es mayor que importe nuevo se debe sumar al pendiente                        
                        pboleta.ModificarPendienteProducto(idDeuda,importeAntiguo.get(i)-importe, "+");
                        
                    }
                    break;    
                case "servicio":
                    
                    if(importeAntiguo.get(i) < importe)
                    {
                        //si importe antiguo es menor que importe nuevo se debe restar al pendiente                
                        pboleta.ModificarPendienteServicio(idDeuda, importe-importeAntiguo.get(i), "-");
                        
                        this.dispose();
                    }
                    else if(importeAntiguo.get(i) > importe)
                    {
                        //si importe antiguo es mayor que importe nuevo se debe sumar al pendiente                        
                        pboleta.ModificarPendienteServicio(idDeuda,importeAntiguo.get(i)-importe, "+");
                        
                    }
                    break;    
            }
        }
        JOptionPane.showMessageDialog(null, "Boleta modificada correctamente");
        PObjTodito.actualiza();
        this.dispose();
        
    }//GEN-LAST:event_btnGuardarActionPerformed

    private void actualizarDatosBoleta()
    {
        ClsBoleta b = new ClsBoleta();
        ResultSet rs;
        String[] numero;
        try 
        {
            con = ClsConexion.getConection();
            rs = b.SeleccionarBoletaUnica(idBoleta,con);
            while(rs.next())
            {
                txtAlumno.setText(rs.getString("nombre"));
                jdcFecha.setDate(formato.parse(rs.getString("fecha_boleta")));
                numero = rs.getString("num_boleta").split("-");
                txtSerie.setText(numero[0]);
                txtCorrelativo.setText(numero[1]);
                txtTotal.setText(rs.getString("total_boleta"));                
            }
            ClsConexion.closeConnection(con);
        }
        catch (Exception ex) 
        {
            ex.printStackTrace();
        }
    }
    
    private void actualizarTablaDetalle() 
    {
        importeAntiguo.clear();
        String titulos[] = {"ID","Cantidad","Descripci√≥n","P. Unitario","Importe","Tipo","Id Deuda"};
        ClsDetalleBoleta db = new ClsDetalleBoleta();
        try 
        {
        con = ClsConexion.getConection();
        ArrayList<ClsEntidadDetalleBoleta> boleta = db.SeleccionarDetalles(idBoleta,con);
        Iterator it = boleta.iterator();
        modelo =new DefaultTableModel(null,titulos); 
        DefaultTableModel dtm =new DefaultTableModel(null,titulos); 
        String fila[] = new String[12];                
        while(it.hasNext())
        {
            ClsEntidadDetalleBoleta Detalle = (ClsEntidadDetalleBoleta) it.next();            
            fila[0] = Detalle.getId_Detalle();
            fila[1] = String.valueOf(Detalle.getCantidad_Detalle());
            fila[2] = Detalle.getDescripcion_Detalle();
            fila[3] = String.valueOf(Detalle.getUnitario_Detalle());
            fila[4] = String.valueOf(Detalle.getImporte_Detalle());
            fila[5] = String.valueOf(Detalle.getTipo_Detalle());
            fila[6] = String.valueOf(Detalle.getId_Deuda());
            modelo.addRow(fila);
            dtm.addRow(fila);            
            importeAntiguo.add(Detalle.getImporte_Detalle());            
        }
        
            con.close();
        
        tblDetalle.setModel(dtm);
        tblDetalle.removeColumn(tblDetalle.getColumnModel().getColumn(0));
        tblDetalle.removeColumn(tblDetalle.getColumnModel().getColumn(5));
        tblDetalle.removeColumn(tblDetalle.getColumnModel().getColumn(4));
        TableColumn  columnaN =tblDetalle.getColumnModel().getColumn(0);
        columnaN.setPreferredWidth(25);
        TableColumn  columnaPer =tblDetalle.getColumnModel().getColumn(1);
        columnaPer.setPreferredWidth(250);
        //  TableColumn  columnaDesc =tblDetalle.getColumnModel().getColumn(2);
        //  columnaDesc.setPreferredWidth(250);
        TableCellRenderer tcr =  tblDetalle.getTableHeader().getDefaultRenderer();                       
        ClsMisc.miRender mr = new ClsMisc.miRender(tcr);
        mr.getTableCellRendererComponent(tblDetalle, fila, isSelected, isIcon, WIDTH, 0);
        ClsMisc.miRenderPintar pintar = new ClsMisc.miRenderPintar(tcr);
        pintar.getTableCellRendererComponent(tblDetalle, fila, isSelected, isIcon, WIDTH, 3);
        limiteDetalle = dtm.getRowCount();
        } catch (SQLException ex) 
        {
            Logger.getLogger(FrmBoleta.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    public boolean updateTextBoleta(String valor,int Fila)
    {
            //Fila = tblPendiente.getSelectedRow();
            boolean res = false;        
            double monto=0.0;
            double totall;
            double aux;
            int i;
            int Columna=0;
            String valor2;
            //int Row=0;
             try 
             {   
                 System.out.print("limite:"+limiteDetalle);
                for (i=0; i < limiteDetalle;i++)
                {
                    if(i!=Fila)
                    {
                        valor2= (String) modelo.getValueAt(i, 3);
                        System.out.println("valor "+i+": "+valor2);
                        aux = Double.parseDouble(valor2);
                        monto= aux + monto;
                    }
                    else
                    {
                        Columna=i;
                    }
                }
                System.out.println("modificado: "+valor);
                totall = monto + Double.parseDouble(valor);
                txtTotal.setText(String.valueOf(totall));
                System.out.println("total: "+totall);
                jPanel5.repaint();
                res=true;
                modelo.setValueAt(valor, Fila, 4);
                 
             }catch(Exception e){            
                e.printStackTrace();
            }
            return res;       
            
    }
  
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnSalir;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private com.toedter.calendar.JDateChooser jdcFecha;
    private javax.swing.JTable tblDetalle;
    private javax.swing.JTextField txtAlumno;
    private javax.swing.JTextField txtCorrelativo;
    private javax.swing.JTextField txtSerie;
    private javax.swing.JTextField txtTotal;
    // End of variables declaration//GEN-END:variables
}
