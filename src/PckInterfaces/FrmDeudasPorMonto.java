/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package PckInterfaces;

import ClsEntidadReporte.ClsDeudaPorMonto;
import PckConexion.ClsConexion;
import PckEntidad.ClsEntidadDeudas;
import PckEntidad.ClsEntidadPeriodo;
import PckNegocio.ClsAlumno;
import PckNegocio.ClsDeudas;
import PckNegocio.ClsMatricula;
import PckNegocio.ClsPeriodo;
import java.sql.CallableStatement;
import java.sql.Connection;
import java.sql.ResultSet;
import java.text.DecimalFormat;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Iterator;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.data.JRBeanCollectionDataSource;
import net.sf.jasperreports.view.JasperViewer;
import static prymatricula.ClsMisc.obtenerMesNumero;

/**
 *
 * @author Kevin
 */
public class FrmDeudasPorMonto extends javax.swing.JInternalFrame {
    
    double monto;
    String idPeriodo;
    ArrayList<String> codigoPeriodo = new ArrayList();
    DecimalFormat df = new DecimalFormat("0.00");
    /**
     * Creates new form FrmDeudasPorMonto
     */
    public FrmDeudasPorMonto() {
        initComponents();
        cargaPeriodo();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        txtMonto = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        btnReporte = new javax.swing.JButton();
        cmbPeriodo = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jButton1 = new javax.swing.JButton();

        setTitle("Deudas por monto");

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setPreferredSize(new java.awt.Dimension(386, 237));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txtMonto.setFont(new java.awt.Font("Droid Sans", 0, 11)); // NOI18N
        jPanel1.add(txtMonto, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 90, 110, -1));

        jLabel1.setFont(new java.awt.Font("Droid Sans", 0, 11)); // NOI18N
        jLabel1.setText("Emitir con deudas vencidas superiores a:");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 90, -1, 20));

        btnReporte.setFont(new java.awt.Font("Droid Sans", 0, 11)); // NOI18N
        btnReporte.setText("Emitir Reporte");
        btnReporte.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReporteActionPerformed(evt);
            }
        });
        jPanel1.add(btnReporte, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 180, 110, -1));

        cmbPeriodo.setFont(new java.awt.Font("Droid Sans", 0, 11)); // NOI18N
        cmbPeriodo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jPanel1.add(cmbPeriodo, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 50, 160, -1));

        jLabel2.setFont(new java.awt.Font("Droid Sans", 0, 11)); // NOI18N
        jLabel2.setText("Seleccione Periodo:");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 50, 100, 20));
        jPanel1.add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 150, 350, 10));

        jButton1.setFont(new java.awt.Font("Droid Sans", 0, 11)); // NOI18N
        jButton1.setText("Salir");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 180, -1, -1));

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private int actualizarDatosGenerales(String codMatricula,Connection con)
        {
            int mmes;
            String inicioClases = "";
            
            ResultSet rsMatricula;            
            
            try 
            {                
                CallableStatement statement = con.prepareCall("{call sp_S_MatriculaSolo(?)}");
                statement.setString("pid_matricula", codMatricula);
                rsMatricula = statement.executeQuery();
                while(rsMatricula.next())
                {
                    
                    inicioClases = rsMatricula.getString("inicio_clases");
                    
                }                
                
            } catch (Exception ex) {
                Logger.getLogger(FrmPagoTodo.class.getName()).log(Level.SEVERE, null, ex);
                
            }
            
            mmes = Integer.parseInt(inicioClases.substring(3, 5))-1;
            return mmes;
        }
    
    private void btnReporteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReporteActionPerformed
       
        monto = Double.parseDouble(txtMonto.getText());
        idPeriodo = codigoPeriodo.get(cmbPeriodo.getSelectedIndex());
        Connection con = null;
        String idMatricula;
        //array para el reporte
        ArrayList <ClsDeudaPorMonto> arrayDeudas = new ArrayList<>();
        //Clase
        ClsDeudaPorMonto deudaPorMonto;
        //datos para la clase y el reporte
        String salumno,smonto,saula,smama= "",stelefonom= "",spapa= "",stelefonop = "";
        
        //FILTRAR DATOS POR PERIODO
        ClsAlumno alumnos = new ClsAlumno();
        ClsMatricula matricula = new ClsMatricula();
        ClsDeudas deudas = new ClsDeudas();
        ArrayList<ClsEntidadDeudas> deudasSinFiltro; 
        ResultSet rsAlumno; 
        double totalDeuda = 0.0;
        Connection con2;
        try
        {
            //Se obtienen alumnos por periodo
            con = ClsConexion.getConection();
            rsAlumno = alumnos.SeleccionarAlumnoPeriodo(idPeriodo,con);
            
            while(rsAlumno.next())
            {
                //Se obtiene el id de la matricula y se consulta las deudas (sin filtro)
                idMatricula = rsAlumno.getString("id_matricula");
                salumno = rsAlumno.getString("apellidos_nombres");
                saula = rsAlumno.getString("nombre_seccion");
                deudasSinFiltro = deudas.ListarDeudas(idMatricula,con);
                totalDeuda = 0.0;
                //filtrado de deudas vencidas
                for(ClsEntidadDeudas i: deudasSinFiltro)
                {
                    con2 = ClsConexion.getConection();
                    int mes = actualizarDatosGenerales(idMatricula,con);
                    ClsConexion.closeConnection(con2);
                    int aux2 = 0;
                    int aux3 = 0;
                    if(i.Concepto.length()>11)
                    {
                        if(i.Concepto.substring(12).equals(" "))
                        {
                            //aca editar el total de deuda
                            totalDeuda = totalDeuda + Double.parseDouble(i.Pendiente);
                        }
                        else if(i.Concepto.substring(0,12).equals("ALIMENTACION"))
                        { 
                        //cumple, por lo tanto la siguiente palabra es un mes, y la deuda es matricula                    
                            switch (i.Concepto.substring(13)) 
                            {
                                case "ENERO":aux2 = 0;break;
                                case "FEBRERO":aux2=1;break;
                                case "MARZO":aux2=2;break;
                                case "ABRIL":aux2=3;break;
                                case "MAYO":aux2=4;break;
                                case "JUNIO":aux2=5;break;
                                case "JULIO":aux2=6;break;
                                case "AGOSTO":aux2=7;break;
                                case "SEPTIEMBRE":aux2=8;break;
                                case "OCTUBRE":aux2=9;break;
                                case "NOVIEMBRE":aux2=10;break;
                                case "DICIEMBRE":aux2=11;break;
                            }
                            //si el mes es mayor que la fecha de inicio de clases se mostrara en la tabla
                            if(aux2>=mes)
                            {
                                //aca editar el total de deuda
                                totalDeuda = totalDeuda + Double.parseDouble(i.Pendiente);
   
                            }                        
                            else if(i.Concepto.substring(12,13).equals(" "))
                            {
                                //aca editar el total de deuda
                                totalDeuda = totalDeuda + Double.parseDouble(i.Pendiente);
                            }
                        }
                        else if(i.Concepto.substring(0,11).equals("MENSUALIDAD"))
                        { 
                            switch (i.Concepto.substring(12)) 
                            {
                                case "ENERO":aux3 = 0;break;
                                case "FEBRERO":aux3=1;break;
                                case "MARZO":aux3=2;break;
                                case "ABRIL":aux3=3;break;
                                case "MAYO":aux3=4;break;
                                case "JUNIO":aux3=5;break;
                                case "JULIO":aux3=6;break;
                                case "AGOSTO":aux3=7;break;
                                case "SEPTIEMBRE":aux3=8;break;
                                case "OCTUBRE":aux3=9;break;
                                case "NOVIEMBRE":aux3=10;break;
                                case "DICIEMBRE":aux3=11;break;
                            }
                            if(aux3>=mes)
                            {
                                //aca editar el total de deuda
                                totalDeuda = totalDeuda + Double.parseDouble(i.Pendiente);

                            } 
                            
                        }
                        else 
                        {
                            //aca editar el total de deuda
                            totalDeuda = totalDeuda + Double.parseDouble(i.Pendiente);

                        }
                        
                    }
                    else
                    {   
                        //aca editar el total de deuda
                        totalDeuda = totalDeuda + Double.parseDouble(i.Pendiente);
                    }
                    
                }
                //se comparan los montos
                if(totalDeuda >= monto)
                {                    
                    //consulta datos padre y madre
                    ResultSet resultado = matricula.ListarMadrePadreMatricula(idMatricula, con);
                    while(resultado.next())
                    {
                        smama = resultado.getString("madre");
                        stelefonom = resultado.getString("madre_telefono1");
                        spapa = resultado.getString("padre");
                        stelefonop = resultado.getString("padre_telefono1");
                    }
                    
                    //asigna datos al arrayPrincipal
                    deudaPorMonto = new ClsDeudaPorMonto
                    (
                        salumno, 
                        String.valueOf(df.format(totalDeuda)),
                        saula,    
                        smama, 
                        stelefonom, 
                        spapa, 
                        stelefonop
                    );
                    arrayDeudas.add(deudaPorMonto);
                    
                }
                
            }
            
            ClsConexion.closeConnection(con);
            
            //reporte
            JasperPrint jpReporte;
            JRBeanCollectionDataSource dsReporte;
            JasperViewer jvReporte;
            String pathJRXML = "/Reportes/RptDeudasPorMonto.jrxml";
            String pathJASPER = "/Reportes/RptDeudasPorMonto.jasper";
            Map mapa = new HashMap();
            
            mapa.put("mayor", String.valueOf(monto));
            dsReporte = new JRBeanCollectionDataSource(arrayDeudas);
            JasperCompileManager.compileReportToFile
                (
                    System.getProperty("user.dir")+pathJRXML,
                    System.getProperty("user.dir")+pathJASPER
                );
            jpReporte = JasperFillManager.fillReport(System.getProperty("user.dir")+pathJASPER, mapa,dsReporte);
            jvReporte = new JasperViewer(jpReporte, false);
            jvReporte.setTitle("Reporte Deudas Por Monto");
            jvReporte.setVisible(true);
            
        }
        catch (Exception ex) 
        {
            Logger.getLogger(FrmImpresionBoleta.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, ex);
        }
    }//GEN-LAST:event_btnReporteActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        this.dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void cargaPeriodo()
    {
        ClsPeriodo periodos = new ClsPeriodo();
        ArrayList<ClsEntidadPeriodo> periodo =  periodos.ListarPeriodo();
        Iterator iterator = periodo.iterator();
        DefaultComboBoxModel DefaultComboBoxModel = new DefaultComboBoxModel();
        DefaultComboBoxModel.removeAllElements();
        cmbPeriodo.removeAllItems();
        String fila[] = new String[4];
     
        while(iterator.hasNext())
        {
        ClsEntidadPeriodo Periodo = new ClsEntidadPeriodo();
        Periodo = (ClsEntidadPeriodo) iterator.next();               
        fila[0] = Periodo.getNombre_Periodo();
        fila[1] = Periodo.getEstado_Periodo();        
            if(Periodo.getEstado_Periodo().equals("Activo"))
            {   
            codigoPeriodo.add(Periodo.getId_Periodo());     
            DefaultComboBoxModel.addElement(Periodo.getNombre_Periodo());        
            }        
        }
        cmbPeriodo.setModel(DefaultComboBoxModel);     
    }    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnReporte;
    private javax.swing.JComboBox<String> cmbPeriodo;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextField txtMonto;
    // End of variables declaration//GEN-END:variables
}
