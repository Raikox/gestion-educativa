/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package PckInterfaces;

import PckConexion.ClsConexion;
import PckEntidad.AlumnoFichaInasistencia;
import PckEntidad.ClsEntidadSeccion;
import PckNegocio.ClsAlumno;
import PckNegocio.ClsAnecdotario;
import PckNegocio.ClsAsistencia;
import PckRenderTabla.GeneralRender;
import java.awt.Window;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.SwingUtilities;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellRenderer;
import javax.swing.table.TableColumn;
import mpsModel.MatriculaModelo;
import prymatricula.ClsMisc;

/**
 *
 * @author Kevin
 */
public final class AsistenciaDocenteFichaInasistencia extends javax.swing.JPanel {

    MatriculaModelo matriculaModelo = new MatriculaModelo();
    Connection con = null;
    ClsAlumno alumnos = new ClsAlumno();
    ClsAsistencia asistencia = new ClsAsistencia();
    List<AlumnoFichaInasistencia> arrayAlumno = new ArrayList<>();
    List<AlumnoFichaInasistencia> arrayAsistencia = new ArrayList<>();
    ArrayList<Object> arrayIdPeriodo = new ArrayList();
    ArrayList<Object> arrayIdAula = new ArrayList();
    int idPeriodo;
    int idAula;
    Date abc = new Date();
    SimpleDateFormat formatoOriginal = new SimpleDateFormat("yyyy-MM-dd");
    SimpleDateFormat formato = new SimpleDateFormat("dd/MM/yyyy");
    /**
     * Creates new form AsistenciaDocenteAlumnoFalta
     */
    public AsistenciaDocenteFichaInasistencia() {
        initComponents();
        
        jdcFecha.setDate(abc);
        
        actualizarComboPeriodo();       
        actualizarComboAula();
        ActualizarTablaFicha();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel4 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        pnlDerecha = new javax.swing.JPanel();
        pnltop = new javax.swing.JPanel();
        cmbPeriodo = new javax.swing.JComboBox<>();
        jLabel12 = new javax.swing.JLabel();
        cmbAula = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        jdcFecha = new com.toedter.calendar.JDateChooser();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel7 = new javax.swing.JLabel();
        pnlbot = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblFichaInasistencia = new javax.swing.JTable();

        setBackground(new java.awt.Color(237, 240, 242));
        setLayout(new java.awt.BorderLayout());

        jPanel4.setBackground(new java.awt.Color(237, 240, 242));
        jPanel4.setPreferredSize(new java.awt.Dimension(911, 50));
        jPanel4.setLayout(new java.awt.GridBagLayout());

        jPanel5.setBackground(new java.awt.Color(237, 240, 242));
        jPanel5.setLayout(new java.awt.GridBagLayout());

        jLabel1.setFont(new java.awt.Font("Droid Sans", 1, 12)); // NOI18N
        jLabel1.setText("FICHA DE INASISTENCIAS");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        jPanel5.add(jLabel1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.weightx = 1.0;
        jPanel4.add(jPanel5, gridBagConstraints);

        add(jPanel4, java.awt.BorderLayout.PAGE_START);

        jPanel3.setBackground(new java.awt.Color(237, 240, 242));
        jPanel3.setLayout(new java.awt.GridBagLayout());

        pnlDerecha.setBackground(new java.awt.Color(255, 255, 255));
        pnlDerecha.setMinimumSize(new java.awt.Dimension(200, 414));
        pnlDerecha.setPreferredSize(new java.awt.Dimension(300, 400));
        pnlDerecha.setLayout(new java.awt.BorderLayout());

        pnltop.setBackground(new java.awt.Color(255, 255, 255));
        pnltop.setLayout(new java.awt.GridBagLayout());

        cmbPeriodo.setFont(new java.awt.Font("Droid Sans", 0, 11)); // NOI18N
        cmbPeriodo.setMinimumSize(new java.awt.Dimension(300, 20));
        cmbPeriodo.setPreferredSize(new java.awt.Dimension(500, 20));
        cmbPeriodo.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbPeriodoItemStateChanged(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(20, 20, 10, 20);
        pnltop.add(cmbPeriodo, gridBagConstraints);

        jLabel12.setFont(new java.awt.Font("Droid Sans", 0, 11)); // NOI18N
        jLabel12.setText("Aula.");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        pnltop.add(jLabel12, gridBagConstraints);

        cmbAula.setFont(new java.awt.Font("Droid Sans", 0, 11)); // NOI18N
        cmbAula.setMinimumSize(new java.awt.Dimension(300, 20));
        cmbAula.setPreferredSize(new java.awt.Dimension(500, 20));
        cmbAula.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbAulaItemStateChanged(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 20);
        pnltop.add(cmbAula, gridBagConstraints);

        jLabel4.setFont(new java.awt.Font("Droid Sans", 0, 11)); // NOI18N
        jLabel4.setText("Periodo.");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(20, 20, 10, 0);
        pnltop.add(jLabel4, gridBagConstraints);

        jdcFecha.setFont(new java.awt.Font("Droid Sans", 0, 11)); // NOI18N
        jdcFecha.setMinimumSize(new java.awt.Dimension(50, 23));
        jdcFecha.setPreferredSize(new java.awt.Dimension(150, 22));
        jdcFecha.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jdcFechaPropertyChange(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        pnltop.add(jdcFecha, gridBagConstraints);

        jSeparator1.setBackground(new java.awt.Color(237, 240, 242));
        jSeparator1.setForeground(new java.awt.Color(237, 240, 242));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(20, 10, 0, 10);
        pnltop.add(jSeparator1, gridBagConstraints);

        jLabel7.setFont(new java.awt.Font("Droid Sans", 0, 11)); // NOI18N
        jLabel7.setText("Fecha.");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(20, 20, 10, 0);
        pnltop.add(jLabel7, gridBagConstraints);

        pnlDerecha.add(pnltop, java.awt.BorderLayout.PAGE_START);

        pnlbot.setBackground(new java.awt.Color(255, 255, 255));
        pnlbot.setLayout(new java.awt.GridBagLayout());

        tblFichaInasistencia.setFont(new java.awt.Font("Droid Sans", 0, 11)); // NOI18N
        tblFichaInasistencia.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3"
            }
        ));
        tblFichaInasistencia.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tblFichaInasistencia.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblFichaInasistenciaMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblFichaInasistencia);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(20, 20, 20, 20);
        pnlbot.add(jScrollPane1, gridBagConstraints);

        pnlDerecha.add(pnlbot, java.awt.BorderLayout.CENTER);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 10, 10);
        jPanel3.add(pnlDerecha, gridBagConstraints);

        add(jPanel3, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void cmbPeriodoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbPeriodoItemStateChanged

        //arrayIdAula = matriculaModelo.MostrarComboAulasPeriodo(cmbAula, idPeriodo);
        actualizarComboAula();
        
        if (jdcFecha.getDate()!= null && cmbPeriodo.getSelectedIndex() != -1 && cmbAula.getSelectedIndex() != -1)
        {
            ActualizarTablaFicha();
        }
        
    }//GEN-LAST:event_cmbPeriodoItemStateChanged

    private void cmbAulaItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbAulaItemStateChanged

        if (jdcFecha.getDate()!= null && cmbPeriodo.getSelectedIndex() != -1 && cmbAula.getSelectedIndex() != -1)
        {
            ActualizarTablaFicha();
        }
    }//GEN-LAST:event_cmbAulaItemStateChanged

    private void jdcFechaPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jdcFechaPropertyChange

        if (jdcFecha.getDate()!= null && cmbPeriodo.getSelectedIndex() != -1 && cmbAula.getSelectedIndex() != -1)
        {
            ActualizarTablaFicha();
        }
    }//GEN-LAST:event_jdcFechaPropertyChange

    private void tblFichaInasistenciaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblFichaInasistenciaMouseClicked

        int column = tblFichaInasistencia.getSelectedColumn();
        int row = tblFichaInasistencia.getSelectedRow();
        String idAlumno;
        String idFicha;
        String nombreAlumno;
        Date fechaFicha;
        if(row != -1)
        {
            if(evt.getClickCount() == 2)
            {
                DefaultTableModel dtmAsistencia = (DefaultTableModel) tblFichaInasistencia.getModel();
                idFicha = (String) dtmAsistencia.getValueAt(row, 0);
                idAlumno = (String) dtmAsistencia.getValueAt(row, 1);
                nombreAlumno = (String) dtmAsistencia.getValueAt(row, 3);
                fechaFicha = jdcFecha.getDate();
                AbrirDialogFichaInasistenciaEditar(idFicha,idAlumno,nombreAlumno,fechaFicha);
            }
            

        }
    }//GEN-LAST:event_tblFichaInasistenciaMouseClicked

    public void ActualizarTablaFicha() 
    {
        idAula = Integer.parseInt((String) arrayIdAula.get(cmbAula.getSelectedIndex()));
        String idFicha = "";String idAlumno;String nombreAlumno;String motivoInasistencia = "";
        String personaContacto = "";String telefonoContacto="";String fechaRetorno="";String justificada;
        PreparedStatement pstmt;
        ResultSet rs;
        String cabecera[] = {"ID FICHA", "ID ALUMNO","N°","ALUMNO","JUSTIFICADA","MOTIVO INASISTENCIA","PERSONA CONTACTO","TELEFONO CONTACTO","FECHA RETORNO"};
        Object fila[] = new Object[10];
        String fecha = formatoOriginal.format(jdcFecha.getDate());
        DefaultTableModel dtmFicha  = new DefaultTableModel(null,cabecera) 
        {        
            @Override
            public boolean isCellEditable(int rowIndex,int columnIndex){return false;}               
        }; 
        String sqlQuery = "SELECT ina.mat_alumno_id, ina.inasistencia_ficha_id, ina.inasistencia_ficha_fecha, ina.inasistencia_ficha_motivo,\n" +
                    "ina.inasistencia_ficha_contacto,ina.inasistencia_ficha_telefono, ina.inasistencia_ficha_retorno, ina.inasistencia_ficha_justificada\n" +
                    "FROM mat_inasistencia_ficha as ina\n" +
                    "WHERE ina.mat_alumno_id = ? AND ina.inasistencia_ficha_fecha = ?";
                
        con = ClsConexion.getConection();
        
        arrayAlumno = alumnos.ListarAlumnoPagoSeccionBasico(String.valueOf(idAula),con);
        
        arrayAsistencia = asistencia.ListarAsistenciaAulaBasico(String.valueOf(idAula), fecha, con);
        
        for(AlumnoFichaInasistencia asis : arrayAsistencia)
        {            
            arrayAlumno.remove(new AlumnoFichaInasistencia(asis.getId_Alumno(),asis.getApellidos_Nombres()));            
        }
        
        //System.out.println(arrayAlumno);
        int cont = 1;
        for(AlumnoFichaInasistencia alu : arrayAlumno)
        {
            idFicha = "";                                   
            motivoInasistencia = "";  
            personaContacto = "";  
            telefonoContacto = "";  
            fechaRetorno = "";  
            justificada = "";
            
            try 
            {
                pstmt = con.prepareStatement(sqlQuery);
                pstmt.setString(1, alu.getId_Alumno());
                pstmt.setString(2, fecha);
                rs = pstmt.executeQuery(); 
                
                while(rs.next())
                {
                    idFicha = rs.getString("inasistencia_ficha_id");  
                    if(rs.getString("inasistencia_ficha_justificada").equals("1")) {
                        justificada = "SI";
                    }
                    else {
                        justificada = "NO";
                    }
                    motivoInasistencia = rs.getString("inasistencia_ficha_motivo");
                    personaContacto = rs.getString("inasistencia_ficha_contacto");
                    telefonoContacto = rs.getString("inasistencia_ficha_telefono");
                    fechaRetorno = rs.getString("inasistencia_ficha_retorno");
                }
                
            } catch (SQLException ex) {
                Logger.getLogger(AsistenciaDocenteFichaInasistencia.class.getName()).log(Level.SEVERE, null, ex);
            }
            
                fila[0] = idFicha;
                fila[1] = alu.getId_Alumno();
                fila[2] = cont;
                fila[3] = alu.getApellidos_Nombres();
                fila[4] = justificada;
                fila[5] = motivoInasistencia;
                fila[6] = personaContacto;
                fila[7] = telefonoContacto;
            
            if(!fechaRetorno.equals(""))
            {
                
                
                try {
                    fila[8] = formato.format(formatoOriginal.parse(fechaRetorno));
                } catch (ParseException ex) {
                    Logger.getLogger(AsistenciaDocenteFichaInasistencia.class.getName()).log(Level.SEVERE, null, ex);
                }
                
            }
            else
            {
                fila[8] = "";
            }
            cont++;
            dtmFicha.addRow(fila);
        }
        
        tblFichaInasistencia.setModel(dtmFicha);
        tblFichaInasistencia.setRowHeight(20);

        tblFichaInasistencia.removeColumn(tblFichaInasistencia.getColumnModel().getColumn(0));
        tblFichaInasistencia.removeColumn(tblFichaInasistencia.getColumnModel().getColumn(0));

        TableColumn colOrden = tblFichaInasistencia.getColumnModel().getColumn(0);colOrden.setMaxWidth(35);
        TableColumn colAlumno = tblFichaInasistencia.getColumnModel().getColumn(1);colAlumno.setPreferredWidth(200);
        TableColumn colJusti = tblFichaInasistencia.getColumnModel().getColumn(2);colJusti.setPreferredWidth(50);
        TableColumn colMotivo = tblFichaInasistencia.getColumnModel().getColumn(3);colMotivo.setPreferredWidth(250);
        TableColumn colContacto = tblFichaInasistencia.getColumnModel().getColumn(4);colContacto.setPreferredWidth(150);
        TableColumn colTelefono = tblFichaInasistencia.getColumnModel().getColumn(5);colTelefono.setPreferredWidth(50);
        TableColumn colFechaR = tblFichaInasistencia.getColumnModel().getColumn(6);colFechaR.setPreferredWidth(50);
        
        TableCellRenderer tcr =  tblFichaInasistencia.getTableHeader().getDefaultRenderer();
        GeneralRender.MiRender miRender = new GeneralRender.MiRender(tcr);
        //ClsMisc.miRender miRender = new ClsMisc.miRender(tcr); 
        miRender.getTableCellRendererComponent(tblFichaInasistencia, fila, true, true, WIDTH, 0);
        miRender.getTableCellRendererComponent(tblFichaInasistencia, fila, true, true, WIDTH, 2);
        miRender.getTableCellRendererComponent(tblFichaInasistencia, fila, true, true, WIDTH, 5);
        miRender.getTableCellRendererComponent(tblFichaInasistencia, fila, true, true, WIDTH, 6);           

        ClsConexion.closeConnection(con);
        
    }
    
    private void AbrirDialogFichaInasistenciaEditar(String idFicha, String idAlumno, String nombreAlumno,Date fechaFicha) {
        
        Window parentWindow = SwingUtilities.windowForComponent(this);
        AsistenciaDocenteFichaInasistenciaEditar inasistenciaFicha = new AsistenciaDocenteFichaInasistenciaEditar
        (parentWindow, idFicha, idAlumno, nombreAlumno,fechaFicha,String.valueOf(idAula));
        inasistenciaFicha.FormularioPadre(this);
        inasistenciaFicha.setModal(true);
        inasistenciaFicha.setVisible(true);
        //inasistenciaFicha.toFront();        
    }
    
    private void actualizarComboPeriodo()
    {
        arrayIdPeriodo.clear();
       
        System.out.println("Personal ="+FrmPrincipal.idPersonalLogeado);
        //comprobar si es profesor        
        ClsAnecdotario ane = new ClsAnecdotario();
        con = ClsConexion.getConection();        
        ArrayList<ClsEntidadSeccion> seccion = ane.ListarSeccionProfesor(FrmPrincipal.idPersonalLogeado, con);
        ClsConexion.closeConnection(con);        
        DefaultComboBoxModel dcbPeriodo = new DefaultComboBoxModel();
        dcbPeriodo.removeAllElements();
        cmbPeriodo.removeAllItems();
        Iterator it = seccion.iterator();
        String periodo="";        
        while(it.hasNext())
        {           
            ClsEntidadSeccion Seccion;
            Seccion = (ClsEntidadSeccion) it.next();
            //periodo                       
            if(!periodo.equals(Seccion.getNombre_Periodo()))
            {
                dcbPeriodo.addElement(Seccion.getNombre_Periodo()); 
                arrayIdPeriodo.add(Seccion.getId_Periodo());               
                
                periodo = Seccion.getNombre_Periodo();               
            }                    
        }
        cmbPeriodo.setModel(dcbPeriodo);
    }
    
    private void actualizarComboAula()
    {
        arrayIdAula.clear();       
        System.out.println("Personal ="+FrmPrincipal.idPersonalLogeado);
        //comprobar si es profesor        
        ClsAnecdotario ane = new ClsAnecdotario();
        con = ClsConexion.getConection();        
        ArrayList<ClsEntidadSeccion> seccion = ane.ListarSeccionProfesor(FrmPrincipal.idPersonalLogeado, con);
        ClsConexion.closeConnection(con);
        DefaultComboBoxModel dcbSeccion = new DefaultComboBoxModel();
        dcbSeccion.removeAllElements();
        cmbAula.removeAllItems();
        Iterator it = seccion.iterator();
        String sec="";        
        while(it.hasNext())
        {           
            ClsEntidadSeccion Seccion;
            Seccion = (ClsEntidadSeccion) it.next();
            //seccion      
            if(!sec.equals(Seccion.getNombre_Seccion()))
            {                
                if(arrayIdPeriodo.get(cmbPeriodo.getSelectedIndex()).equals(Seccion.getId_Periodo()))
                {
                    dcbSeccion.addElement(Seccion.getNombre_Seccion()); 
                    arrayIdAula.add(Seccion.getId_Seccion());
                    sec = Seccion.getNombre_Seccion();
                }                
            }
        }
        cmbAula.setModel(dcbSeccion);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> cmbAula;
    private javax.swing.JComboBox<String> cmbPeriodo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private com.toedter.calendar.JDateChooser jdcFecha;
    private javax.swing.JPanel pnlDerecha;
    private javax.swing.JPanel pnlbot;
    private javax.swing.JPanel pnltop;
    private javax.swing.JTable tblFichaInasistencia;
    // End of variables declaration//GEN-END:variables
}
