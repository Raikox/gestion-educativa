/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package PckInterfaces;

import PckConexion.ClsConexion;
import PckEntidad.ClsEntidadAlumnoPago;
import PckEntidad.ClsEntidadPeriodo;
import PckEntidad.ClsEntidadSeccion;
import PckNegocio.ClsAlumno;
import PckNegocio.ClsAnecdotario;
import PckNegocio.ClsPeriodo;
import PckNegocio.ClsSeccion;
import static java.awt.image.ImageObserver.WIDTH;
import java.awt.print.PageFormat;
import java.awt.print.PrinterException;
import java.awt.print.PrinterJob;
import java.sql.Connection;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.print.PrintService;
import javax.print.PrintServiceLookup;
import javax.print.attribute.AttributeSet;
import javax.print.attribute.HashPrintRequestAttributeSet;
import javax.print.attribute.HashPrintServiceAttributeSet;
import javax.print.attribute.PrintRequestAttributeSet;
import javax.print.attribute.standard.Copies;
import javax.print.attribute.standard.MediaSizeName;
import javax.print.attribute.standard.PrinterName;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellRenderer;
import javax.swing.table.TableColumn;
import mpsDAL.PagoDAL;
import mpsEntity.NoAdeudoEntity;
import mpsModel.UsuarioModelo;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JRExporterParameter;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.data.JRBeanCollectionDataSource;
import net.sf.jasperreports.engine.export.JRPrintServiceExporter;
import net.sf.jasperreports.engine.export.JRPrintServiceExporterParameter;
import net.sf.jasperreports.view.JasperViewer;
import prymatricula.ClsMisc;

/**
 *
 * @author Kevin
 */
public class ContabilidadConstancia extends javax.swing.JPanel {

    Connection con=null;
    int alturaCelda = 20;
    String idMatricula;
    String nombreAlumno;
    ArrayList<String> codigoPeriodo = new ArrayList(); 
    ArrayList<String> codigoAula = new ArrayList();
    /**
     * Creates new form ContabilidadConstancia
     */
    public ContabilidadConstancia() {
        initComponents();
        
        CargarComboPeriodo();
        CargarComboAula();
        
        if(!codigoAula.isEmpty())
        {
            CargarTablaAlumno();
        }
                
        rbnGrupo.add(rbnNoAdeudo);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        rbnGrupo = new javax.swing.ButtonGroup();
        jPanel4 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        tpnAlumno = new javax.swing.JTabbedPane();
        jPanel6 = new javax.swing.JPanel();
        jSeparator3 = new javax.swing.JSeparator();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblAlumno = new javax.swing.JTable();
        txtBusqueda = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        cmbAula = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        cmbPeriodo = new javax.swing.JComboBox<>();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel8 = new javax.swing.JPanel();
        rbnNoAdeudo = new javax.swing.JRadioButton();
        btnReporte = new javax.swing.JButton();

        setLayout(new java.awt.BorderLayout());

        jPanel4.setBackground(new java.awt.Color(237, 240, 242));
        jPanel4.setPreferredSize(new java.awt.Dimension(911, 50));
        jPanel4.setLayout(new java.awt.GridBagLayout());

        jPanel5.setBackground(new java.awt.Color(237, 240, 242));
        jPanel5.setLayout(new java.awt.GridBagLayout());

        jLabel1.setFont(new java.awt.Font("Droid Sans", 1, 12)); // NOI18N
        jLabel1.setText("CONSTANCIAS");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        jPanel5.add(jLabel1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.weightx = 1.0;
        jPanel4.add(jPanel5, gridBagConstraints);

        add(jPanel4, java.awt.BorderLayout.PAGE_START);

        jPanel1.setBackground(new java.awt.Color(237, 240, 242));
        jPanel1.setLayout(new java.awt.GridBagLayout());

        tpnAlumno.setFont(new java.awt.Font("Droid Sans", 0, 11)); // NOI18N

        jPanel6.setBackground(new java.awt.Color(255, 255, 255));
        jPanel6.setMinimumSize(new java.awt.Dimension(350, 58));
        jPanel6.setLayout(new java.awt.GridBagLayout());

        jSeparator3.setForeground(new java.awt.Color(224, 224, 224));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 20);
        jPanel6.add(jSeparator3, gridBagConstraints);

        tblAlumno.setFont(new java.awt.Font("Droid Sans", 0, 11)); // NOI18N
        tblAlumno.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Title 1", "Title 2"
            }
        ));
        tblAlumno.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tblAlumno.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblAlumnoMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblAlumno);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 10, 20);
        jPanel6.add(jScrollPane2, gridBagConstraints);

        txtBusqueda.setFont(new java.awt.Font("Droid Sans", 0, 11)); // NOI18N
        txtBusqueda.setMinimumSize(new java.awt.Dimension(250, 20));
        txtBusqueda.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtBusquedaMouseClicked(evt);
            }
        });
        txtBusqueda.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtBusquedaKeyTyped(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 20);
        jPanel6.add(txtBusqueda, gridBagConstraints);

        jLabel4.setFont(new java.awt.Font("Droid Sans", 0, 11)); // NOI18N
        jLabel4.setText("BÃºsqueda.");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(20, 20, 20, 0);
        jPanel6.add(jLabel4, gridBagConstraints);

        jLabel2.setFont(new java.awt.Font("Droid Sans", 0, 11)); // NOI18N
        jLabel2.setText("Aula.");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 20, 0);
        jPanel6.add(jLabel2, gridBagConstraints);

        cmbAula.setFont(new java.awt.Font("Droid Sans", 0, 11)); // NOI18N
        cmbAula.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmbAula.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbAulaItemStateChanged(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 20, 20);
        jPanel6.add(cmbAula, gridBagConstraints);

        jLabel6.setFont(new java.awt.Font("Droid Sans", 0, 11)); // NOI18N
        jLabel6.setText("Periodo.");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(20, 20, 20, 0);
        jPanel6.add(jLabel6, gridBagConstraints);

        cmbPeriodo.setFont(new java.awt.Font("Droid Sans", 0, 11)); // NOI18N
        cmbPeriodo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmbPeriodo.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbPeriodoItemStateChanged(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 20);
        jPanel6.add(cmbPeriodo, gridBagConstraints);

        tpnAlumno.addTab("Listado Alumnos", jPanel6);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 10, 10);
        jPanel1.add(tpnAlumno, gridBagConstraints);

        jTabbedPane1.setFont(new java.awt.Font("Droid Sans", 0, 11)); // NOI18N
        jTabbedPane1.setMinimumSize(new java.awt.Dimension(350, 85));

        jPanel8.setBackground(new java.awt.Color(255, 255, 255));
        jPanel8.setLayout(new java.awt.GridBagLayout());

        rbnNoAdeudo.setBackground(new java.awt.Color(255, 255, 255));
        rbnNoAdeudo.setFont(new java.awt.Font("Droid Sans", 0, 12)); // NOI18N
        rbnNoAdeudo.setSelected(true);
        rbnNoAdeudo.setText("Constancia de no adeudo");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.PAGE_START;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(20, 20, 20, 0);
        jPanel8.add(rbnNoAdeudo, gridBagConstraints);

        btnReporte.setFont(new java.awt.Font("Droid Sans", 1, 14)); // NOI18N
        btnReporte.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PckIconos/ic_assignment_black_24dp.png"))); // NOI18N
        btnReporte.setText("GENERAR REPORTE");
        btnReporte.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btnReporte.setEnabled(false);
        btnReporte.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReporteActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(20, 0, 20, 20);
        jPanel8.add(btnReporte, gridBagConstraints);

        jTabbedPane1.addTab("Tipo de Constancia", jPanel8);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 10, 10);
        jPanel1.add(jTabbedPane1, gridBagConstraints);

        add(jPanel1, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void tblAlumnoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblAlumnoMouseClicked

        int reg;
        DefaultTableModel defaultTableModel;
        reg = tblAlumno.getSelectedRow();
        if(reg == -1)
        {JOptionPane.showMessageDialog(null, "Debe Seleccionar una opciÃ³n");}
        else
        {
            defaultTableModel = (DefaultTableModel)tblAlumno.getModel();
            idMatricula = ((String)defaultTableModel.getValueAt(reg, 0));
            System.out.println("idMatricula: "+idMatricula);
            nombreAlumno = (String) defaultTableModel.getValueAt(reg, 2);
            btnReporte.setEnabled(true);
        }
    }//GEN-LAST:event_tblAlumnoMouseClicked

    private void txtBusquedaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtBusquedaMouseClicked

        int fin = txtBusqueda.getHeight();
        txtBusqueda.setSelectionStart(0);
        txtBusqueda.setSelectionEnd(fin);

    }//GEN-LAST:event_txtBusquedaMouseClicked

    private void txtBusquedaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBusquedaKeyTyped

        String a = txtBusqueda.getText();
        if(a.equals(""))
        {
            CargarTablaAlumno();
            
        }
        else
        {
            CargarTablaAlumnoBusqueda(a);
            
        }
    }//GEN-LAST:event_txtBusquedaKeyTyped

    private void cmbAulaItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbAulaItemStateChanged

        if(cmbAula.getSelectedIndex() != -1)
        {
            CargarTablaAlumno();
           
        }

    }//GEN-LAST:event_cmbAulaItemStateChanged

    private void cmbPeriodoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbPeriodoItemStateChanged

        if(cmbPeriodo.getSelectedIndex() != -1)
        {
            CargarComboAula();

            if(cmbAula.getSelectedIndex() != -1)
            {
                CargarTablaAlumno();
                
            }
        }

    }//GEN-LAST:event_cmbPeriodoItemStateChanged

    private void btnReporteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReporteActionPerformed

        try( Connection conn = ClsConexion.getConection()) {

            GenerarReporteNoAdeudo(conn);

        } catch (SQLException ex) {
            Logger.getLogger(ContabilidadConstancia.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnReporteActionPerformed

    private void GenerarReporteNoAdeudo(Connection conn) {
     
        List<NoAdeudoEntity> listNoAdeudo;
        PagoDAL pagoDAL = new PagoDAL();
        Map mapa = new HashMap();
        JasperPrint jpReporte;
        JRBeanCollectionDataSource dsReporte;
        JasperViewer jvReporte;
        String pathJRXML = "/Reportes/RptConstanciaNoAdeudo.jrxml";
        String pathJASPER = "/Reportes/RptConstanciaNoAdeudo.jasper";
            
        listNoAdeudo = pagoDAL.ListarAlumnoMensualidadPagada(idMatricula, conn);
        mapa.put("alumno", nombreAlumno);
        
        try {
            
            dsReporte = new JRBeanCollectionDataSource(listNoAdeudo);        
            JasperCompileManager.compileReportToFile
                (
                        System.getProperty("user.dir")+pathJRXML,
                        System.getProperty("user.dir")+pathJASPER
                );
            jpReporte = JasperFillManager.fillReport(System.getProperty("user.dir")+pathJASPER, mapa,dsReporte);
            jvReporte = new JasperViewer(jpReporte, false);
            jvReporte.setTitle("Constancia no adeudo");
            jvReporte.setVisible(true);
            
        } catch (JRException ex) {
            Logger.getLogger(UsuarioModelo.class.getName()).log(Level.SEVERE, null, ex);
        }
            
            
            
////            JasperViewer view = new JasperViewer(jpReporte,false);
////            view.setTitle("Cierre de Caja");
////            view.setVisible(true);
//            PrinterJob printerJob = PrinterJob.getPrinterJob();
//            PageFormat pageFormat = PrinterJob.getPrinterJob().defaultPage();
//            printerJob.defaultPage(pageFormat);
//
//            int selectedService = 0;
//
//            AttributeSet attributeSet = new HashPrintServiceAttributeSet(new PrinterName("WebPrintService", null));
//
//            PrintService[] printService = PrintServiceLookup.lookupPrintServices(null, attributeSet);
//
//             try {
//                printerJob.setPrintService(printService[selectedService]);
//
//            } catch (PrinterException e) {
//
//                System.out.println(e);
//            }
//            JRPrintServiceExporter exporter;
//            PrintRequestAttributeSet printRequestAttributeSet = new HashPrintRequestAttributeSet();
//            printRequestAttributeSet.add(MediaSizeName.NA_LETTER);
//            printRequestAttributeSet.add(new Copies(1));
//
//            // these are deprecated
//            exporter = new JRPrintServiceExporter();
//            exporter.setParameter(JRExporterParameter.JASPER_PRINT, jpReporte);
//            exporter.setParameter(JRPrintServiceExporterParameter.PRINT_SERVICE, printService[selectedService]);
//            exporter.setParameter(JRPrintServiceExporterParameter.PRINT_SERVICE_ATTRIBUTE_SET, printService[selectedService].getAttributes());
//            exporter.setParameter(JRPrintServiceExporterParameter.PRINT_REQUEST_ATTRIBUTE_SET, printRequestAttributeSet);
//            exporter.setParameter(JRPrintServiceExporterParameter.DISPLAY_PAGE_DIALOG, Boolean.FALSE);
//            exporter.setParameter(JRPrintServiceExporterParameter.DISPLAY_PRINT_DIALOG, Boolean.FALSE);
//            exporter.exportReport();    
//        
//        } catch (JRException ex) {
//            Logger.getLogger(ContabilidadConstancia.class.getName()).log(Level.SEVERE, null, ex);
//        }
    }
    
    private void CargarComboPeriodo()
    {
        ClsPeriodo periodos = new ClsPeriodo();
        ArrayList<ClsEntidadPeriodo> periodo =  periodos.ListarPeriodo();
        Iterator iterator = periodo.iterator();
        DefaultComboBoxModel DefaultComboBoxModel = new DefaultComboBoxModel();
        DefaultComboBoxModel.removeAllElements();
        cmbPeriodo.removeAllItems();
        String fila[] = new String[4];

        while(iterator.hasNext())
        {
        ClsEntidadPeriodo Periodo;
        Periodo = (ClsEntidadPeriodo) iterator.next();               
        fila[0] = Periodo.getNombre_Periodo();
        fila[1] = Periodo.getEstado_Periodo();        
            if(fila[1].equals("Activo"))
            {   
            codigoPeriodo.add(Periodo.getId_Periodo());     
            DefaultComboBoxModel.addElement(fila[0]);  
            }        
        }
        cmbPeriodo.setModel(DefaultComboBoxModel);
    }
    
    private void CargarTablaAlumno()
    {
        int p=1;
        String idSeccion = codigoAula.get(cmbAula.getSelectedIndex());
        String titulos[] = {"ID","NÂ°","APELLIDOS Y NOMBRES"};
        String fila[] = new String[6];  
        con = ClsConexion.getConection();
        ClsAlumno alumnos = new ClsAlumno();
        ArrayList<ClsEntidadAlumnoPago> alumnoo = alumnos.ListarAlumnoPagoSeccion(idSeccion,con);    
        
        DefaultTableModel defaultTableModel =new DefaultTableModel(null,titulos)
        { 
            @Override
            public boolean isCellEditable(int rowIndex,int columnIndex)
            {return false;}
        };
        
        for(ClsEntidadAlumnoPago ap : alumnoo)
        {
            fila[0] = ap.getId_Matricula();
            fila[1] = String.valueOf(p);
            fila[2] = ap.getApellidos_Nombres();
            fila[3] = ap.getId_Seccion(); 
            p++;
            defaultTableModel.addRow(fila); 
        }            
                
        ClsConexion.closeConnection(con);
        tblAlumno.setModel(defaultTableModel);
        tblAlumno.setRowHeight(alturaCelda);              
        
        tblAlumno.removeColumn(tblAlumno.getColumnModel().getColumn(0));
        TableColumn  columnaN =tblAlumno.getColumnModel().getColumn(0);
        columnaN.setMaxWidth(30);
        TableColumn  columnaPer =tblAlumno.getColumnModel().getColumn(1);
        columnaPer.setPreferredWidth(250);
        
        
        TableCellRenderer tcr =  tblAlumno.getTableHeader().getDefaultRenderer();
        ClsMisc.miRender mr = new ClsMisc.miRender(tcr);
        mr.getTableCellRendererComponent(tblAlumno, fila, true, true, WIDTH, 0);
        tblAlumno.setAutoResizeMode(JTable.AUTO_RESIZE_LAST_COLUMN);
        
    }
    private void CargarTablaAlumnoBusqueda(String texto)
    {
        int p=1;
        String titulos[] = {"ID","NÂ°","APELLIDOS Y NOMBRES","AULA"};
        con = ClsConexion.getConection();
        ClsAlumno alumnos = new ClsAlumno();
        ArrayList<ClsEntidadAlumnoPago> alumnoo = alumnos.ListarAlumnoBusqueda(texto,con);
        Iterator iterator = alumnoo.iterator();                    
        String fila[] = new String[12];    
        
        DefaultTableModel dtmBusqueda =new DefaultTableModel(null,titulos)
        { 
            @Override
            public boolean isCellEditable(int rowIndex,int columnIndex)
            {return false;}
        };
        
        for(ClsEntidadAlumnoPago ap : alumnoo)
        {
            //compara el aula de la busqueda con als aulas del docente
            for(String aula : codigoAula)
            {
                if(ap.getId_Seccion().equals(aula))
                {
                    fila[0] = ap.getId_Matricula();
                    fila[1] = String.valueOf(p);
                    fila[2] = ap.getApellidos_Nombres();
                    fila[3] = ap.getNombre_Seccion();
                    fila[4] = ap.getNombre_Periodo();
                    
                    dtmBusqueda.addRow(fila);
                    p++;
                }
            }            
        }        
             
        ClsConexion.closeConnection(con);
        tblAlumno.setModel(dtmBusqueda);
        tblAlumno.setRowHeight(alturaCelda);
        
        tblAlumno.removeColumn(tblAlumno.getColumnModel().getColumn(0));
        TableColumn  columnaN =tblAlumno.getColumnModel().getColumn(0);
        columnaN.setPreferredWidth(30);
        TableColumn  colAlumno =tblAlumno.getColumnModel().getColumn(1);
        colAlumno.setPreferredWidth(250);
        TableColumn  colAula =tblAlumno.getColumnModel().getColumn(2);
        colAula.setPreferredWidth(150);
        
        TableCellRenderer tcr =  tblAlumno.getTableHeader().getDefaultRenderer();
        ClsMisc.miRender mr = new ClsMisc.miRender(tcr);
        mr.getTableCellRendererComponent(tblAlumno, fila, true, true, WIDTH, 0);
        mr.getTableCellRendererComponent(tblAlumno, fila, true, true, WIDTH, 2);
        
        tblAlumno.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
    }
    
    private void CargarComboAula()
    {
        codigoAula.clear();
        ClsSeccion secciones = new ClsSeccion();
        ArrayList<ClsEntidadSeccion> seccion =  secciones.ListarSeccion();
        Iterator it = seccion.iterator();
        DefaultComboBoxModel DefaultComboBoxModel = new DefaultComboBoxModel();
        DefaultComboBoxModel.removeAllElements();
        cmbAula.removeAllItems();
        String fila2[] = new String[5];        
        while(it.hasNext())
        {
        ClsEntidadSeccion Seccion = (ClsEntidadSeccion) it.next();             
        fila2[0] = Seccion.getNombre_Seccion();
        fila2[1] = Seccion.getEstado_Periodo();       
        fila2[3] = Seccion.getNombre_Periodo();

            if (codigoPeriodo.get(cmbPeriodo.getSelectedIndex()).equals(Seccion.getId_Periodo())) 
            {
                codigoAula.add(Seccion.getId_Seccion());
                DefaultComboBoxModel.addElement(fila2[0]);
            }       
        }
        cmbAula.setModel(DefaultComboBoxModel);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnReporte;
    private javax.swing.JComboBox<String> cmbAula;
    private javax.swing.JComboBox<String> cmbPeriodo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.ButtonGroup rbnGrupo;
    private javax.swing.JRadioButton rbnNoAdeudo;
    private javax.swing.JTable tblAlumno;
    private javax.swing.JTabbedPane tpnAlumno;
    private javax.swing.JTextField txtBusqueda;
    // End of variables declaration//GEN-END:variables
}
