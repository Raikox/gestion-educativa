/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package PckInterfaces;

import PckEntidad.ClsEntidadAsistencia;
import PckEntidad.ClsEntidadPeriodo;
import PckEntidad.ClsEntidadSeccion;
import PckHilo.HiloAsistencia;
import PckHilo.HiloReloj;
import PckNegocio.ClsPeriodo;
import PckNegocio.ClsSeccion;
import java.awt.Font;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Iterator;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.data.JRBeanCollectionDataSource;
import net.sf.jasperreports.engine.util.JRLoader;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author Sistemas
 */
public class FrmAlimentacionReporte extends javax.swing.JInternalFrame {
    ArrayList<String> codigoSeccion = new ArrayList();
    ArrayList<String> codigoPeriodo = new ArrayList();
    Connection con;
    /**
     * Creates new form FrmAlimentacionReporte
     */
    DefaultListModel dlm = new DefaultListModel();
    Font fuente3 = new Font("DroidSans",Font.BOLD,18);
    HiloAsistencia asis = new HiloAsistencia();
    HiloReloj reloj = new HiloReloj();
    public FrmAlimentacionReporte() {
        initComponents();        
       rellenaPeriodo(); 
       
       txtEntregada.setText(loncherasEntregadas());
       scrollPaneContenedor = new javax.swing.JScrollPane();
       scrollPaneContenedor.setViewportView(asis);
       pnlAsistencia.add(scrollPaneContenedor, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 30, 170, 190));
       //
       reloj.setFont(fuente3);        
       reloj.setDisabledTextColor(new java.awt.Color(0, 0, 0));
       reloj.setEnabled(false);
       jPanel1.add(reloj, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 30, 100, 40));
       txtSolicitada.setText(obtenerComidas());
    }
    
    private final javax.swing.JScrollPane scrollPaneContenedor;
    
    
     private String obtenerComidas()
    {
        String texto=null;
        //leemos archivo de texto para extraer clave
        String url ="/Data/p004.txt";
        //contenido del fichero
        String content;  
        //ruta completa al fichero que deseamos leer
        File file = new File(System.getProperty("user.dir")+url); 
        try 
        {
            //leyendo el archivo completo
            FileReader reader = new FileReader(file);

            char[] chars = new char[(int) file.length()];
            reader.read(chars);
            content = new String(chars);
            //cerramos el reader
            
            //eliminamos espacios en blanco (opcional)
            //content = content.replaceAll("\\s","");
            //asignamos cada valor al nuevo vector (usamos como separador la coma)
            String[] vector = content.split(",");
            //mostramos el vector
            //for (String vector1 : vector) {
            //System.out.println(vector1);                
            //}
            texto=vector[0];
        } catch (IOException e) {
                Logger.getLogger(FrmIngresosEgresos.class.getName()).log(Level.SEVERE, null, e);
        }
        return texto;
    }
    
    
    private void rellenaPeriodo()
    {
        ClsPeriodo periodos = new ClsPeriodo();
        ArrayList<ClsEntidadPeriodo> periodo = periodos.ListarPeriodo();
        dlm.removeAllElements();
        //lista.setModel(dlm);
        Iterator iterator = periodo.iterator();            
        String fila[] = new String[4];
        while(iterator.hasNext())
        {
            ClsEntidadPeriodo Periodo = new ClsEntidadPeriodo();
            Periodo = (ClsEntidadPeriodo) iterator.next();
            fila[0] = Periodo.getId_Periodo();
            fila[1] = Periodo.getNombre_Periodo();
            fila[2] = Periodo.getEstado_Periodo();
            if(fila[2].equals("Activo"))
            {
                dlm.addElement(fila[1]);     
                codigoPeriodo.add(fila[0]);
            }
          
        }     
        lista.setModel(dlm); 
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        pnlAsistencia = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        btnAlimentosDia = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        txtCon = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        txtSolicitada = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtEntregada = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtSobrante = new javax.swing.JTextField();
        btnCalcular = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        lista = new javax.swing.JList<>();
        jLabel6 = new javax.swing.JLabel();

        setTitle("Lonchera");

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jScrollPane1.setBorder(null);

        pnlAsistencia.setBackground(new java.awt.Color(255, 255, 255));
        pnlAsistencia.setBorder(javax.swing.BorderFactory.createTitledBorder("Asistencias tomadas"));
        pnlAsistencia.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        jScrollPane1.setViewportView(pnlAsistencia);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 90, 210, 260));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnAlimentosDia.setFont(new java.awt.Font("Droid Sans", 0, 11)); // NOI18N
        btnAlimentosDia.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PckIcoMenu/food-apple .png"))); // NOI18N
        btnAlimentosDia.setText("<html> <p align=center>Alimentos</p> <p align=center>del día</p> </html>");
        btnAlimentosDia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAlimentosDiaActionPerformed(evt);
            }
        });
        jPanel2.add(btnAlimentosDia, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 20, 110, -1));

        jButton2.setFont(new java.awt.Font("Droid Sans", 0, 11)); // NOI18N
        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PckIcoMenu/ic_exit_to_app_black_24dp.png"))); // NOI18N
        jButton2.setText("Salir");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 20, 110, 40));

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 390, 290, 80));

        jLabel2.setFont(new java.awt.Font("Droid Sans", 1, 12)); // NOI18N
        jLabel2.setText("Hora:");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 40, -1, 20));

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Loncheras"));
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel3.setFont(new java.awt.Font("Droid Sans", 0, 11)); // NOI18N
        jLabel3.setText("Alumnos con servicio de alimentación:");
        jPanel3.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 30, -1, -1));

        txtCon.setFont(new java.awt.Font("Droid Sans", 0, 11)); // NOI18N
        txtCon.setDisabledTextColor(new java.awt.Color(51, 51, 51));
        txtCon.setEnabled(false);
        jPanel3.add(txtCon, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 50, 40, -1));

        jLabel1.setFont(new java.awt.Font("Droid Sans", 0, 11)); // NOI18N
        jLabel1.setText("Loncheras solicitadas hoy:");
        jPanel3.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 90, -1, -1));

        txtSolicitada.setFont(new java.awt.Font("Droid Sans", 0, 11)); // NOI18N
        jPanel3.add(txtSolicitada, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 110, 40, -1));

        jLabel4.setFont(new java.awt.Font("Droid Sans", 0, 11)); // NOI18N
        jLabel4.setText("Loncheras que serán entregadas hoy:");
        jPanel3.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 150, -1, -1));

        txtEntregada.setFont(new java.awt.Font("Droid Sans", 0, 11)); // NOI18N
        txtEntregada.setDisabledTextColor(new java.awt.Color(51, 51, 51));
        txtEntregada.setEnabled(false);
        jPanel3.add(txtEntregada, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 170, 40, -1));

        jLabel5.setFont(new java.awt.Font("Droid Sans", 0, 11)); // NOI18N
        jLabel5.setText("Loncheras sobrantes:");
        jPanel3.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 210, -1, -1));

        txtSobrante.setFont(new java.awt.Font("Droid Sans", 0, 11)); // NOI18N
        txtSobrante.setDisabledTextColor(new java.awt.Color(51, 51, 51));
        txtSobrante.setEnabled(false);
        jPanel3.add(txtSobrante, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 230, 40, -1));

        btnCalcular.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PckIcoMenu/calculator.png"))); // NOI18N
        btnCalcular.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCalcularActionPerformed(evt);
            }
        });
        jPanel3.add(btnCalcular, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 230, 30, 20));

        jPanel1.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 90, 230, 260));

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Periodo"));
        jPanel4.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lista.setFont(new java.awt.Font("Droid Sans", 0, 11)); // NOI18N
        lista.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        lista.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                listaValueChanged(evt);
            }
        });
        jScrollPane3.setViewportView(lista);

        jPanel4.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 30, 150, 180));

        jLabel6.setForeground(new java.awt.Color(204, 0, 51));
        jLabel6.setText("Seleccione varios: Ctrl + clic");
        jPanel4.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 230, 140, -1));

        jPanel1.add(jPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 90, 210, 260));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 852, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 499, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAlimentosDiaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAlimentosDiaActionPerformed
        //Obtener secciones que se tomaran lista
        codigoSeccion.clear();
        ClsSeccion seccion = new ClsSeccion();
        ArrayList<ClsEntidadSeccion> SeccionesComida = seccion.ListarSeccionComen();
        Iterator it = SeccionesComida.iterator();
        while(it.hasNext())
        {
            ClsEntidadSeccion Seccion;
            Seccion = (ClsEntidadSeccion) it.next();
            codigoSeccion.add(Seccion.getId_Seccion());
        }
        
        //Consulto las comidas por seccion de acuerdo al codigo     
        ArrayList<ClsEntidadAsistencia> SeccionComen = new ArrayList<>();
        
        int aux=0;  
        int total=0;
        for (String codigoSeccion1 : codigoSeccion) 
        {
            ResultSet comen;
            try {
                comen = seccion.ListarComidasPorSeccion(codigoSeccion.get(aux));
                while(comen.next())
                {
                    //agrego el resultado al arrayList SeccionComen
                    //solo los que están llenos                    
                    if(comen.getString("comen") != null && comen.getString("nombre_seccion") != null)
                    {
                        SeccionComen.add(seccion.produce
                        (
                            comen.getString("comen"), 
                            comen.getString("nombre_seccion")
                        ));     
                        total = total + Integer.parseInt(comen.getString("comen"));
                    }
                    
                }
            } catch (SQLException ex) {
                Logger.getLogger(FrmAlimentacionReporte.class.getName()).log(Level.SEVERE, null, ex);
            } catch (Exception ex) {
                Logger.getLogger(FrmAlimentacionReporte.class.getName()).log(Level.SEVERE, null, ex);
            }
            aux++;
        }
        HashMap p = new HashMap();
        p.put("total", String.valueOf(total));
        //Generación reporte
        String  urlI ="/Reportes/RptAlimentacionConsolidado.jasper";            
            JRBeanCollectionDataSource ds = new JRBeanCollectionDataSource(SeccionComen);
            JasperReport report;
            JasperPrint print;
            try
            {                
                report = (JasperReport) JRLoader.loadObject(System.getProperty("user.dir")+urlI);                            
                print = JasperFillManager.fillReport(report, p,ds);
                JasperViewer view = new JasperViewer(print,false);
                view.setTitle("Reporte Alimentación del día");
                view.setVisible(true);                                
            }
            catch(JRException ex)
            {
                ex.printStackTrace();
            } 
        
         
        
    }//GEN-LAST:event_btnAlimentosDiaActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        asis.terminate();
        this.dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    private String loncherasEntregadas()
    {
        String lonchera="";
        codigoSeccion.clear();
        ClsSeccion seccion = new ClsSeccion();
        ArrayList<ClsEntidadSeccion> SeccionesComida = seccion.ListarSeccionComen();
        Iterator it = SeccionesComida.iterator();
        while(it.hasNext())
        {
            ClsEntidadSeccion Seccion;
            Seccion = (ClsEntidadSeccion) it.next();
            codigoSeccion.add(Seccion.getId_Seccion());
        }
        
        //Consulto las comidas por seccion de acuerdo al codigo     
        ArrayList<ClsEntidadAsistencia> SeccionComen = new ArrayList<>();
        
        int aux=0;  
        int total=0;
        for (String codigoSeccion1 : codigoSeccion) 
        {
            ResultSet comen;
            try {
                comen = seccion.ListarComidasPorSeccion(codigoSeccion.get(aux));
                while(comen.next())
                {
                    //agrego el resultado al arrayList SeccionComen
                    //solo los que están llenos                    
                    if(comen.getString("comen") != null && comen.getString("nombre_seccion") != null)
                    {
                        SeccionComen.add(seccion.produce
                        (
                            comen.getString("comen"), 
                            comen.getString("nombre_seccion")
                        ));     
                        total = total + Integer.parseInt(comen.getString("comen"));
                    }
                    
                }
            } catch (SQLException ex) {
                Logger.getLogger(FrmAlimentacionReporte.class.getName()).log(Level.SEVERE, null, ex);
            } catch (Exception ex) {
                Logger.getLogger(FrmAlimentacionReporte.class.getName()).log(Level.SEVERE, null, ex);
            }
            aux++;
        }
        lonchera = String.valueOf(total);
        return lonchera;
    }
    
    
    private void listaValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_listaValueChanged
        int seleccionado[] = lista.getSelectedIndices();
        int limite = seleccionado.length;
        ResultSet rsComida = null;
        ClsPeriodo p = new ClsPeriodo();
        int total=0;
        int i=0;
        for (i=0;i<limite;i++)
        {
            try 
            { 
                System.out.println("periodo: "+codigoPeriodo.get(lista.getSelectedIndex()));
                rsComida = p.SeleccionarComidaPeriodo(codigoPeriodo.get(seleccionado[i]));
                while(rsComida.next())
                {
                    total = total + Integer.parseInt(rsComida.getString("comida"));
                }
            } catch (Exception ex) 
            {
                Logger.getLogger(FrmAlimentacionReporte.class.getName()).log(Level.SEVERE, null, ex);
            }
            txtCon.setText(String.valueOf(total));
        }
    }//GEN-LAST:event_listaValueChanged

    private void btnCalcularActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCalcularActionPerformed
        try
        {
            int total;
            int solicitado;
            int entregado;        
            solicitado = Integer.parseInt(txtSolicitada.getText());
            entregado = Integer.parseInt(txtEntregada.getText());
            total = solicitado - entregado;
            txtSobrante.setText(String.valueOf(total));
            escribirComida(txtSolicitada.getText());
        }
        catch(Exception ex)
        {
            JOptionPane.showMessageDialog(this, "Revise los campos", "error", JOptionPane.ERROR_MESSAGE);
        }
        
    }//GEN-LAST:event_btnCalcularActionPerformed

    private void escribirComida(String comidas)
    {
        String url ="/Data/p004.txt";
        File f = new File(System.getProperty("user.dir")+url);
        try
        {
            FileWriter w = new FileWriter(f);
            try (BufferedWriter bw = new BufferedWriter(w); PrintWriter wr = new PrintWriter(bw)) 
            {
                wr.write(comidas);
                wr.close();
                bw.close();
            }
        }
        catch(IOException ex)
        {
            Logger.getLogger(FrmIngresosEgresos.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAlimentosDia;
    private javax.swing.JButton btnCalcular;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JList<String> lista;
    private javax.swing.JPanel pnlAsistencia;
    private javax.swing.JTextField txtCon;
    private javax.swing.JTextField txtEntregada;
    private javax.swing.JTextField txtSobrante;
    private javax.swing.JTextField txtSolicitada;
    // End of variables declaration//GEN-END:variables
}
