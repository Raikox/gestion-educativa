/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package PckInterfaces;

import ClsEntidadReporte.ClsAlumnoBoleta;
import PckConexion.ClsConexion;
import PckEntidad.ClsEntidadBoletaBoletaDetalle;
import PckEntidad.ClsEntidadBoletaBoletaImpresion;
import PckEntidad.ClsEntidadDetalleBoleta;
import PckEntidad.ClsEntidadNivel;
import PckEntidad.ClsEntidadPeriodo;
import PckEntidad.ClsEntidadSeccion;
import PckNegocio.ClsAlumno;
import PckNegocio.ClsBoleta;
import PckNegocio.ClsDetalleBoleta;
import PckNegocio.ClsNivel;
import PckNegocio.ClsPeriodo;
import PckNegocio.ClsSeccion;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.sql.Connection;
import java.sql.ResultSet;
import java.text.DecimalFormat;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Iterator;
import java.util.Map;
import java.util.logging.Level;

import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JRParameter;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.data.JRBeanCollectionDataSource;
import net.sf.jasperreports.engine.design.JasperDesign;
import net.sf.jasperreports.engine.xml.JRXmlLoader;
import net.sf.jasperreports.view.JasperViewer;
import static prymatricula.ClsMisc.obtenerAnioActual;
import static prymatricula.ClsMisc.obtenerMesNumero;

/**
 *
 * @author Sistemas
 */
public class FrmImpresionBoleta extends javax.swing.JInternalFrame {

    //Codigos de los combos
    ArrayList<String> codigoNivel = new ArrayList();
    ArrayList<String> codigoPeriodo = new ArrayList();
    ArrayList<String> codigoSeccion = new ArrayList();
   
    Connection con=null;
    public FrmImpresionBoleta() {
        initComponents();
        cargaComboNivel();
        cargaComboPeriodo();
        if(cmbPeriodo.getSelectedIndex() != -1)
        {            
            cargaComboSeccion();
        }
        txtCorrelativo.setText(obtenerCorrelativo());
        txtDia.setText(obtenerDiaCorrelativo()); 
        cbxMensualidad.setSelected(true);
        cbxExcel.setSelected(true);
        cbxTodos.setSelected(true);
        cargaMeses();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        cmbNivel1 = new javax.swing.JComboBox();
        lblNivel = new javax.swing.JLabel();
        cmbPeriodo = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        cmbSeccion = new javax.swing.JComboBox();
        lblSeccion = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        txtCorrelativo = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtDia = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        btnSalir = new javax.swing.JButton();
        btnImprimir = new javax.swing.JButton();
        cbxExcel = new javax.swing.JCheckBox();
        jLabel7 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        lstMeses = new javax.swing.JList();
        cbxMensualidad = new javax.swing.JCheckBox();
        cbxTodos = new javax.swing.JCheckBox();
        jLabel2 = new javax.swing.JLabel();
        txtMonto = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtCada = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();

        setTitle("Impresión Boletas");
        setToolTipText("");

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Seleccione aula"));
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        cmbNivel1.setFont(new java.awt.Font("Droid Sans", 0, 11)); // NOI18N
        cmbNivel1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmbNivel1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbNivel1ItemStateChanged(evt);
            }
        });
        jPanel3.add(cmbNivel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 40, 180, -1));

        lblNivel.setFont(new java.awt.Font("Droid Sans", 0, 11)); // NOI18N
        lblNivel.setText("Nivel:");
        jPanel3.add(lblNivel, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 40, -1, 20));

        cmbPeriodo.setFont(new java.awt.Font("Droid Sans", 0, 11)); // NOI18N
        cmbPeriodo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmbPeriodo.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbPeriodoItemStateChanged(evt);
            }
        });
        jPanel3.add(cmbPeriodo, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 80, 180, -1));

        jLabel1.setFont(new java.awt.Font("Droid Sans", 0, 11)); // NOI18N
        jLabel1.setText("Periodo:");
        jPanel3.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 80, -1, 20));

        cmbSeccion.setFont(new java.awt.Font("Droid Sans", 0, 11)); // NOI18N
        cmbSeccion.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Ositos", "Loquitos", "Koalas", "Otorongos", "Avestruces", "Dragones de Komodo" }));
        jPanel3.add(cmbSeccion, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 120, 180, -1));

        lblSeccion.setFont(new java.awt.Font("Droid Sans", 0, 11)); // NOI18N
        lblSeccion.setText("Aula:");
        jPanel3.add(lblSeccion, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 120, -1, 20));

        jPanel1.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 20, 300, 180));

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Correlativo y fecha"));
        jPanel4.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txtCorrelativo.setFont(new java.awt.Font("Droid Sans", 0, 11)); // NOI18N
        jPanel4.add(txtCorrelativo, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 30, 120, -1));

        jLabel5.setFont(new java.awt.Font("Droid Sans", 0, 11)); // NOI18N
        jLabel5.setText("A partir de:");
        jPanel4.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 30, -1, 20));

        jLabel6.setFont(new java.awt.Font("Droid Sans", 0, 11)); // NOI18N
        jLabel6.setText("Día actual:");
        jPanel4.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 60, -1, -1));

        txtDia.setFont(new java.awt.Font("Droid Sans", 0, 11)); // NOI18N
        jPanel4.add(txtDia, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 60, 120, -1));

        jPanel1.add(jPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 210, 240, 100));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Opciones"));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnSalir.setBackground(new java.awt.Color(153, 153, 153));
        btnSalir.setFont(new java.awt.Font("Droid Sans", 0, 11)); // NOI18N
        btnSalir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PckIconos/ic_exit_to_app_black_24dp.png"))); // NOI18N
        btnSalir.setText("Salir");
        btnSalir.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnSalir.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirActionPerformed(evt);
            }
        });
        jPanel2.add(btnSalir, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 60, 70, 50));

        btnImprimir.setFont(new java.awt.Font("Droid Sans", 0, 11)); // NOI18N
        btnImprimir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PckIcoMenu/ic_print_black_24dp.png"))); // NOI18N
        btnImprimir.setText("Imprimir");
        btnImprimir.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnImprimir.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnImprimir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnImprimirActionPerformed(evt);
            }
        });
        jPanel2.add(btnImprimir, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 60, -1, 50));

        cbxExcel.setFont(new java.awt.Font("Droid Sans", 0, 11)); // NOI18N
        cbxExcel.setText("exportar csv");
        jPanel2.add(cbxExcel, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 25, 90, -1));

        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PckIcoMenu/file-excel.png"))); // NOI18N
        jPanel2.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 20, -1, 30));

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 320, 240, 130));

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));
        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder("Filtro"));
        jPanel5.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lstMeses.setFont(new java.awt.Font("Droid Sans", 0, 11)); // NOI18N
        lstMeses.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(lstMeses);

        jPanel5.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 170, 160, 230));

        cbxMensualidad.setBackground(new java.awt.Color(255, 255, 255));
        cbxMensualidad.setFont(new java.awt.Font("Droid Sans", 0, 11)); // NOI18N
        cbxMensualidad.setText("Solo mensualidades");
        cbxMensualidad.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbxMensualidadItemStateChanged(evt);
            }
        });
        jPanel5.add(cbxMensualidad, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 20, -1, -1));

        cbxTodos.setBackground(new java.awt.Color(255, 255, 255));
        cbxTodos.setFont(new java.awt.Font("Droid Sans", 0, 11)); // NOI18N
        cbxTodos.setText("Ignorar deudas");
        cbxTodos.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbxTodosItemStateChanged(evt);
            }
        });
        cbxTodos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxTodosActionPerformed(evt);
            }
        });
        jPanel5.add(cbxTodos, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 50, 120, -1));

        jLabel2.setFont(new java.awt.Font("Droid Sans", 0, 11)); // NOI18N
        jLabel2.setText("Establecer monto:");
        jPanel5.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 90, -1, 20));

        txtMonto.setFont(new java.awt.Font("Droid Sans", 0, 11)); // NOI18N
        txtMonto.setEnabled(false);
        jPanel5.add(txtMonto, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 90, 50, -1));

        jLabel3.setFont(new java.awt.Font("Droid Sans", 0, 11)); // NOI18N
        jLabel3.setText("Cada ");
        jPanel5.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 130, -1, 20));

        txtCada.setFont(new java.awt.Font("Droid Sans", 0, 11)); // NOI18N
        jPanel5.add(txtCada, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 130, 30, -1));

        jLabel4.setFont(new java.awt.Font("Droid Sans", 0, 11)); // NOI18N
        jLabel4.setText("boletas aumentar 1 día");
        jPanel5.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 130, 120, 20));

        jPanel1.add(jPanel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 20, 240, 430));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 637, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 469, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cmbNivel1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbNivel1ItemStateChanged
        if(cmbNivel1.getSelectedIndex() != -1)
        {        
            cargaComboPeriodo(); 
            cargaComboSeccion();
        }   
    }//GEN-LAST:event_cmbNivel1ItemStateChanged

    private void cmbPeriodoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbPeriodoItemStateChanged
        if(cmbPeriodo.getSelectedIndex() != -1)
        {

            System.out.println("Periodo: "+cmbPeriodo.getSelectedItem()+" ID: "+codigoPeriodo.get(cmbPeriodo.getSelectedIndex()));
            cargaComboSeccion();
        }

    }//GEN-LAST:event_cmbPeriodoItemStateChanged

    private void btnImprimirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnImprimirActionPerformed

        if(cbxTodos.isSelected())
        {
            try
            {
                lstMeses.getSelectedValue().toString();
                
                DecimalFormat fnumero=new DecimalFormat("000000");
                DecimalFormat fdia=new DecimalFormat("00");
                //Correlativo que ira aumentando.
                String correlativo = txtCorrelativo.getText();
                int corre = Integer.parseInt(correlativo);
                int corre2 = Integer.parseInt(correlativo);
                //codigo de aula para obtener los aulmnos de la misma
                String idAula = codigoSeccion.get(cmbSeccion.getSelectedIndex());

                //ArrayList de campos principales, este pedira su detalle
                ArrayList<ClsEntidadBoletaBoletaImpresion> beanBoleta = new ArrayList<ClsEntidadBoletaBoletaImpresion>();

                //ArrayList para obtener Detalle de los Alumnos
                ArrayList<ClsEntidadDetalleBoleta> detalleBoleta;

                //variables de la boleta
                String nombreBoleta="";
                String fechaBoleta="";
                String fechaBoleta2="";
                String codigoBoleta="";
                Double totalBoleta=0.0;
                String totalBoleta2="";
                //variables detalle boleta (caso se seleccione mensualidad)
                String descripcionDetalle = null;
                String unitarioDetalle = null;
                String importeDetalle = null;

                //Obtenemos los alumnos por seccion
                ClsAlumno alu = new ClsAlumno();
                ClsBoleta bol = new ClsBoleta();
                ClsDetalleBoleta dbol = new ClsDetalleBoleta();
                String idAlumno;
                String idBoleta = null;
                ResultSet rsAlumno;    
                int dia=1;
                int dia2=1;
                int cont=1;
                int cont2=1;
                ArrayList<ClsAlumnoBoleta> impresion = new ArrayList<ClsAlumnoBoleta>();
                try 
                {            
                    con = ClsConexion.getConection();
                    System.out.println("Aula: "+idAula);
                    rsAlumno = alu.SeleccionarAlumnoSeccion(idAula,con);  
                    String anio = obtenerAnioActual();
                    totalBoleta2 = txtMonto.getText();
                    String strmes = lstMeses.getSelectedValue().toString();
                    int numMes = obtenerMesNumero(strmes);                                
                    int boletaLimite=Integer.parseInt(txtCada.getText());
                    int mes = numMes+1;
                    dia = Integer.parseInt(txtDia.getText());
                    while(rsAlumno.next())
                    {                
                        idAlumno = rsAlumno.getString("id_matricula");
                        nombreBoleta = rsAlumno.getString("apellidos_nombres");
                        
                        //BOLETA                
                        if(cbxMensualidad.isSelected() && cbxTodos.isSelected())
                        { 
                            
                            //cada N boletas el dia aumentara en 1
                            if(cont>boletaLimite)
                            {
                                dia=dia+1;
                                cont=1;
                            }

                            fechaBoleta = dia+"/"+mes+"/"+anio;
                            System.out.println("fecha: "+fechaBoleta);

                            //instanciamos la clase para agregar datos a la boleta
                            ClsAlumnoBoleta boletax = new ClsAlumnoBoleta();
                            boletax.setNombre(nombreBoleta);
                            boletax.setCodigo(fnumero.format(corre));
                            boletax.setFecha(fechaBoleta);
                            boletax.setTotal(totalBoleta2);
                            impresion.add(boletax);
                            //el correlativo se aumenta por boleta
                            corre++;  
                            cont++;                              
                            
                            //aqui acaba el de excel
                            
                            ////////////////////////////////////////////////////////
                             dia2 = Integer.parseInt(txtDia.getText());
                                //cada N boletas el dia aumentara en 1
                                if(cont2>boletaLimite)
                                {
                                    dia2=dia2+1;
                                    cont2=1;
                                }

                                fechaBoleta2 = dia2+"/"+mes+"/"+anio;
                                System.out.println("fecha aleatoria: "+fechaBoleta2);

                                //instanciamos la clase para agregar datos a la boleta (beanBoleta)
                                ClsEntidadBoletaBoletaImpresion boleta = new ClsEntidadBoletaBoletaImpresion(fnumero.format(corre2),nombreBoleta,fechaBoleta2);
                                beanBoleta.add(boleta);

                                //el correlativo se aumenta por boleta
                                corre2++;

                                //DETALLE BOLETA
                                //se llena el arrayList con el detalle de la boleta, para recorrerlo      
                                boleta.addDetalle(new ClsEntidadBoletaBoletaDetalle("MENSUALIDAD "+strmes,
                                        totalBoleta2,totalBoleta2,totalBoleta2)); 
                                cont2++;
                                escribirDiaCorrelativo(fdia.format(dia2));
                                txtDia.setText(obtenerDiaCorrelativo()); 
                        }
                        else if(cbxMensualidad.isSelected())
                        {
                            ResultSet rsBoleta = bol.SeleccionarBoletaMatricula(idAlumno, con);
                            while(rsBoleta.next())
                            {
                                totalBoleta =0.0;
                                nombreBoleta = rsBoleta.getString("nombre");
                                fechaBoleta = rsBoleta.getString("fecha_boleta");
                                //codigoBoleta = rsBoleta.getString("num_boleta");
                                //totalBoleta = rsBoleta.getString("total_boleta");
                                idBoleta = rsBoleta.getString("id_boleta");
                                System.out.println("_____________________");
                                System.out.println("boleta: "+idBoleta);
                                System.out.println("Alumno: "+nombreBoleta);
                                System.out.println("******");
                                //DETALLE BOLETA
                                //se llena el arrayList con el detalle de la boleta, para recorrerlo
                                detalleBoleta = dbol.SeleccionarDetalles(idBoleta, con);
                                Iterator it = detalleBoleta.iterator();

                                while(it.hasNext())
                                {
                                    ClsEntidadDetalleBoleta db /*= new ClsEntidadDetalleBoleta()*/;
                                    db = (ClsEntidadDetalleBoleta) it.next();   
                                    if(db.getTipo_Detalle().equals("mensualidad"))
                                    {
                                        descripcionDetalle = db.getDescripcion_Detalle();
                                        System.out.println("descripcion: "+descripcionDetalle);
                                        unitarioDetalle = String.valueOf(db.getUnitario_Detalle());
                                        importeDetalle = String.valueOf(db.getImporte_Detalle()); 
                                        totalBoleta = totalBoleta + db.getImporte_Detalle();
                                        System.out.println("totalBoleta: "+String.valueOf(totalBoleta));
                                    }                 
                                }

                                //instanciamos la clase para agregar datos a la boleta (beanBoleta)
                                ClsEntidadBoletaBoletaImpresion boleta = new ClsEntidadBoletaBoletaImpresion(fnumero.format(corre),nombreBoleta,fechaBoleta);
                                beanBoleta.add(boleta);

                                //el correlativo se aumenta por boleta
                                corre++;

                                boleta.addDetalle(new ClsEntidadBoletaBoletaDetalle
                                (descripcionDetalle,unitarioDetalle,importeDetalle,String.valueOf(totalBoleta))); 
                                //una vez terminado el ciclo de llenado de deudas por cada alumno
                                //creamos un indice que indicará la posicion del arraylist principal (beanAlumno)
                                //obtenemos las deudas del alumno y si esta vacio se removera al alumno 
                                //con el indice obtenido :D
                                int indice=beanBoleta.size();
                                if(boleta.getDetalle().isEmpty() || boleta.getDetalle() == null || totalBoleta == 0.0 )
                                {                            
                                    beanBoleta.remove(indice-1);
                                }
                            }
                        }
                        else
                        {       
                                ResultSet rsBoleta = bol.SeleccionarBoletaMatricula(idAlumno, con);
                            while(rsBoleta.next())
                            {
                                nombreBoleta = rsBoleta.getString("nombre");
                                fechaBoleta = rsBoleta.getString("fecha_boleta");
                                codigoBoleta = rsBoleta.getString("num_boleta");
                                totalBoleta2 = rsBoleta.getString("total_boleta");
                                idBoleta = rsBoleta.getString("id_boleta");

                                //instanciamos la clase para agregar datos a la boleta (beanBoleta)
                                ClsEntidadBoletaBoletaImpresion boleta = new ClsEntidadBoletaBoletaImpresion(fnumero.format(corre),nombreBoleta,fechaBoleta);
                                beanBoleta.add(boleta);

                                //el correlativo se aumenta por boleta
                                corre++;

                                //DETALLE BOLETA
                                //se llena el arrayList con el detalle de la boleta, para recorrerlo
                                detalleBoleta = dbol.SeleccionarDetalles(idBoleta, con);
                                Iterator it = detalleBoleta.iterator();
                                while(it.hasNext())
                                {
                                    ClsEntidadDetalleBoleta db /*= new ClsEntidadDetalleBoleta()*/;
                                    db = (ClsEntidadDetalleBoleta) it.next();            
                                    boleta.addDetalle(new ClsEntidadBoletaBoletaDetalle(db.getDescripcion_Detalle(),String.valueOf(db.getUnitario_Detalle()),String.valueOf(db.getImporte_Detalle()),totalBoleta2)); 
                                }
                            }
                        }
                    }

                    ClsConexion.closeConnection(con);            
                } 
                catch (Exception ex) 
                {
                    Logger.getLogger(FrmImpresionBoleta.class.getName()).log(Level.SEVERE, null, ex);
                    JOptionPane.showMessageDialog(this, ex);
                }
                
                //REPORTE NORMAL
                if(cbxMensualidad.isSelected() && cbxTodos.isSelected() && cbxExcel.isSelected())
                {
                    String  url2 ="/Reportes/RptBoletaBoleta.jasper";
                    String  url3 ="/Reportes/RptBoletaBoleta.jrxml";
                    double contTotal=0.0;
                    double tot;
                    for(ClsAlumnoBoleta i: impresion)
                    {
                        tot = Double.parseDouble(i.total);
                        System.out.println(i);
                        contTotal = contTotal + tot;
                    }
                    Map p = new HashMap();
                    p.put("total", String.valueOf(contTotal));
                    JasperPrint print;
                    JRBeanCollectionDataSource ds = new JRBeanCollectionDataSource(impresion);
                    JasperCompileManager.compileReportToFile(System.getProperty("user.dir")+url3, System.getProperty("user.dir")+url2);              
                    print = JasperFillManager.fillReport(System.getProperty("user.dir")+url2, p,ds);
                    JasperViewer view = new JasperViewer(print,false);
                    view.setTitle("Boletas");
                    view.setVisible(true);

                    //REPORTE

                    try 
                    {
                    //Se compila el reporte
                    String  url ="/Reportes/RptImpresionBoletaBoleta.jrxml";
                    JasperDesign jasperDesign = JRXmlLoader.load(System.getProperty("user.dir") + url);
                    JasperReport ReportMain = JasperCompileManager.compileReport(jasperDesign);
                    System.out.print(System.getProperty("user.dir"));

                    //Se mandan parametros
                    Map<String, Object> params = new HashMap();            
                    params.put("SUBREPORT_DIR", System.getProperty("user.dir") + "\\Reportes\\");
                    //params.put(JRParameter.IS_IGNORE_PAGINATION, true);
                    //Se imprime el reporte
                    JasperPrint printt = JasperFillManager.fillReport(ReportMain, params, new JRBeanCollectionDataSource(beanBoleta));
                    JasperViewer vieww = new JasperViewer(printt, false);
                    vieww.setTitle("Impresion boletas por seccion");
                    vieww.setVisible(true);            
                    //escribimos el correlativo en el que se quedó
                    escribirCorrelativo(fnumero.format(corre));
                    txtCorrelativo.setText(obtenerCorrelativo());

                    } catch (JRException ex) {
                        Logger.getLogger(FrmIngresosEgresos.class.getName()).log(Level.SEVERE, null, ex);
                        JOptionPane.showMessageDialog(this, ex);
                    } 
                }
                else
                {
                    //REPORTE

                    try 
                    {
                    //Se compila el reporte
                    String  url ="/Reportes/RptImpresionBoletaBoleta.jrxml";
                    JasperDesign jasperDesign = JRXmlLoader.load(System.getProperty("user.dir") + url);
                    JasperReport ReportMain = JasperCompileManager.compileReport(jasperDesign);
                    System.out.print(System.getProperty("user.dir"));

                    //Se mandan parametros
                    Map<String, Object> params = new HashMap();            
                    params.put("SUBREPORT_DIR", System.getProperty("user.dir") + "\\Reportes\\");
                    //params.put(JRParameter.IS_IGNORE_PAGINATION, true);
                    //Se imprime el reporte
                    JasperPrint printt = JasperFillManager.fillReport(ReportMain, params, new JRBeanCollectionDataSource(beanBoleta));
                    JasperViewer vieww = new JasperViewer(printt, false);
                    vieww.setTitle("Impresion boletas por seccion");
                    vieww.setVisible(true);            
                    //escribimos el correlativo en el que se quedó
                    escribirCorrelativo(fnumero.format(corre));
                    txtCorrelativo.setText(obtenerCorrelativo());

                    } catch (JRException ex) {
                        Logger.getLogger(FrmIngresosEgresos.class.getName()).log(Level.SEVERE, null, ex);
                        JOptionPane.showMessageDialog(this, ex);
                    } 
                }
                
                
            }
            catch(Exception ex)
            {
                Logger.getLogger(FrmImpresionBoleta.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(null, "Debe seleccionar un mes", "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
        
        
        
    }//GEN-LAST:event_btnImprimirActionPerformed

    private void btnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnSalirActionPerformed

    private void cbxTodosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxTodosActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbxTodosActionPerformed

    private void cbxMensualidadItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbxMensualidadItemStateChanged
        if(cbxMensualidad.isSelected())
        {
            cargaMeses();
        }
    }//GEN-LAST:event_cbxMensualidadItemStateChanged

    private void cbxTodosItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbxTodosItemStateChanged
        if(cbxTodos.isSelected())
        {
            cbxMensualidad.setSelected(true);
            txtMonto.setEnabled(true);
            txtCada.setEnabled(true);
            txtCada.setText("15");
        }
        else
        {
            txtMonto.setEnabled(false);
            txtCada.setEnabled(false);
        }
    }//GEN-LAST:event_cbxTodosItemStateChanged
    
    private void cargaMeses()
    {
       DefaultListModel dlm = new DefaultListModel();
       dlm.removeAllElements();
       dlm.addElement("ENERO");
       dlm.addElement("FEBRERO");
       dlm.addElement("MARZO");
       dlm.addElement("ABRIL");
       dlm.addElement("MAYO");
       dlm.addElement("JUNIO");
       dlm.addElement("JULIO");
       dlm.addElement("AGOSTO");
       dlm.addElement("SEPTIEMBRE");
       dlm.addElement("OCTUBRE");
       dlm.addElement("NOVIEMBRE");
       dlm.addElement("DICIEMBRE");
       lstMeses.setModel(dlm);    
    }
    
    private void escribirCorrelativo(String correlativo)
    {
        String url ="/Data/p002.txt";
        File f = new File(System.getProperty("user.dir")+url);
        try
        {
            FileWriter w = new FileWriter(f);
            try (BufferedWriter bw = new BufferedWriter(w); PrintWriter wr = new PrintWriter(bw)) 
            {
                wr.write(correlativo);
                wr.close();
                bw.close();
            }
        }
        catch(IOException ex)
        {
            Logger.getLogger(FrmIngresosEgresos.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    private void escribirDiaCorrelativo(String diacorrelativo)
    {
        String url ="/Data/p003.txt";
        File f = new File(System.getProperty("user.dir")+url);
        try
        {
            FileWriter w = new FileWriter(f);
            try (BufferedWriter bw = new BufferedWriter(w); PrintWriter wr = new PrintWriter(bw)) 
            {
                wr.write(diacorrelativo);
                wr.close();
                bw.close();
            }
        }
        catch(IOException ex)
        {
            Logger.getLogger(FrmIngresosEgresos.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    private String obtenerCorrelativo()
    {
        String texto=null;
        //leemos archivo de texto para extraer clave
        String url ="/Data/p002.txt";
        //contenido del fichero
        String content;  
        //ruta completa al fichero que deseamos leer
        File file = new File(System.getProperty("user.dir")+url); 
        try 
        {
            //leyendo el archivo completo
            FileReader reader = new FileReader(file);

            char[] chars = new char[(int) file.length()];
            reader.read(chars);
            content = new String(chars);
            //cerramos el reader
            
            //eliminamos espacios en blanco (opcional)
            //content = content.replaceAll("\\s","");
            //asignamos cada valor al nuevo vector (usamos como separador la coma)
            String[] vector = content.split(",");
            //mostramos el vector
            //for (String vector1 : vector) {
            //System.out.println(vector1);                
            //}
            texto=vector[0];
        } catch (IOException e) {
                Logger.getLogger(FrmIngresosEgresos.class.getName()).log(Level.SEVERE, null, e);
        }
        return texto;
    }
    
    private String obtenerDiaCorrelativo()
    {
        String texto=null;
        //leemos archivo de texto para extraer clave
        String url ="/Data/p003.txt";
        //contenido del fichero
        String content;  
        //ruta completa al fichero que deseamos leer
        File file = new File(System.getProperty("user.dir")+url); 
        try 
        {
            //leyendo el archivo completo
            FileReader reader = new FileReader(file);

            char[] chars = new char[(int) file.length()];
            reader.read(chars);
            content = new String(chars);
            //cerramos el reader
            
            //eliminamos espacios en blanco (opcional)
            //content = content.replaceAll("\\s","");
            //asignamos cada valor al nuevo vector (usamos como separador la coma)
            String[] vector = content.split(",");
            //mostramos el vector
            //for (String vector1 : vector) {
            //System.out.println(vector1);                
            //}
            texto=vector[0];
        } catch (IOException e) {
                Logger.getLogger(FrmIngresosEgresos.class.getName()).log(Level.SEVERE, null, e);
        }
        return texto;
    }
    
    private void cargaComboNivel()
    {
        ClsNivel niveles = new ClsNivel();
        ArrayList<ClsEntidadNivel> nivel =  niveles.SeleccionarNivel();
        Iterator it = nivel.iterator();
        DefaultComboBoxModel dtm = new DefaultComboBoxModel();
        dtm.removeAllElements();
        cmbNivel1.removeAllItems();
                
        while(it.hasNext())
        {
        ClsEntidadNivel Nivel = new ClsEntidadNivel();
        Nivel = (ClsEntidadNivel) it.next();       
        codigoNivel.add(Nivel.getNivel_id());
        dtm.addElement(Nivel.getNivel_nombre());                
        }
        cmbNivel1.setModel(dtm); 
    }
    private void cargaComboPeriodo()
    {
        codigoPeriodo.clear();
        ClsPeriodo periodos = new ClsPeriodo();
        ArrayList<ClsEntidadPeriodo> periodo =  periodos.ListarPeriodo();
        Iterator iterator = periodo.iterator();
        DefaultComboBoxModel DefaultComboBoxModel = new DefaultComboBoxModel();
        DefaultComboBoxModel.removeAllElements();
        cmbPeriodo.removeAllItems();
        String fila[] = new String[4];     
        while(iterator.hasNext())
        {
        ClsEntidadPeriodo Periodo = new ClsEntidadPeriodo();
        Periodo = (ClsEntidadPeriodo) iterator.next();               
        fila[0] = Periodo.getNombre_Periodo();
        fila[1] = Periodo.getEstado_Periodo();        
            if(Periodo.getEstado_Periodo().equals("Activo") &&                     
            codigoNivel.get(cmbNivel1.getSelectedIndex()).equals(Periodo.getNivel_Id()))
            {   
            codigoPeriodo.add(Periodo.getId_Periodo());     
            DefaultComboBoxModel.addElement(Periodo.getNombre_Periodo());        
            }
        }
        cmbPeriodo.setModel(DefaultComboBoxModel);       
    }
    private void cargaComboSeccion()
    {    
        codigoSeccion.clear();
        ClsSeccion secciones = new ClsSeccion();
        ArrayList<ClsEntidadSeccion> seccion =  secciones.ListarSeccion();
        Iterator it = seccion.iterator();
        DefaultComboBoxModel DefaultComboBoxModel = new DefaultComboBoxModel();
        DefaultComboBoxModel.removeAllElements();
        cmbSeccion.removeAllItems();
        String fila2[] = new String[5];        
        while(it.hasNext())
        {
        ClsEntidadSeccion Seccion = (ClsEntidadSeccion) it.next();             
        fila2[0] = Seccion.getNombre_Seccion();
        fila2[1] = Seccion.getEstado_Periodo();       
        fila2[3] = Seccion.getNombre_Periodo();
        
            if (codigoPeriodo.get(cmbPeriodo.getSelectedIndex()).equals(Seccion.getId_Periodo())) 
            {
                codigoSeccion.add(Seccion.getId_Seccion());
                DefaultComboBoxModel.addElement(fila2[0]);
            }       
        }
        cmbSeccion.setModel(DefaultComboBoxModel);         
    }
    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnImprimir;
    private javax.swing.JButton btnSalir;
    private javax.swing.JCheckBox cbxExcel;
    private javax.swing.JCheckBox cbxMensualidad;
    private javax.swing.JCheckBox cbxTodos;
    private javax.swing.JComboBox cmbNivel1;
    private javax.swing.JComboBox cmbPeriodo;
    private javax.swing.JComboBox cmbSeccion;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblNivel;
    private javax.swing.JLabel lblSeccion;
    private javax.swing.JList lstMeses;
    private javax.swing.JTextField txtCada;
    private javax.swing.JTextField txtCorrelativo;
    private javax.swing.JTextField txtDia;
    private javax.swing.JTextField txtMonto;
    // End of variables declaration//GEN-END:variables
}
